{"/about":{"title":"About","data":{"":"This is the about page! This page is shown on the navbar.Advanced"}},"/documentation":{"title":"Documentation","data":{}},"/":{"title":"Rockets - Rapid Enterprise Development Toolkit","data":{"":"Rockets\nRapid Enterprise Development Toolkit\nThe Rockets API library is a collection of NestJS modules that were created for the rapid development of enterpise level APIs.Through over 15 years of experience, we have made enterprise-level development more agile. Rockets is a combination of all these lessons, best practices and tools packaged and made available to you.","motivation#Motivation":"This project aims to help quickly build an enterprise-level core for projects that share the same business rules across web, mobile, server and desktop.","goals#Goals":"Provide solid stable foundational APIs to build enterprise applications.\nFocus on extensibility over customization.\nGreat development experience through well thought out APIs and documentation\nFlexibility over business rules.","architecture#Architecture":"Every effort has been made to develop Rockets with an abstract mindset, and introduce as\nfew opinions into the code base as possible (within reason).","api#API":"The Rockets API library is a collection of pluggable modules that enables you to rapidly stand up an API\nfor your enterprise project, and quickly extend and adapt it to your use case and requirements with zero boilerplate.\nDeveloped with the NestJS Framework\nDozens of pluggable open source modules\nUse with any community or custom NestJS module","web--desktop#Web & Desktop":"","react#React":"Abstract Logical Component Layer\nUI library developed using Material UI","flutter#Flutter":"* Flutter support is on the roadmap.\nAbstract Logical Component Layer\nUI library developed using Mix","ui-compatibility#UI Compatibility":"Bring your own logical components and use one of our UI libraries\nBring your own UI library and use our logical components\nMix in community or custom components.","mobile#Mobile":"We use and recommend:\nExpo\nReact Native\nFlutter"}},"/overview":{"title":"Philosophy","data":{}},"/reference/rockets-react/README":{"title":"Rockets React","data":{"":"Rockets React • Docs\nRapid Enterprise Development Toolkit\nA collection of React components that implement the Rockets React UI\nthat were created for the rapid development of enterpise level UIs.","contributing#Contributing":"This project is currently in alpha testing, however, feedback is highly\nappreciated and encouraged!Pull requests will be gratefully accepted in the very near future,\nonce we have finalized our Contributor License Agreement."}},"/reference/rockets-react/packages":{"title":"Rockets React","data":{"":"Rockets React • Docs","packages#Packages":"@concepta/react-auth-provider\n@concepta/react-data-provider\n@concepta/react-material-ui"}},"/reference/rockets-react/react-auth-provider/README":{"title":"@concepta/react-auth-provider","data":{"":"@concepta/react-auth-provider • DocsRockets React / @concepta/react-auth-provider","introduction#Introduction":"","overview-of-the-package#Overview of the Package":"@concepta/react-auth-provider is a React library designed to simplify the authentication process, used together with @concepta/react-data-provider. It provides an AuthProvider component and related hooks to manage user authentication, including login, logout, and token management.","features#Features":"Easy integration with existing React applications\nCustomizable authentication paths\nToken management (access and refresh tokens)\nHooks for accessing authentication context\nSupport for custom success and error handlers","getting-started#Getting Started":"","installation#Installation":"To install @concepta/react-auth-provider, run the following command:\nnpm install @concepta/react-auth-provider\nor with yarn:\nyarn add @concepta/react-auth-provider\nEnsure that @concepta/react-data-provider is properly configured before using the auth provider.","components#Components":"","authprovider#AuthProvider":"The AuthProvider component is the core of the @concepta/react-auth-provider package. It wraps your application and provides authentication context to its children.","props#Props":"children: The components that will have access to the authentication context.\nonSuccess: (Optional) A callback function executed upon successful login. Receives the access token as an argument.\nonError: (Optional) A callback function executed if an error occurs during login.","how-to-use-it#How to use it":"Wrap your app with the AuthProvider component\n<AuthProvider>\n  <App />\n</AuthProvider>","success--error-handling#Success / Error Handling":"Use the onSuccess prop to handle successful login events:\nUse the onError prop to handle errors during the login process:\n<AuthProvider\n  onSuccess={(data) =>\n    console.log('Logged in with accessToken and refreshToken:', data)\n  }\n  onError={(error) => console.error('Login Error:', error)}\n>\n  <App />\n</AuthProvider>","methods#Methods":"","dologin#doLogin":"Description: Initiates the login process using the provided login data. The loginData can be a LoginParams object or any custom object.\nParameters:\nloginData: An object containing optionals username, password, loginPath, and any other custom key-value pairs.\nThe loginPath will be used to fire the request to this path instead of the default /auth/signin\nExample Usage:\nconst loginData = { username: 'user', password: 'pass' };\ndoLogin(loginData);\nWith custom parameters\ninterface CustomLogin {\n    email: string\n    secret: string\n    rememberMe: boolean\n}\nconst customLoginData = { email: 'user@provider.com', secret: 'pass', rememberMe: true };\ndoLogin(customLoginData);\nYou can specify a custom login path in the loginData when calling doLogin:\nconst loginData = {\n  username: 'user',\n  password: 'pass',\n  loginPath: '/custom-login',\n};\ndoLogin(loginData);","dologout#doLogout":"Description: Clears the authentication tokens from local storage and performs logout actions.","state#State":"isPending (boolean): Status of the auth request.\nuser (object): Holds the user information.\nsetUser (object) => void: Function to update the user information.\naccessToken (string): Stores the access token.\nrefreshToken (string): Stores the refresh token.","user#user":"Description: Holds the current user information. Initially, it may be undefined until the user logs in.\nUsage: This state is used to store information about the authenticated user. It can be used in various parts of your application to display user-specific data or to conditionally render components based on the user's authentication status.\nAccessing User Information:\nconst { user } = useAuth();\nreturn (\n  <div>{user ? <p>Welcome, {user.username}</p> : <p>Please log in</p>}</div>\n);","setuser#setUser":"Description: Function to update the user state.\nUsage: This function is used to update the user state with new information, typically after a successful login or when fetching user details from a backend service.\nSetting User Information After Login:In the onSuccess callback, you can set the user information:\nconst onSuccess = (accessToken) => {\n  // Fetch user information from the backend using the access token\n  fetchUserDetails(accessToken).then((userDetails) => {\n    setUser(userDetails);\n  });\n};\n// Usage in AuthProvider\n<AuthProvider onSuccess={onSuccess}>\n  <App />\n</AuthProvider>;"}},"/reference/rockets-react/react-auth-provider/functions/AuthProvider":{"title":"Function: AuthProvider()","data":{"":"@concepta/react-auth-provider • DocsRockets React / @concepta/react-auth-provider / AuthProvider\nAuthProvider(__namedParameters): Element","parameters#Parameters":"Parameter\tType\t__namedParameters\tPropsWithChildren<AuthProviderProps>","returns#Returns":"Element","defined-in#Defined in":"index.tsx:23"}},"/reference/rockets-react/react-auth-provider/functions/useAuth":{"title":"Function: useAuth()","data":{"":"@concepta/react-auth-provider • DocsRockets React / @concepta/react-auth-provider / useAuth\nuseAuth(): AuthProviderTypes","returns#Returns":"AuthProviderTypes","defined-in#Defined in":"index.tsx:21"}},"/reference/rockets-react/react-auth-provider/interfaces/LoginParams":{"title":"Interface: LoginParams","data":{"":"@concepta/react-auth-provider • DocsRockets React / @concepta/react-auth-provider / LoginParams","indexable#Indexable":"[key: string]: string | number | boolean","properties#Properties":"Property\tType\tDefined in\tloginPath?\tstring\tinterfaces/index.ts:2\tpassword?\tstring\tinterfaces/index.ts:4\tusername?\tstring\tinterfaces/index.ts:3"}},"/reference/rockets-react/react-auth-provider/globals":{"title":"@concepta/react-auth-provider","data":{"":"@concepta/react-auth-provider • DocsRockets React / @concepta/react-auth-provider","interfaces#Interfaces":"LoginParams","functions#Functions":"AuthProvider\nuseAuth"}},"/reference/rockets-react/react-data-provider/README":{"title":"@concepta/react-data-provider","data":{"":"@concepta/react-data-provider • DocsRockets React / @concepta/react-data-provider","overview#Overview":"Rockets Data Access is a library for React applications that simplifies API interactions by integrating with Axios, managing authentication tokens and providing custom hooks for handling asynchronous requests and state. It enhances code maintainability and reliability with type safety, centralized configuration, and built-in token management, making it easier to handle HTTP requests and state management in a standardized way.","important#Important":"This module only helps you to handle basic requests on your application. There is no magic, you are still responsible for providing correct midlewares to auth requests, handle responses and errors","getting-started#Getting started":"","this-package-will-expose-the-following#This package will expose the following":"The ClientProvider context that manages the base URL and error handling for token refresh operations, ensuring consistent configuration and error management across the application.\nThe useDataProvider hook that provides a set of functions (post, get, put, patch, delete) to simplify making authenticated HTTP requests and handling responses.\nThe useQuery hook to manage the state and lifecycle of asynchronous functions, handling loading, success, and error states automatically.","important-1#Important":"You have to provide api information to dataProvider make the requests correctly\nYou have to provide utility funcions like getAccessToken, getNewToken (Refresh) so dataProvider can handle the requests correctly","installation--config#Installation & config":"First add the Data Provider package to your project. You can install it using npm or yarn:\nnpm install @concepta/react-data-provider\nyarn add @concepta/react-data-provider","using-the-clientprovider#Using the ClientProvider":"The ClientProvider component is essential for setting up the context that the Data Provider uses to manage the base URL and handle token refresh errors. It ensures that your application has a consistent configuration for making HTTP requests. Here's how you can use it in your application:","wrap-your-app-with-clientprovider#Wrap Your App with ClientProvider:":"To use the ClientProvider, wrap it around your application's root component. This is typically done in your index.tsx or App.tsx file. Provide the baseUrl and onRefreshTokenError props if needed.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ClientProvider } from '@concepta/react-data-provider';\nimport App from './App';\nReactDOM.render(\n  <ClientProvider\n    baseUrl=\"YOUR_API_URL\"\n    onRefreshTokenError={(error) => {\n      console.error('Token refresh error:', error);\n      // Handle token refresh error, e.g., redirect to login\n    }}\n  >\n    <App />\n  </ClientProvider>,\n  document.getElementById('root'),\n);\nbaseUrl (optional): The base URL for all HTTP requests. This can be an environment variable instead.\nonRefreshTokenError (optional): A callback function that handles errors occurring during the token refresh process.","baseurl-in-the-env-file#BaseUrl in the .env file":"If you don't provide a baseUrl prop to your ClientProvider, you have to add a variable to your .env file called NEXT_PUBLIC_API_URL.","env#.env":"NEXT_PUBLIC_API_URL=\"[YOUR API BASE URL]\nIf you apply both methods, Data Provider will use the url provided for the baseUrl prop in <ClientProvider>","api-request-methods-and-parameters-in-usedataprovider#API Request Methods and Parameters in useDataProvider":"The useDataProvider hook provides an easy way to make HTTP requests using various methods: POST, GET, PUT, PATCH, and DELETE. Each method accepts specific parameters that help configure the request. Below is a detailed explanation of each method and its parameters.","shared-parameters#Shared parameters":"All of the requests accepts these shared parameters:\nuri (string): The endpoint URI.\nheaders (Record<string, string>, optional): Additional headers to include in the request.\nqueryParams (Record<string, string | string[] | number | undefined>, optional): Query parameters to append to the URL.\nbody (TRequestBody, optional): The request payload.\nsignal (AbortSignal, optional): Signal to abort the request.","post--put--patch-methods#POST | PUT | PATCH Methods":"The post method is used to send data to the server.\nThe put method is used to update existing data on the server.\nThe patch method is used to partially update existing data on the server.\nBesides the shared parameters, they also accept:\nbody (TRequestBody, optional): The request payload.","the-usequery-hook#The useQuery Hook":"The useQuery hook is designed to handle asynchronous operations and manage the corresponding state, including loading, success, and error states. This section details how to use the useQuery hook, its parameters, and it's return.useQuery accepts two generic types: TQueryData and TError.","tquerydata--terror#TQueryData & TError":"TQueryData is a generic type parameter that specifies the expected shape of the data returned by the asynchronous function.\nTError is a generic type parameter that specifies the expected shape of the error object returned by the asynchronous function.","example-usage#Example Usage":"import React, { useEffect } from 'react';\nimport useDataProvider, { useQuery } from '@concepta/react-data-provider';\n// Define the type for the user data\ninterface User {\n  id: number;\n  name: string;\n  email: string;\n}\n// Define the type for the error object\ninterface FetchError {\n  message: string;\n  code: number;\n}\nconst UsersComponent = () => {\n  const { get } = useDataProvider();\n  // Define the async function using the \"get\" function from \"useDataProvider\"\n  const fetchUsers = get({ uri: '/users' }); // AsyncFunction\n  // Use useQuery hook with TQueryData specified as User[] and TError specified as FetchError\n  const { execute, status, isPending, data, error, refresh } = useQuery<\n    User[],\n    FetchError\n  >(fetchUsers, true, {\n    onError: (error) => console.error('Error fetching users:', error),\n    onSuccess: (data) => console.log('Fetched users:', data),\n    onFinish: (status) => console.log('Fetch finished with status:', status),\n  });\n  useEffect(() => {\n    execute();\n  }, [execute]);\n  return (\n    <div>\n      {isPending && <p>Loading...</p>}\n      {status === AsyncStatus.error && <p>Error: {error?.message}</p>}\n      {status === AsyncStatus.success && (\n        <ul>\n          {data?.map((user) => (\n            <li key={user.id}>\n              {user.name} - {user.email}\n            </li>\n          ))}\n        </ul>\n      )}\n      <button onClick={refresh}>Refresh</button>\n    </div>\n  );\n};\nexport default UsersComponent;","parameters#Parameters":"The useQuery hook accepts four parameters\nasyncFn (AsyncFunction): An asynchronous function that the useQuery hook will execute. This function returns a promise that resolves to the expected data type.\nimmediate (boolean): A boolean indicating whether the function should be executed immediately when the hook is called. Defaults to false.\noptions (object): An object containing various callback functions and data formatting options (more details below).\nargs (boolean): Optional arguments to be passed to the asynchronous function when it is executed.","the-options-parameters#The Options parameters:":"","onerror#onError":"A callback function that is called if the asynchronous function throws an error.\nonError: (error) => {\n  console.error('An error occurred:', error);\n};","onsuccess#onSuccess":"A callback function that is called when the asynchronous function successfully completes.\nonSuccess: (data) => {\n  console.log('Data fetched successfully:', data);\n};","onfinish#onFinish":"A callback function that is called when the asynchronous operation finishes, regardless of whether it was successful or resulted in an error.\nonFinish: (status) => {\n  console.log('Operation finished with status:', status);\n};","formatdata#formatData":"A function that formats the data returned by the asynchronous function before it is set in the state.\nformatData: (data) => {\n  return data.map((item) => ({\n    ...item,\n    formatted: true,\n  }));\n};","usequery-return#useQuery return":"The useQuery hook returns the following:\nexecute: A function that can be called to manually trigger the asynchronous function.\nstatus: The current status of the asynchronous operation. Can be idle, pending, success, or error.\nisPending: A boolean indicating whether the asynchronous operation is currently in progress.\ndata: The data returned by the asynchronous function, if the operation was successful.\nerror: The error thrown by the asynchronous function, if any.\nrefresh: A function that can be called to re-execute the asynchronous function with the same arguments.","example-usage-1#Example Usage":"Simple post with useDataProvider\nimport useDataProvider from '@concepta/react-data-provider';\nconst MyComponent = () => {\n  const { post } = useDataProvider();\n  const handleClick = () => {\n    post({\n      uri: '/todo-list',\n      body: { text: 'Buy tomatoes' },\n    });\n  };\n  return (\n    <div>\n      <Button variant=\"contained\" onClick={handleClick}>\n        Add tomatoes\n      </Button>\n    </div>\n  );\n};\nGet request with useQuery\nimport { useDataProvider } from '@concepta/react-data-provider';\ninterface User {\n  id: number;\n  name: string;\n  email: string;\n}\nconst MyComponent = () => {\n  const { get } = useDataProvider();\n  const fetchUsers = () =>\n    get({\n      uri: `/user-list`,\n    });\n  const { execute, status, isPending, data, error, refresh } = useQuery<User[]>(\n    fetchUsers,\n    false, // immediate = false\n    {\n      onError: (error) => console.error('Error fetching users:', error),\n      onSuccess: (data) => console.log('Fetched users:', data),\n      onFinish: (status) => console.log('Fetch finished with status:', status),\n    },\n  );\n  return (\n    <div>\n      My Component\n      <button onClick={execute}>Get list</button>\n    </div>\n  );\n};"}},"/reference/rockets-react/react-data-provider/functions/ClientProvider":{"title":"Function: ClientProvider()","data":{"":"@concepta/react-data-provider • DocsRockets React / @concepta/react-data-provider / ClientProvider\nClientProvider(__namedParameters): Element","parameters#Parameters":"Parameter\tType\t__namedParameters\tProps","returns#Returns":"Element","defined-in#Defined in":"ClientProvider.tsx:28"}},"/reference/rockets-react/react-data-provider/functions/default":{"title":"Function: default()","data":{"":"@concepta/react-data-provider • DocsRockets React / @concepta/react-data-provider / default\ndefault(): object","returns#Returns":"object\nName\tType\tDefined in\tdel\t<TQueryData>(requestParams) => Promise<TQueryData>\tuseDataProvider.ts:157\tget\t<TQueryData>(requestParams) => Promise<TQueryData>\tuseDataProvider.ts:157\tpatch\t<TRequestBody, TQueryData>(requestParams) => Promise<TQueryData>\tuseDataProvider.ts:157\tpost\t<TRequestBody, TQueryData>(requestParams) => Promise<TQueryData>\tuseDataProvider.ts:157\tput\t<TRequestBody, TQueryData>(requestParams) => Promise<TQueryData>\tuseDataProvider.ts:157","defined-in#Defined in":"useDataProvider.ts:22"}},"/reference/rockets-react/react-data-provider/functions/useQuery":{"title":"Function: useQuery()","data":{"":"@concepta/react-data-provider • DocsRockets React / @concepta/react-data-provider / useQuery\nuseQuery<TQueryData, TError>(asyncFn, immediate, options?, arg?): object","type-parameters#Type Parameters":"Type Parameter\tDefault type\tTQueryData\t-\tTError\tunknown","parameters#Parameters":"Parameter\tType\tDefault value\tasyncFn\tAsyncFunction\tundefined\timmediate\tboolean\tfalse\toptions?\tDataProviderRequestOptions<TQueryData, TError>\tundefined\targ?\tunknown\tundefined","returns#Returns":"object\nName\tType\tDefined in\tdata\tTQueryData\tindex.tsx:61\terror\tTError\tindex.tsx:61\texecute\t(_arg?) => Promise<void>\tindex.tsx:61\tisPending\tboolean\tindex.tsx:61\trefresh\t() => Promise<void>\tindex.tsx:61\tstatus\tAsyncStatus\tindex.tsx:61","defined-in#Defined in":"index.tsx:11"}},"/reference/rockets-react/react-data-provider/globals":{"title":"@concepta/react-data-provider","data":{"":"@concepta/react-data-provider • DocsRockets React / @concepta/react-data-provider","functions#Functions":"ClientProvider\ndefault\nuseQuery"}},"/reference/rockets-react/react-material-ui/README":{"title":"@concepta/react-material-ui","data":{"":"@concepta/react-material-ui • DocsRockets React / @concepta/react-material-ui"}},"/reference/rockets-react/react-material-ui/functions/AuthModule":{"title":"Function: AuthModule()","data":{"":"@concepta/react-material-ui • DocsRockets React / @concepta/react-material-ui / AuthModule\nAuthModule(props): Element","parameters#Parameters":"Parameter\tType\tprops\tAuthModuleProps","returns#Returns":"Element","defined-in#Defined in":"packages/react-material-ui/src/modules/auth/index.tsx:45"}},"/reference/rockets-react/react-material-ui/functions/AutocompleteField":{"title":"Function: AutocompleteField()","data":{"":"@concepta/react-material-ui • DocsRockets React / @concepta/react-material-ui / AutocompleteField\nAutocompleteField(__namedParameters): Element","parameters#Parameters":"Parameter\tType\t__namedParameters\tAutocompleteFieldProps","returns#Returns":"Element","defined-in#Defined in":"packages/react-material-ui/src/components/AutocompleteField/AutocompleteField.tsx:34"}},"/reference/rockets-react/react-material-ui/functions/Avatar":{"title":"Function: Avatar()","data":{"":"@concepta/react-material-ui • DocsRockets React / @concepta/react-material-ui / Avatar\nAvatar(props): Element\nThe Avatar component is a UI element used to display a user's\nprofile picture or initials. It supports various features such as image\nsource handling, fallbacks (e.g., initials or default image),\nand customization options for styling and sizes.","parameters#Parameters":"Parameter\tType\tDescription\tprops\tAvatarProps\tAvatar component props","returns#Returns":"Element","see#See":"Storybook - Avatar","example#Example":"<Avatar \n  src=\"https://example.com/nonexistent.jpg\"\n  alt=\"Annabel B\"\n  initials=\"AB\"\n  size={40}\n  backgroundColor=\"#789abc\"\n/>","defined-in#Defined in":"packages/react-material-ui/src/components/Avatar/Avatar.tsx:45"}},"/reference/rockets-react/react-material-ui/functions/Checkbox":{"title":"Function: Checkbox()","data":{"":"@concepta/react-material-ui • DocsRockets React / @concepta/react-material-ui / Checkbox\nCheckbox(props): Element","parameters#Parameters":"Parameter\tType\tprops\tCheckboxProps & Props","returns#Returns":"Element","defined-in#Defined in":"packages/react-material-ui/src/components/Checkbox/Checkbox.tsx:13"}},"/reference/rockets-react/react-material-ui/functions/ComposedTable":{"title":"Function: ComposedTable()","data":{"":"@concepta/react-material-ui • DocsRockets React / @concepta/react-material-ui / ComposedTable\nComposedTable(props): Element","parameters#Parameters":"Parameter\tType\tprops\tComposedTableProps","returns#Returns":"Element","defined-in#Defined in":"packages/react-material-ui/src/components/ComposedTable/index.tsx:32"}},"/reference/rockets-react/react-material-ui/functions/CrudModule":{"title":"Function: CrudModule()","data":{"":"@concepta/react-material-ui • DocsRockets React / @concepta/react-material-ui / CrudModule\nCrudModule(props): Element","parameters#Parameters":"Parameter\tType\tprops\tModuleProps","returns#Returns":"Element","defined-in#Defined in":"packages/react-material-ui/src/modules/crud/index.tsx:65"}},"/reference/rockets-react/react-material-ui/functions/Dialog":{"title":"Function: Dialog()","data":{"":"@concepta/react-material-ui • DocsRockets React / @concepta/react-material-ui / Dialog\nDialog(props): Element","parameters#Parameters":"Parameter\tType\tprops\tCustomDialogProps & DialogProps","returns#Returns":"Element","defined-in#Defined in":"packages/react-material-ui/src/components/Dialog/Dialog.tsx:18"}},"/reference/rockets-react/react-material-ui/functions/Drawer":{"title":"Function: Drawer()","data":{"":"@concepta/react-material-ui • DocsRockets React / @concepta/react-material-ui / Drawer\nDrawer(props): Element","parameters#Parameters":"Parameter\tType\tprops\tDrawerProps","returns#Returns":"Element","defined-in#Defined in":"packages/react-material-ui/src/components/Drawer/Drawer.tsx:39"}},"/reference/rockets-react/react-material-ui/functions/Dropdown":{"title":"Function: Dropdown()","data":{"":"@concepta/react-material-ui • DocsRockets React / @concepta/react-material-ui / Dropdown\nDropdown(__namedParameters): Element","parameters#Parameters":"Parameter\tType\t__namedParameters\tProps","returns#Returns":"Element","defined-in#Defined in":"packages/react-material-ui/src/components/Dropdown/Dropdown.tsx:28"}},"/reference/rockets-react/react-material-ui/functions/Filter":{"title":"Function: Filter()","data":{"":"@concepta/react-material-ui • DocsRockets React / @concepta/react-material-ui / Filter\nFilter(props): Element","parameters#Parameters":"Parameter\tType\tprops\tFilterProps","returns#Returns":"Element","defined-in#Defined in":"packages/react-material-ui/src/components/Filter/Filter.tsx:169"}},"/reference/rockets-react/react-material-ui/functions/FormFieldSkeleton":{"title":"Function: FormFieldSkeleton()","data":{"":"@concepta/react-material-ui • DocsRockets React / @concepta/react-material-ui / FormFieldSkeleton\nFormFieldSkeleton(__namedParameters): Element","parameters#Parameters":"Parameter\tType\t__namedParameters\tPropsWithChildren<FormFieldSkeletonProps>","returns#Returns":"Element","defined-in#Defined in":"packages/react-material-ui/src/components/FormFieldSkeleton/index.tsx:9"}},"/reference/rockets-react/react-material-ui/functions/FormTemplate":{"title":"Function: FormTemplate()","data":{"":"@concepta/react-material-ui • DocsRockets React / @concepta/react-material-ui / FormTemplate\nFormTemplate(__namedParameters): Element","parameters#Parameters":"Parameter\tType\t__namedParameters\tFormTemplateProps","returns#Returns":"Element","defined-in#Defined in":"packages/react-material-ui/src/components/FormTemplate/FormTemplate.tsx:22"}},"/reference/rockets-react/react-material-ui/functions/HeaderAccount":{"title":"Function: HeaderAccount()","data":{"":"@concepta/react-material-ui • DocsRockets React / @concepta/react-material-ui / HeaderAccount\nHeaderAccount(__namedParameters): Element","parameters#Parameters":"Parameter\tType\t__namedParameters\tHeaderAccountProps","returns#Returns":"Element","defined-in#Defined in":"packages/react-material-ui/src/components/HeaderAccount/HeaderAccount.tsx:22"}},"/reference/rockets-react/react-material-ui/functions/Image":{"title":"Function: Image()","data":{"":"@concepta/react-material-ui • DocsRockets React / @concepta/react-material-ui / Image\nImage(props): Element","parameters#Parameters":"Parameter\tType\tprops\tBoxOwnProps<Theme> & CommonProps & Omit<Omit<DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>, \"ref\"> & object, keyof CommonProps | keyof BoxOwnProps<Theme>> & Props","returns#Returns":"Element","defined-in#Defined in":"packages/react-material-ui/src/components/Image/Image.tsx:13"}},"/reference/rockets-react/react-material-ui/functions/Link":{"title":"Function: Link()","data":{"":"@concepta/react-material-ui • DocsRockets React / @concepta/react-material-ui / Link\nLink(props): Element","parameters#Parameters":"Parameter\tType\tprops\tLinkProps<\"a\", object>","returns#Returns":"Element","defined-in#Defined in":"packages/react-material-ui/src/components/Link/Link.tsx:4"}},"/reference/rockets-react/react-material-ui/functions/Navbar":{"title":"Function: Navbar()","data":{"":"@concepta/react-material-ui • DocsRockets React / @concepta/react-material-ui / Navbar\nNavbar(__namedParameters): Element","parameters#Parameters":"Parameter\tType\t__namedParameters\tNavbarProps","returns#Returns":"Element","defined-in#Defined in":"packages/react-material-ui/src/components/Navbar/Navbar.tsx:22"}},"/reference/rockets-react/react-material-ui/functions/Notifications":{"title":"Function: Notifications()","data":{"":"@concepta/react-material-ui • DocsRockets React / @concepta/react-material-ui / Notifications\nNotifications(__namedParameters): Element","parameters#Parameters":"Parameter\tType\t__namedParameters\tProps","returns#Returns":"Element","defined-in#Defined in":"packages/react-material-ui/src/components/Notifications/Notifications.tsx:11"}},"/reference/rockets-react/react-material-ui/functions/OtpInput":{"title":"Function: OtpInput()","data":{"":"@concepta/react-material-ui • DocsRockets React / @concepta/react-material-ui / OtpInput\nOtpInput(props): ReactElement<any, string | JSXElementConstructor<any>>\nNOTE: Exotic components are not callable.","parameters#Parameters":"Parameter\tType\tprops\tOmit<OtpInputProps, \"ref\"> & RefAttributes<HTMLDivElement>","returns#Returns":"ReactElement<any, string | JSXElementConstructor<any>>","defined-in#Defined in":"packages/react-material-ui/src/components/OtpInput/index.tsx:54"}},"/reference/rockets-react/react-material-ui/functions/OrderableDropDown":{"title":"Function: OrderableDropDown()","data":{"":"@concepta/react-material-ui • DocsRockets React / @concepta/react-material-ui / OrderableDropDown\nOrderableDropDown(__namedParameters): Element","parameters#Parameters":"Parameter\tType\t__namedParameters\tProps","returns#Returns":"Element","defined-in#Defined in":"packages/react-material-ui/src/components/OrderableDropDown/OrderableDropDown.tsx:135"}},"/reference/rockets-react/react-material-ui/functions/RadioGroup":{"title":"Function: RadioGroup()","data":{"":"@concepta/react-material-ui • DocsRockets React / @concepta/react-material-ui / RadioGroup\nRadioGroup(props): Element","parameters#Parameters":"Parameter\tType\tprops\tCustomRadioGroupProps & RadioGroupProps & RadioProps","returns#Returns":"Element","defined-in#Defined in":"packages/react-material-ui/src/components/RadioGroup/RadioGroup.tsx:31"}},"/reference/rockets-react/react-material-ui/functions/SearchField":{"title":"Function: SearchField()","data":{"":"@concepta/react-material-ui • DocsRockets React / @concepta/react-material-ui / SearchField\nSearchField(__namedParameters): Element","parameters#Parameters":"Parameter\tType\t__namedParameters\tSearchFieldProps","returns#Returns":"Element","defined-in#Defined in":"packages/react-material-ui/src/components/SearchField/SearchField.tsx:36"}},"/reference/rockets-react/react-material-ui/functions/Select":{"title":"Function: Select()","data":{"":"@concepta/react-material-ui • DocsRockets React / @concepta/react-material-ui / Select\nSelect(props): Element","parameters#Parameters":"Parameter\tType\tprops\tProps & FilledTextFieldProps | OutlinedTextFieldProps | StandardTextFieldProps","returns#Returns":"Element","defined-in#Defined in":"packages/react-material-ui/src/components/Select/Select.tsx:25"}},"/reference/rockets-react/react-material-ui/functions/SelectField":{"title":"Function: SelectField()","data":{"":"@concepta/react-material-ui • DocsRockets React / @concepta/react-material-ui / SelectField\nSelectField(__namedParameters): Element","parameters#Parameters":"Parameter\tType\t__namedParameters\tSelectFieldProps","returns#Returns":"Element","defined-in#Defined in":"packages/react-material-ui/src/components/SelectField/SelectField.tsx:38"}},"/reference/rockets-react/react-material-ui/functions/SideModal":{"title":"Function: SideModal()","data":{"":"@concepta/react-material-ui • DocsRockets React / @concepta/react-material-ui / SideModal\nSideModal(props): Element","parameters#Parameters":"Parameter\tType\tprops\tSideModalProps","returns#Returns":"Element","defined-in#Defined in":"packages/react-material-ui/src/components/SideModal/SideModal.tsx:25"}},"/reference/rockets-react/react-material-ui/functions/SimpleForm":{"title":"Function: SimpleForm()","data":{"":"@concepta/react-material-ui • DocsRockets React / @concepta/react-material-ui / SimpleForm\nSimpleForm(__namedParameters): Element","parameters#Parameters":"Parameter\tType\t__namedParameters\tProps","returns#Returns":"Element","defined-in#Defined in":"packages/react-material-ui/src/components/SimpleForm/SimpleForm.tsx:79"}},"/reference/rockets-react/react-material-ui/functions/Switch":{"title":"Function: Switch()","data":{"":"@concepta/react-material-ui • DocsRockets React / @concepta/react-material-ui / Switch\nSwitch(props): Element","parameters#Parameters":"Parameter\tType\tprops\tProps & SwitchProps","returns#Returns":"Element","defined-in#Defined in":"packages/react-material-ui/src/components/Switch/Switch.tsx:13"}},"/reference/rockets-react/react-material-ui/functions/Text":{"title":"Function: Text()","data":{"":"@concepta/react-material-ui • DocsRockets React / @concepta/react-material-ui / Text\nText(props): Element","parameters#Parameters":"Parameter\tType\tprops\tTypographyProps<\"span\", object>","returns#Returns":"Element","defined-in#Defined in":"packages/react-material-ui/src/components/Text/Text.tsx:4"}},"/reference/rockets-react/react-material-ui/functions/TextField":{"title":"Function: TextField()","data":{"":"@concepta/react-material-ui • DocsRockets React / @concepta/react-material-ui / TextField\nTextField(props): Element","parameters#Parameters":"Parameter\tType\tprops\tFilledTextFieldProps | OutlinedTextFieldProps | StandardTextFieldProps & Props","returns#Returns":"Element","defined-in#Defined in":"packages/react-material-ui/src/components/TextField/TextField.tsx:59"}},"/reference/rockets-react/react-material-ui/functions/UsersModule":{"title":"Function: UsersModule()","data":{"":"@concepta/react-material-ui • DocsRockets React / @concepta/react-material-ui / UsersModule\nUsersModule(__namedParameters): Element","parameters#Parameters":"Parameter\tType\t__namedParameters\tUsersModuleProps","returns#Returns":"Element","defined-in#Defined in":"packages/react-material-ui/src/modules/users/index.tsx:14"}},"/reference/rockets-react/react-material-ui/functions/createTableStyles":{"title":"Function: createTableStyles()","data":{"":"@concepta/react-material-ui • DocsRockets React / @concepta/react-material-ui / createTableStyles\ncreateTableStyles<T>(styles): T","type-parameters#Type Parameters":"Type Parameter\tT extends StyleDefinition","parameters#Parameters":"Parameter\tType\tDescription\tstyles\tT\tAn object containing style definitions.","returns#Returns":"TThe generated style object with keys and corresponding style definitions.","defined-in#Defined in":"packages/react-material-ui/src/components/Table/utils/createTableStyles.ts:13"}},"/reference/rockets-react/react-material-ui/functions/descendingComparator":{"title":"Function: descendingComparator()","data":{"":"@concepta/react-material-ui • DocsRockets React / @concepta/react-material-ui / descendingComparator\ndescendingComparator<T>(a, b, orderBy): -1 | 0 | 1","type-parameters#Type Parameters":"Type Parameter\tT","parameters#Parameters":"Parameter\tType\ta\tT\tb\tT\torderBy\tkeyof T","returns#Returns":"-1 | 0 | 1","defined-in#Defined in":"packages/react-material-ui/src/components/Table/utils/descendingComparator.ts:6"}},"/reference/rockets-react/react-material-ui/functions/getComparator":{"title":"Function: getComparator()","data":{"":"@concepta/react-material-ui • DocsRockets React / @concepta/react-material-ui / getComparator\ngetComparator<Key>(order, orderBy): (a, b) => number","type-parameters#Type Parameters":"Type Parameter\tKey extends string | number | symbol","parameters#Parameters":"Parameter\tType\torder\tOrder\torderBy\tKey","returns#Returns":"Function","parameters-1#Parameters":"Parameter\tType\ta\t{ [key in Key]: number | string }\tb\t{ [key in Key]: number | string }","returns-1#Returns":"number","defined-in#Defined in":"packages/react-material-ui/src/components/Table/utils/getComparator.ts:8"}},"/reference/rockets-react/react-material-ui/functions/sortTable":{"title":"Function: sortTable()","data":{"":"@concepta/react-material-ui • DocsRockets React / @concepta/react-material-ui / sortTable\nsortTable(a, b, order, orderBy): number","parameters#Parameters":"Parameter\tType\ta\tRowProps\tb\tRowProps\torder\tOrder\torderBy\tstring","returns#Returns":"number","defined-in#Defined in":"packages/react-material-ui/src/components/Table/utils/sortTable.ts:25"}},"/reference/rockets-react/react-material-ui/functions/stableSort":{"title":"Function: stableSort()","data":{"":"@concepta/react-material-ui • DocsRockets React / @concepta/react-material-ui / stableSort\nstableSort<T>(array, comparator): T[]","type-parameters#Type Parameters":"Type Parameter\tT","parameters#Parameters":"Parameter\tType\tarray\treadonly T[]\tcomparator\t(a, b) => number","returns#Returns":"T[]","defined-in#Defined in":"packages/react-material-ui/src/components/Table/utils/stableSort.ts:5"}},"/reference/rockets-react/react-material-ui/globals":{"title":"@concepta/react-material-ui","data":{"":"@concepta/react-material-ui • DocsRockets React / @concepta/react-material-ui","interfaces#Interfaces":"ListItem","type-aliases#Type Aliases":"AvatarProps\nDrawerItemProps\nDrawerProps\nDropdownItem\nHeaderAccountProps\nNavbarProps","variables#Variables":"AppBar\nSchemaForm\nTable","functions#Functions":"AuthModule\nAutocompleteField\nAvatar\nCheckbox\nComposedTable\nCrudModule\nDialog\nDrawer\nDropdown\nFilter\nFormFieldSkeleton\nFormTemplate\nHeaderAccount\nImage\nLink\nNavbar\nNotifications\nOrderableDropDown\nOtpInput\nRadioGroup\nSearchField\nSelect\nSelectField\nSideModal\nSimpleForm\nSwitch\nText\nTextField\nUsersModule\ncreateTableStyles\ndescendingComparator\ngetComparator\nsortTable\nstableSort"}},"/reference/rockets-react/react-material-ui/interfaces/ListItem":{"title":"Interface: ListItem","data":{"":"@concepta/react-material-ui • DocsRockets React / @concepta/react-material-ui / ListItem","indexable#Indexable":"[key: string]: unknown","properties#Properties":"Property\tType\tDefined in\thide?\tboolean\tpackages/react-material-ui/src/components/OrderableDropDown/OrderableDropDown.tsx:39\tid\tstring\tpackages/react-material-ui/src/components/OrderableDropDown/OrderableDropDown.tsx:37\tlabel\tstring\tpackages/react-material-ui/src/components/OrderableDropDown/OrderableDropDown.tsx:38\tresetFilters?\t() => void\tpackages/react-material-ui/src/components/OrderableDropDown/OrderableDropDown.tsx:40"}},"/reference/rockets-react/react-material-ui/type-aliases/AvatarProps":{"title":"Type Alias: AvatarProps","data":{"":"@concepta/react-material-ui • DocsRockets React / @concepta/react-material-ui / AvatarProps\nAvatarProps: object\nAvatar component props.","type-declaration#Type declaration":"Name\tType\tDescription\tDefined in\talt\tstring\tAlternate attribute text\tpackages/react-material-ui/src/components/Avatar/Avatar.tsx:13\tbackgroundColor\tstring\tBackground color name or code\tpackages/react-material-ui/src/components/Avatar/Avatar.tsx:21\tinitials\tstring\tOptional and/or fallback initials to display with the avatar\tpackages/react-material-ui/src/components/Avatar/Avatar.tsx:17\tonClick\t() => void\tCustom onClick handler\tpackages/react-material-ui/src/components/Avatar/Avatar.tsx:19\tsize\tnumber\tSize in pixels\tpackages/react-material-ui/src/components/Avatar/Avatar.tsx:15\tsrc\tstring\tPath or URL to image file\tpackages/react-material-ui/src/components/Avatar/Avatar.tsx:11","defined-in#Defined in":"packages/react-material-ui/src/components/Avatar/Avatar.tsx:9"}},"/reference/rockets-react/react-material-ui/type-aliases/DrawerItemProps":{"title":"Type Alias: DrawerItemProps","data":{"":"@concepta/react-material-ui • DocsRockets React / @concepta/react-material-ui / DrawerItemProps\nDrawerItemProps: object & DrawerButtonProps","type-declaration#Type declaration":"Name\tType\tDefined in\tcomponent\tReact.ReactNode | (active?, collapsed?) => React.ReactNode\tpackages/react-material-ui/src/components/Drawer/DrawerItem.tsx:15\ticon\tReact.ReactNode | (active) => React.ReactNode\tpackages/react-material-ui/src/components/Drawer/DrawerItem.tsx:18\tid\tstring\tpackages/react-material-ui/src/components/Drawer/DrawerItem.tsx:14\tonClick\t() => void\tpackages/react-material-ui/src/components/Drawer/DrawerItem.tsx:20\ttemporary\tboolean\tpackages/react-material-ui/src/components/Drawer/DrawerItem.tsx:22\ttext\tstring\tpackages/react-material-ui/src/components/Drawer/DrawerItem.tsx:19\ttextProps\tTextProps\tpackages/react-material-ui/src/components/Drawer/DrawerItem.tsx:21","defined-in#Defined in":"packages/react-material-ui/src/components/Drawer/DrawerItem.tsx:13"}},"/reference/rockets-react/react-material-ui/type-aliases/DrawerProps":{"title":"Type Alias: DrawerProps","data":{"":"@concepta/react-material-ui • DocsRockets React / @concepta/react-material-ui / DrawerProps\nDrawerProps: object","type-declaration#Type declaration":"Name\tType\tDefined in\tactiveIconColor\tDrawerItemProps[\"activeIconColor\"]\tpackages/react-material-ui/src/components/Drawer/Drawer.tsx:34\tbackgroundColor\tStyledDrawerProps[\"backgroundColor\"]\tpackages/react-material-ui/src/components/Drawer/Drawer.tsx:32\tbuttonSx\tSxProps<Theme>\tpackages/react-material-ui/src/components/Drawer/Drawer.tsx:24\tcollapsed\tboolean\tpackages/react-material-ui/src/components/Drawer/Drawer.tsx:30\tcollapsedWidth\tStyledDrawerProps[\"collapsedWidth\"]\tpackages/react-material-ui/src/components/Drawer/Drawer.tsx:35\tcollapsible\tboolean\tpackages/react-material-ui/src/components/Drawer/Drawer.tsx:26\tcollapsibleIcon\tReactNode | (collapsed?) => ReactNode\tpackages/react-material-ui/src/components/Drawer/Drawer.tsx:27\tcollapsibleIconBgColor\tstring\tpackages/react-material-ui/src/components/Drawer/Drawer.tsx:29\tcollapsibleIconColor\tstring\tpackages/react-material-ui/src/components/Drawer/Drawer.tsx:28\tcurrentId\tstring\tpackages/react-material-ui/src/components/Drawer/Drawer.tsx:17\tcustomToggle\t(toggleDrawer, collapsed?) => ReactNode\tpackages/react-material-ui/src/components/Drawer/Drawer.tsx:18\texpandedWidth\tStyledDrawerProps[\"expandedWidth\"]\tpackages/react-material-ui/src/components/Drawer/Drawer.tsx:36\thorizontal\tboolean\tpackages/react-material-ui/src/components/Drawer/Drawer.tsx:25\ticonColor\tDrawerItemProps[\"iconColor\"]\tpackages/react-material-ui/src/components/Drawer/Drawer.tsx:33\titems\tDrawerItemProps[]\tpackages/react-material-ui/src/components/Drawer/Drawer.tsx:16\tlogo\tstring | ReactNode | (collapsed?) => ReactNode\tpackages/react-material-ui/src/components/Drawer/Drawer.tsx:21\tmobileIsOpen\tboolean\tpackages/react-material-ui/src/components/Drawer/Drawer.tsx:19\tonCollapsedChange\t(collapsed) => void\tpackages/react-material-ui/src/components/Drawer/Drawer.tsx:31\tonMobileClose\t() => void\tpackages/react-material-ui/src/components/Drawer/Drawer.tsx:20\tsx\tStyledDrawerProps[\"sx\"]\tpackages/react-material-ui/src/components/Drawer/Drawer.tsx:23\ttextProps\tTextProps\tpackages/react-material-ui/src/components/Drawer/Drawer.tsx:22","defined-in#Defined in":"packages/react-material-ui/src/components/Drawer/Drawer.tsx:15"}},"/reference/rockets-react/react-material-ui/type-aliases/DropdownItem":{"title":"Type Alias: DropdownItem","data":{"":"@concepta/react-material-ui • DocsRockets React / @concepta/react-material-ui / DropdownItem\nDropdownItem: object","type-declaration#Type declaration":"Name\tType\tDefined in\ticon\tReactNode\tpackages/react-material-ui/src/components/Dropdown/Dropdown.tsx:18\ticonPosition\t\"left\" | \"right\"\tpackages/react-material-ui/src/components/Dropdown/Dropdown.tsx:19\tkey\tstring\tpackages/react-material-ui/src/components/Dropdown/Dropdown.tsx:15\tonClick\t() => void\tpackages/react-material-ui/src/components/Dropdown/Dropdown.tsx:16\ttext\tstring\tpackages/react-material-ui/src/components/Dropdown/Dropdown.tsx:17","defined-in#Defined in":"packages/react-material-ui/src/components/Dropdown/Dropdown.tsx:14"}},"/reference/rockets-react/react-material-ui/type-aliases/HeaderAccountProps":{"title":"Type Alias: HeaderAccountProps","data":{"":"@concepta/react-material-ui • DocsRockets React / @concepta/react-material-ui / HeaderAccountProps\nHeaderAccountProps: object","type-declaration#Type declaration":"Name\tType\tDefined in\tavatar\tstring\tpackages/react-material-ui/src/components/HeaderAccount/HeaderAccount.tsx:11\tavatarSize\tnumber\tpackages/react-material-ui/src/components/HeaderAccount/HeaderAccount.tsx:12\ticonColor\tstring\tpackages/react-material-ui/src/components/HeaderAccount/HeaderAccount.tsx:18\tmenuOptions\t(handleClose) => ReactNode\tpackages/react-material-ui/src/components/HeaderAccount/HeaderAccount.tsx:19\tonClick\t() => void\tpackages/react-material-ui/src/components/HeaderAccount/HeaderAccount.tsx:15\tsubText\tstring\tpackages/react-material-ui/src/components/HeaderAccount/HeaderAccount.tsx:14\tsubTextProps\tTextProps\tpackages/react-material-ui/src/components/HeaderAccount/HeaderAccount.tsx:17\ttext\tstring\tpackages/react-material-ui/src/components/HeaderAccount/HeaderAccount.tsx:13\ttextProps\tTextProps\tpackages/react-material-ui/src/components/HeaderAccount/HeaderAccount.tsx:16","defined-in#Defined in":"packages/react-material-ui/src/components/HeaderAccount/HeaderAccount.tsx:10"}},"/reference/rockets-react/react-material-ui/type-aliases/NavbarProps":{"title":"Type Alias: NavbarProps","data":{"":"@concepta/react-material-ui • DocsRockets React / @concepta/react-material-ui / NavbarProps\nNavbarProps: object","type-declaration#Type declaration":"Name\tType\tDefined in\tavatar\tstring\tpackages/react-material-ui/src/components/Navbar/Navbar.tsx:15\tdrawerToggle\t() => void\tpackages/react-material-ui/src/components/Navbar/Navbar.tsx:11\theaderMenuOptions\tHeaderAccountProps[\"menuOptions\"]\tpackages/react-material-ui/src/components/Navbar/Navbar.tsx:18\tnotificationsNumber\tnumber\tpackages/react-material-ui/src/components/Navbar/Navbar.tsx:13\tnotificationsOnClick\t() => void\tpackages/react-material-ui/src/components/Navbar/Navbar.tsx:14\tshowNotifications\tboolean\tpackages/react-material-ui/src/components/Navbar/Navbar.tsx:12\tsubText\tstring\tpackages/react-material-ui/src/components/Navbar/Navbar.tsx:17\tsx\tSxProps<Theme>\tpackages/react-material-ui/src/components/Navbar/Navbar.tsx:19\ttext\tstring\tpackages/react-material-ui/src/components/Navbar/Navbar.tsx:16","defined-in#Defined in":"packages/react-material-ui/src/components/Navbar/Navbar.tsx:10"}},"/reference/rockets-react/react-material-ui/variables/AppBar":{"title":"Variable: AppBar","data":{"":"@concepta/react-material-ui • DocsRockets React / @concepta/react-material-ui / AppBar\nconst AppBar: object","type-declaration#Type declaration":"Name\tType\tDefault value\tDefined in\tDrawer\t(props) => Element\tAppBarDrawer\tpackages/react-material-ui/src/components/AppBar/index.ts:8\tMain\t(__namedParameters) => Element\tAppBarMain\tpackages/react-material-ui/src/components/AppBar/index.ts:7\tNav\t(props) => Element\tAppBarNav\tpackages/react-material-ui/src/components/AppBar/index.ts:9\tRoot\t(__namedParameters) => Element\tAppBarRoot\tpackages/react-material-ui/src/components/AppBar/index.ts:10","defined-in#Defined in":"packages/react-material-ui/src/components/AppBar/index.ts:6"}},"/reference/rockets-react/react-material-ui/variables/SchemaForm":{"title":"Variable: SchemaForm","data":{"":"@concepta/react-material-ui • DocsRockets React / @concepta/react-material-ui / SchemaForm\nconst SchemaForm: object","type-declaration#Type declaration":"Name\tType\tDefined in\tButton\t(__namedParameters) => Element\tpackages/react-material-ui/src/components/SchemaForm/SchemaForm.tsx:68\tForm\t(__namedParameters) => Element\tpackages/react-material-ui/src/components/SchemaForm/SchemaForm.tsx:68\tTitle\t(__namedParameters) => Element\tpackages/react-material-ui/src/components/SchemaForm/SchemaForm.tsx:68","defined-in#Defined in":"packages/react-material-ui/src/components/SchemaForm/SchemaForm.tsx:68"}},"/reference/rockets-react/react-material-ui/variables/Table":{"title":"Variable: Table","data":{"":"@concepta/react-material-ui • DocsRockets React / @concepta/react-material-ui / Table\nconst Table: object","type-declaration#Type declaration":"Name\tType\tDefault value\tDefined in\tBodyCell\t(props) => Element\tTableBodyCells\tpackages/react-material-ui/src/components/Table/index.ts:22\tBodyCheckboxes\t(props) => Element\tTableBodyCheckbox\tpackages/react-material-ui/src/components/Table/index.ts:23\tBodyOption\t(props) => Element\tTableBodyOption\tpackages/react-material-ui/src/components/Table/index.ts:24\tBodyRow\t(props) => Element\tTableBodyRow\tpackages/react-material-ui/src/components/Table/index.ts:25\tBodyRows\t(props) => Element\tTableBodyRows\tpackages/react-material-ui/src/components/Table/index.ts:26\tCellSkeleton\t() => Element\tTableCellSkeleton\tpackages/react-material-ui/src/components/Table/index.ts:34\tColumnOrderable\t(__namedParameters) => Element\tTableColumnOrderable\tpackages/react-material-ui/src/components/Table/index.ts:36\tHeaderCell\t(props) => Element\tTableHeaderCell\tpackages/react-material-ui/src/components/Table/index.ts:29\tHeaderCells\t(props) => Element\tTableHeaderCells\tpackages/react-material-ui/src/components/Table/index.ts:30\tHeaderCheckbox\t(props) => Element\tTableHeaderCheckbox\tpackages/react-material-ui/src/components/Table/index.ts:31\tHeaderOption\t() => Element\tTableHeaderOption\tpackages/react-material-ui/src/components/Table/index.ts:32\tPagination\t(props) => Element\tTablePagination\tpackages/react-material-ui/src/components/Table/index.ts:27\tPaginationNumbers\t(props) => Element\tTablePaginationNumbers\tpackages/react-material-ui/src/components/Table/index.ts:28\tRoot\t(props) => Element\tTableRoot\tpackages/react-material-ui/src/components/Table/index.ts:33\tRowSkeleton\t() => Element\tTableRowSkeleton\tpackages/react-material-ui/src/components/Table/index.ts:35\tTable\t(props) => Element\t-\tpackages/react-material-ui/src/components/Table/index.ts:21","defined-in#Defined in":"packages/react-material-ui/src/components/Table/index.ts:20"}}}
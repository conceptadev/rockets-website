{"/reference/rockets/nestjs-access-control/classes/AccessControlContext":{"title":"Class: AccessControlContext","data":{"":"@concepta/nestjs-access-control • DocsPackages Example / @concepta/nestjs-access-control / AccessControlContext","implements#Implements":"AccessControlContextInterface","constructors#Constructors":"","new-accesscontrolcontext#new AccessControlContext()":"new AccessControlContext(ctxArgs): AccessControlContext","parameters#Parameters":"• ctxArgs: AccessControlContextArgsInterface","returns#Returns":"AccessControlContext","source#Source":"packages/nestjs-access-control/src/access-control.context.ts:7","properties#Properties":"","ctxargs#ctxArgs":"private readonly ctxArgs: AccessControlContextArgsInterface","source-1#Source":"packages/nestjs-access-control/src/access-control.context.ts:7","methods#Methods":"","getaccesscontrol#getAccessControl()":"getAccessControl(): AccessControl","returns-1#Returns":"AccessControl","implementation-of#Implementation of":"AccessControlContextInterface.getAccessControl","source-2#Source":"packages/nestjs-access-control/src/access-control.context.ts:36","getexecutioncontext#getExecutionContext()":"getExecutionContext(): ExecutionContext","returns-2#Returns":"ExecutionContext","implementation-of-1#Implementation of":"AccessControlContextInterface.getExecutionContext","source-3#Source":"packages/nestjs-access-control/src/access-control.context.ts:40","getprop#getProp()":"protected getProp(obj, prop): unknown","parameters-1#Parameters":"• obj: unknown• prop: string","returns-3#Returns":"unknown","source-4#Source":"packages/nestjs-access-control/src/access-control.context.ts:18","getquery#getQuery()":"getQuery(): IQueryInfo","returns-4#Returns":"IQueryInfo","implementation-of-2#Implementation of":"AccessControlContextInterface.getQuery","source-5#Source":"packages/nestjs-access-control/src/access-control.context.ts:32","getrequest#getRequest()":"getRequest(property?): unknown","parameters-2#Parameters":"• property?: string","returns-5#Returns":"unknown","implementation-of-3#Implementation of":"AccessControlContextInterface.getRequest","source-6#Source":"packages/nestjs-access-control/src/access-control.context.ts:22","getuser#getUser()":"getUser(): unknown","returns-6#Returns":"unknown","implementation-of-4#Implementation of":"AccessControlContextInterface.getUser","source-7#Source":"packages/nestjs-access-control/src/access-control.context.ts:28","hasprop#hasProp()":"protected hasProp<K>(obj, key): obj is Record<K, unknown>","type-parameters#Type parameters":"• K extends string","parameters-3#Parameters":"• obj: unknown• key: K","returns-7#Returns":"obj is Record<K, unknown>","source-8#Source":"packages/nestjs-access-control/src/access-control.context.ts:9"}},"/reference/rockets/README":{"title":"Rockets","data":{"":"Packages Example • DocsPackages Example / Packages Example\nRapid Enterprise Development Toolkit\nA collection of NestJS modules\nthat were created for the rapid development of enterpise level APIs.All reasonable efforts have been made to provide loosely coupled interfaces,\noverridable services, and sane default implementations.","contributing#Contributing":"This project is currently in alpha testing, however, feedback is highly\nappreciated and encouraged!Pull requests will be gratefully accepted in the very near future,\nonce we have finalized our Contributor License Agreement.","modules#Modules":"Module\tSummary\tnestjs-access-control\tAdvanced access control guard for NestJS with optional per-request filtering.\tnestjs-auth-github\tAuthenticate requests using GitHub oAuth2 sign-on.\tnestjs-auth-jwt\tAuthenticate requests using JWT tokens passed via the request (headers, cookies, body, query, etc).\tnestjs-auth-local\tAuthenticate requests using username/email and password against a local or remote data source.\tnestjs-auth-refresh\tAuthenticate requests using JWT refresh tokens passed via the request (headers, cookies, body, query, etc).\tnestjs-authentication\tAuthenticate requests using one or more strategies (local, jwt, etc).\tnestjs-common\tThe common module is a dependency of all Rockets modules.\tnestjs-crud\tExtremely powerful CRUD module that is an extension/wrapper of the popular @nestjsx/crud module.\tnestjs-email\tEmail deliver module that supports most popular transports, as well as template based email bodies using handlebars syntax.\tnestjs-event\tAdvanced class based event dispatch/listener module.\tnestjs-exception\tProvide exception handling/normalization and error code mapping.\tnestjs-jwt\tA flexible JWT utilities module for signing and validating tokens.\tnestjs-logger\tDrop-in replacement for the core NestJS logger that provides additonal support for pushing log data to external log providers.\tnestjs-password\tA flexible Password utilities module that provides services for password strength, creation and storage.\tnestjs-swagger-ui\tExpose your OpenApi spec on your API using the powerful Swagger UI interface.\tnestjs-typeorm-ext\tExtension of the NestJS TypeOrm module that allows your dynamic modules to accept drop-in replacements of custom entities and repositories.\tnestjs-user\tA module for managing a basic User entity, including controller with full CRUD, DTOs, sample data factory and seeder."}},"/reference/rockets/nestjs-access-control/classes/AccessControlGuard":{"title":"Class: AccessControlGuard","data":{"":"@concepta/nestjs-access-control • DocsPackages Example / @concepta/nestjs-access-control / AccessControlGuard","implements#Implements":"CanActivate","constructors#Constructors":"","new-accesscontrolguard#new AccessControlGuard()":"new AccessControlGuard(settings, service, reflector, moduleRef): AccessControlGuard","parameters#Parameters":"• settings: AccessControlSettingsInterface• service: AccessControlServiceInterface• reflector: Reflector• moduleRef: ModuleRef","returns#Returns":"AccessControlGuard","source#Source":"packages/nestjs-access-control/src/access-control.guard.ts:29","properties#Properties":"","moduleref#moduleRef":"private moduleRef: ModuleRef","source-1#Source":"packages/nestjs-access-control/src/access-control.guard.ts:35","reflector#reflector":"private readonly reflector: Reflector","source-2#Source":"packages/nestjs-access-control/src/access-control.guard.ts:34","service#service":"private readonly service: AccessControlServiceInterface","source-3#Source":"packages/nestjs-access-control/src/access-control.guard.ts:33","settings#settings":"private readonly settings: AccessControlSettingsInterface","source-4#Source":"packages/nestjs-access-control/src/access-control.guard.ts:31","methods#Methods":"","canactivate#canActivate()":"canActivate(context): Promise<boolean>","parameters-1#Parameters":"• context: ExecutionContext","returns-1#Returns":"Promise<boolean>","implementation-of#Implementation of":"CanActivate.canActivate","source-5#Source":"packages/nestjs-access-control/src/access-control.guard.ts:38","checkaccessgrants#checkAccessGrants()":"protected checkAccessGrants(context): Promise<boolean>","parameters-2#Parameters":"• context: ExecutionContext","returns-2#Returns":"Promise<boolean>","source-6#Source":"packages/nestjs-access-control/src/access-control.guard.ts:43","checkaccessqueries#checkAccessQueries()":"protected checkAccessQueries(context, queriesPermitted): Promise<boolean>","parameters-3#Parameters":"• context: ExecutionContext• queriesPermitted: IQueryInfo[]","returns-3#Returns":"Promise<boolean>","source-7#Source":"packages/nestjs-access-control/src/access-control.guard.ts:93","getqueryservice#getQueryService()":"private getQueryService(queryOption): Promise<CanAccess>","parameters-4#Parameters":"• queryOption: AccessControlQueryOptionInterface","returns-4#Returns":"Promise<CanAccess>","source-8#Source":"packages/nestjs-access-control/src/access-control.guard.ts:155"}},"/reference/rockets/nestjs-access-control/classes/AccessControlModule":{"title":"Class: AccessControlModule","data":{"":"@concepta/nestjs-access-control • DocsPackages Example / @concepta/nestjs-access-control / AccessControlModule","extends#Extends":"AccessControlModuleClass","constructors#Constructors":"","new-accesscontrolmodule#new AccessControlModule()":"new AccessControlModule(): AccessControlModule","returns#Returns":"AccessControlModule","inherited-from#Inherited from":"AccessControlModuleClass.constructor","source#Source":"node_modules/@nestjs/common/module-utils/interfaces/configurable-module-cls.interface.d.ts:12","methods#Methods":"","forfeature#forFeature()":"static forFeature(options): DynamicModule","parameters#Parameters":"• options: AccessControlOptions","returns-1#Returns":"DynamicModule","source-1#Source":"packages/nestjs-access-control/src/access-control.module.ts:29","forroot#forRoot()":"static forRoot(options): DynamicModule","parameters-1#Parameters":"• options: AccessControlOptions","returns-2#Returns":"DynamicModule","source-2#Source":"packages/nestjs-access-control/src/access-control.module.ts:21","forrootasync#forRootAsync()":"static forRootAsync(options): DynamicModule","parameters-2#Parameters":"• options: AccessControlAsyncOptions","returns-3#Returns":"DynamicModule","source-3#Source":"packages/nestjs-access-control/src/access-control.module.ts:25","register#register()":"static register(options): DynamicModule","parameters-3#Parameters":"• options: AccessControlOptions","returns-4#Returns":"DynamicModule","overrides#Overrides":"AccessControlModuleClass.register","source-4#Source":"packages/nestjs-access-control/src/access-control.module.ts:13","registerasync#registerAsync()":"static registerAsync(options): DynamicModule","parameters-4#Parameters":"• options: AccessControlAsyncOptions","returns-5#Returns":"DynamicModule","overrides-1#Overrides":"AccessControlModuleClass.registerAsync","source-5#Source":"packages/nestjs-access-control/src/access-control.module.ts:17"}},"/reference/rockets/nestjs-access-control/classes/AccessControlService":{"title":"Class: AccessControlService","data":{"":"@concepta/nestjs-access-control • DocsPackages Example / @concepta/nestjs-access-control / AccessControlService","implements#Implements":"AccessControlServiceInterface","constructors#Constructors":"","new-accesscontrolservice#new AccessControlService()":"new AccessControlService(): AccessControlService","returns#Returns":"AccessControlService","methods#Methods":"","getuser#getUser()":"getUser<T>(context): Promise<T>","type-parameters#Type parameters":"• T","parameters#Parameters":"• context: ExecutionContext","returns-1#Returns":"Promise<T>","implementation-of#Implementation of":"AccessControlServiceInterface.getUser","source#Source":"packages/nestjs-access-control/src/services/access-control.service.ts:18","getuserroles#getUserRoles()":"getUserRoles(context): Promise<string | string[]>","parameters-1#Parameters":"• context: ExecutionContext","returns-2#Returns":"Promise<string | string[]>","implementation-of-1#Implementation of":"AccessControlServiceInterface.getUserRoles","source-1#Source":"packages/nestjs-access-control/src/services/access-control.service.ts:22"}},"/reference/rockets/nestjs-access-control/enumerations/PossessionEnum":{"title":"Enumeration: PossessionEnum","data":{"":"@concepta/nestjs-access-control • DocsPackages Example / @concepta/nestjs-access-control / PossessionEnum","enumeration-members#Enumeration Members":"","any#ANY":"ANY: \"any\"","source#Source":"packages/nestjs-access-control/src/enums/possession.enum.ts:2","own#OWN":"OWN: \"own\"","source-1#Source":"packages/nestjs-access-control/src/enums/possession.enum.ts:3"}},"/reference/rockets/nestjs-access-control/enumerations/ActionEnum":{"title":"Enumeration: ActionEnum","data":{"":"@concepta/nestjs-access-control • DocsPackages Example / @concepta/nestjs-access-control / ActionEnum","enumeration-members#Enumeration Members":"","create#CREATE":"CREATE: \"create\"","source#Source":"packages/nestjs-access-control/src/enums/action.enum.ts:2","delete#DELETE":"DELETE: \"delete\"","source-1#Source":"packages/nestjs-access-control/src/enums/action.enum.ts:5","read#READ":"READ: \"read\"","source-2#Source":"packages/nestjs-access-control/src/enums/action.enum.ts:3","update#UPDATE":"UPDATE: \"update\"","source-3#Source":"packages/nestjs-access-control/src/enums/action.enum.ts:4"}},"/reference/rockets/nestjs-access-control/functions/AccessControlCreateMany":{"title":"Function: AccessControlCreateMany()","data":{"":"@concepta/nestjs-access-control • DocsPackages Example / @concepta/nestjs-access-control / AccessControlCreateMany\nAccessControlCreateMany(resource): <TFunction, Y>(target, propertyKey?, descriptor?) => void\nCreate many resource grant shortcut.","parameters#Parameters":"• resource: string","returns#Returns":"Function","type-parameters#Type parameters":"• TFunction extends Function• Y","parameters-1#Parameters":"• target: object | TFunction• propertyKey?: string | symbol• descriptor?: TypedPropertyDescriptor<Y>","returns-1#Returns":"void","source#Source":"packages/nestjs-access-control/src/decorators/access-control-create-many.decorator.ts:8"}},"/reference/rockets/nestjs-access-control/functions/AccessControlCreateOne":{"title":"Function: AccessControlCreateOne()","data":{"":"@concepta/nestjs-access-control • DocsPackages Example / @concepta/nestjs-access-control / AccessControlCreateOne\nAccessControlCreateOne(resource): <TFunction, Y>(target, propertyKey?, descriptor?) => void\nCreate one resource grant shortcut.","parameters#Parameters":"• resource: string","returns#Returns":"FunctionDecorator function","type-parameters#Type parameters":"• TFunction extends Function• Y","parameters-1#Parameters":"• target: object | TFunction• propertyKey?: string | symbol• descriptor?: TypedPropertyDescriptor<Y>","returns-1#Returns":"void","source#Source":"packages/nestjs-access-control/src/decorators/access-control-create-one.decorator.ts:11"}},"/reference/rockets/nestjs-access-control/functions/AccessControlDeleteOne":{"title":"Function: AccessControlDeleteOne()","data":{"":"@concepta/nestjs-access-control • DocsPackages Example / @concepta/nestjs-access-control / AccessControlDeleteOne\nAccessControlDeleteOne(resource): <TFunction, Y>(target, propertyKey?, descriptor?) => void\nDelete one resource grant shortcut","parameters#Parameters":"• resource: string","returns#Returns":"FunctionDecorator function","type-parameters#Type parameters":"• TFunction extends Function• Y","parameters-1#Parameters":"• target: object | TFunction• propertyKey?: string | symbol• descriptor?: TypedPropertyDescriptor<Y>","returns-1#Returns":"void","source#Source":"packages/nestjs-access-control/src/decorators/access-control-delete-one.decorator.ts:11"}},"/reference/rockets/nestjs-access-control/functions/AccessControlGrant":{"title":"Function: AccessControlGrant()","data":{"":"@concepta/nestjs-access-control • DocsPackages Example / @concepta/nestjs-access-control / AccessControlGrant\nAccessControlGrant(...acGrants): CustomDecorator<unknown>\nDefine access control grants required for this route.","parameters#Parameters":"• ...acGrants: AccessControlGrantOptionInterface[]Array of access control grants.","returns#Returns":"CustomDecorator<unknown>Decorator function.","source#Source":"packages/nestjs-access-control/src/decorators/access-control-grant.decorator.ts:11"}},"/reference/rockets/nestjs-access-control/functions/AccessControlQuery":{"title":"Function: AccessControlQuery()","data":{"":"@concepta/nestjs-access-control • DocsPackages Example / @concepta/nestjs-access-control / AccessControlQuery\nAccessControlQuery(...queryOptions): CustomDecorator<unknown>\nDefine access query options for this route.","parameters#Parameters":"• ...queryOptions: AccessControlQueryOptionInterface[]Array of access control query options.","returns#Returns":"CustomDecorator<unknown>Decorator function.","source#Source":"packages/nestjs-access-control/src/decorators/access-control-query.decorator.ts:11"}},"/reference/rockets/nestjs-access-control/functions/AccessControlReadMany":{"title":"Function: AccessControlReadMany()","data":{"":"@concepta/nestjs-access-control • DocsPackages Example / @concepta/nestjs-access-control / AccessControlReadMany\nAccessControlReadMany(resource): <TFunction, Y>(target, propertyKey?, descriptor?) => void\nRead many resource grant shortcut.","parameters#Parameters":"• resource: string","returns#Returns":"FunctionDecorator function","type-parameters#Type parameters":"• TFunction extends Function• Y","parameters-1#Parameters":"• target: object | TFunction• propertyKey?: string | symbol• descriptor?: TypedPropertyDescriptor<Y>","returns-1#Returns":"void","source#Source":"packages/nestjs-access-control/src/decorators/access-control-read-many.decorator.ts:11"}},"/reference/rockets/nestjs-access-control/functions/AccessControlReadOne":{"title":"Function: AccessControlReadOne()","data":{"":"@concepta/nestjs-access-control • DocsPackages Example / @concepta/nestjs-access-control / AccessControlReadOne\nAccessControlReadOne(resource): <TFunction, Y>(target, propertyKey?, descriptor?) => void\nRead one resource grant shortcut","parameters#Parameters":"• resource: string","returns#Returns":"FunctionDecorator function","type-parameters#Type parameters":"• TFunction extends Function• Y","parameters-1#Parameters":"• target: object | TFunction• propertyKey?: string | symbol• descriptor?: TypedPropertyDescriptor<Y>","returns-1#Returns":"void","source#Source":"packages/nestjs-access-control/src/decorators/access-control-read-one.decorator.ts:11"}},"/reference/rockets/nestjs-access-control/functions/AccessControlRecoverOne":{"title":"Function: AccessControlRecoverOne()","data":{"":"@concepta/nestjs-access-control • DocsPackages Example / @concepta/nestjs-access-control / AccessControlRecoverOne\nAccessControlRecoverOne(resource): <TFunction, Y>(target, propertyKey?, descriptor?) => void\nRecover one resource grant shortcut.","parameters#Parameters":"• resource: string","returns#Returns":"Function","type-parameters#Type parameters":"• TFunction extends Function• Y","parameters-1#Parameters":"• target: object | TFunction• propertyKey?: string | symbol• descriptor?: TypedPropertyDescriptor<Y>","returns-1#Returns":"void","source#Source":"packages/nestjs-access-control/src/decorators/access-control-recover-one.decorator.ts:8"}},"/reference/rockets/nestjs-access-control/functions/AccessControlReplaceOne":{"title":"Function: AccessControlReplaceOne()","data":{"":"@concepta/nestjs-access-control • DocsPackages Example / @concepta/nestjs-access-control / AccessControlReplaceOne\nAccessControlReplaceOne(resource): <TFunction, Y>(target, propertyKey?, descriptor?) => void\nUpdate one resource grant shortcut","parameters#Parameters":"• resource: string","returns#Returns":"Function","type-parameters#Type parameters":"• TFunction extends Function• Y","parameters-1#Parameters":"• target: object | TFunction• propertyKey?: string | symbol• descriptor?: TypedPropertyDescriptor<Y>","returns-1#Returns":"void","source#Source":"packages/nestjs-access-control/src/decorators/access-control-replace-one.decorator.ts:8"}},"/reference/rockets/nestjs-access-control/functions/AccessControlUpdateOne":{"title":"Function: AccessControlUpdateOne()","data":{"":"@concepta/nestjs-access-control • DocsPackages Example / @concepta/nestjs-access-control / AccessControlUpdateOne\nAccessControlUpdateOne(resource): <TFunction, Y>(target, propertyKey?, descriptor?) => void\nUpdate one resource grant shortcut","parameters#Parameters":"• resource: string","returns#Returns":"FunctionDecorator function","type-parameters#Type parameters":"• TFunction extends Function• Y","parameters-1#Parameters":"• target: object | TFunction• propertyKey?: string | symbol• descriptor?: TypedPropertyDescriptor<Y>","returns-1#Returns":"void","source#Source":"packages/nestjs-access-control/src/decorators/access-control-update-one.decorator.ts:11"}},"/reference/rockets/nestjs-access-control/globals":{"title":"@concepta/nestjs-access-control","data":{"":"@concepta/nestjs-access-control • DocsPackages Example / @concepta/nestjs-access-control","enumerations#Enumerations":"ActionEnum\nPossessionEnum","classes#Classes":"AccessControlContext\nAccessControlGuard\nAccessControlModule\nAccessControlService","interfaces#Interfaces":"AccessControlContextInterface\nAccessControlGrantOptionInterface\nAccessControlMetadataInterface\nAccessControlOptionsInterface\nAccessControlQueryOptionInterface\nAccessControlServiceInterface\nCanAccess","functions#Functions":"AccessControlCreateMany\nAccessControlCreateOne\nAccessControlDeleteOne\nAccessControlGrant\nAccessControlQuery\nAccessControlReadMany\nAccessControlReadOne\nAccessControlRecoverOne\nAccessControlReplaceOne\nAccessControlUpdateOne","references#References":"","accesscontrolaction#AccessControlAction":"Renames and re-exports ActionEnum"}},"/reference/rockets/nestjs-access-control/interfaces/AccessControlContextInterface":{"title":"Interface: AccessControlContextInterface","data":{"":"@concepta/nestjs-access-control • DocsPackages Example / @concepta/nestjs-access-control / AccessControlContextInterface","methods#Methods":"","getaccesscontrol#getAccessControl()":"getAccessControl(): AccessControl","returns#Returns":"AccessControl","source#Source":"packages/nestjs-access-control/src/interfaces/access-control-context.interface.ts:8","getexecutioncontext#getExecutionContext()":"getExecutionContext(): ExecutionContext","returns-1#Returns":"ExecutionContext","source-1#Source":"packages/nestjs-access-control/src/interfaces/access-control-context.interface.ts:9","getquery#getQuery()":"getQuery(): IQueryInfo","returns-2#Returns":"IQueryInfo","source-2#Source":"packages/nestjs-access-control/src/interfaces/access-control-context.interface.ts:7","getrequest#getRequest()":"getRequest(property?): unknown","parameters#Parameters":"• property?: string","returns-3#Returns":"unknown","source-3#Source":"packages/nestjs-access-control/src/interfaces/access-control-context.interface.ts:5","getuser#getUser()":"getUser(): unknown","returns-4#Returns":"unknown","source-4#Source":"packages/nestjs-access-control/src/interfaces/access-control-context.interface.ts:6"}},"/reference/rockets/nestjs-access-control/interfaces/AccessControlGrantOptionInterface":{"title":"Interface: AccessControlGrantOptionInterface","data":{"":"@concepta/nestjs-access-control • DocsPackages Example / @concepta/nestjs-access-control / AccessControlGrantOptionInterface","properties#Properties":"","action#action":"action: ActionEnum","source#Source":"packages/nestjs-access-control/src/interfaces/access-control-grant-option.interface.ts:5","resource#resource":"resource: string","source-1#Source":"packages/nestjs-access-control/src/interfaces/access-control-grant-option.interface.ts:4"}},"/reference/rockets/nestjs-access-control/interfaces/AccessControlMetadataInterface":{"title":"Interface: AccessControlMetadataInterface","data":{"":"@concepta/nestjs-access-control • DocsPackages Example / @concepta/nestjs-access-control / AccessControlMetadataInterface","properties#Properties":"","service#service?":"optional service: Type<AccessControlServiceInterface>","source#Source":"packages/nestjs-access-control/src/interfaces/access-control-metadata.interface.ts:5"}},"/reference/rockets/nestjs-access-control/interfaces/AccessControlOptionsInterface":{"title":"Interface: AccessControlOptionsInterface","data":{"":"@concepta/nestjs-access-control • DocsPackages Example / @concepta/nestjs-access-control / AccessControlOptionsInterface","properties#Properties":"","appguard#appGuard?":"optional appGuard: false | CanActivate","source#Source":"packages/nestjs-access-control/src/interfaces/access-control-options.interface.ts:8","service#service?":"optional service: AccessControlServiceInterface","source-1#Source":"packages/nestjs-access-control/src/interfaces/access-control-options.interface.ts:7","settings#settings":"settings: AccessControlSettingsInterface","source-2#Source":"packages/nestjs-access-control/src/interfaces/access-control-options.interface.ts:6"}},"/reference/rockets/nestjs-access-control/interfaces/AccessControlQueryOptionInterface":{"title":"Interface: AccessControlQueryOptionInterface","data":{"":"@concepta/nestjs-access-control • DocsPackages Example / @concepta/nestjs-access-control / AccessControlQueryOptionInterface","properties#Properties":"","service#service":"service: Type<CanAccess>\nService used for advanced validation","source#Source":"packages/nestjs-access-control/src/interfaces/access-control-query-option.interface.ts:8"}},"/reference/rockets/nestjs-access-control/interfaces/CanAccess":{"title":"Interface: CanAccess","data":{"":"@concepta/nestjs-access-control • DocsPackages Example / @concepta/nestjs-access-control / CanAccess","methods#Methods":"","canaccess#canAccess()":"canAccess(context): Promise<boolean>","parameters#Parameters":"• context: AccessControlContextInterface","returns#Returns":"Promise<boolean>","source#Source":"packages/nestjs-access-control/src/interfaces/can-access.interface.ts:4"}},"/reference/rockets/nestjs-access-control/interfaces/AccessControlServiceInterface":{"title":"Interface: AccessControlServiceInterface","data":{"":"@concepta/nestjs-access-control • DocsPackages Example / @concepta/nestjs-access-control / AccessControlServiceInterface","methods#Methods":"","getuser#getUser()":"getUser(context): Promise<unknown>","parameters#Parameters":"• context: ExecutionContext","returns#Returns":"Promise<unknown>","source#Source":"packages/nestjs-access-control/src/interfaces/access-control-service.interface.ts:4","getuserroles#getUserRoles()":"getUserRoles(context): Promise<string | string[]>","parameters-1#Parameters":"• context: ExecutionContext","returns-1#Returns":"Promise<string | string[]>","source-1#Source":"packages/nestjs-access-control/src/interfaces/access-control-service.interface.ts:5"}},"/about":{"title":"About","data":{"":"This is the about page! This page is shown on the navbar.Advanced"}},"/reference/rockets/nestjs-auth-github/README":{"title":"Rockets NestJS GitHub Federated Authentication","data":{"":"@concepta/nestjs-auth-github • DocsPackages Example / @concepta/nestjs-auth-githubAuthenticate requests using GitHub OAuth2","project#Project":"","installation#Installation":"yarn add @concepta/nestjs-auth-github"}},"/":{"title":"Rockets - Rapid Enterprise Development Toolkit","data":{"":"Rockets\nRapid Enterprise Development Toolkit\nThe Rockets API library is a collection of NestJS modules that were created for the rapid development of enterpise level APIs.Through over 15 years of experience, we have made enterprise-level development more agile. Rockets is a combination of all these lessons, best practices and tools packaged and made available to you.","motivation#Motivation":"This project aims to help quickly build an enterprise-level core for projects that share the same business rules across web, mobile, server and desktop.","goals#Goals":"Provide solid stable foundational APIs to build enterprise applications.\nFocus on extensibility over customization.\nGreat development experience through well thought out APIs and documentation\nFlexibility over business rules.","architecture#Architecture":"Every effort has been made to develop Rockets with an abstract mindset, and introduce as\nfew opinions into the code base as possible (within reason).","api#API":"The Rockets API library is a collection of pluggable modules that enables you to rapidly stand up an API\nfor your enterprise project, and quickly extend and adapt it to your use case and requirements with zero boilerplate.\nDeveloped with the NestJS Framework\nDozens of pluggable open source modules\nUse with any community or custom NestJS module","web--desktop#Web & Desktop":"","react#React":"Abstract Logical Component Layer\nUI library developed using Material UI","flutter#Flutter":"* Flutter support is on the roadmap.\nAbstract Logical Component Layer\nUI library developed using Mix","ui-compatibility#UI Compatibility":"Bring your own logical components and use one of our UI libraries\nBring your own UI library and use our logical components\nMix in community or custom components.","mobile#Mobile":"We use and recommend:\nExpo\nReact Native\nFlutter"}},"/reference/rockets/nestjs-auth-github/classes/AuthGithubController":{"title":"Class: AuthGithubController","data":{"":"@concepta/nestjs-auth-github • DocsPackages Example / @concepta/nestjs-auth-github / AuthGithubControllerGithub controllerFlow of how github works:\nClient call auth/github/login to be redirected to github login page to require authentication\nAfter authorized by github, the user will be redirected to the callback url defined in the config\nThe auth/github/callback url will be called with the code as a query parameter\nThe code will be used to get the access token and user profile from github\nThe user profile will be used to create a new user or return the existing user from federated module\nThe user will be authenticated and a token will be issued\nThe token will be returned to the client\nThe client can use the token to make requests to the protected resources","constructors#Constructors":"","new-authgithubcontroller#new AuthGithubController()":"new AuthGithubController(issueTokenService): AuthGithubController","parameters#Parameters":"• issueTokenService: IssueTokenServiceInterface","returns#Returns":"AuthGithubController","source#Source":"packages/nestjs-auth-github/src/auth-github.controller.ts:37","properties#Properties":"","issuetokenservice#issueTokenService":"private issueTokenService: IssueTokenServiceInterface","source-1#Source":"packages/nestjs-auth-github/src/auth-github.controller.ts:39","methods#Methods":"","get#get()":"get(user): Promise<AuthenticationResponseInterface>","parameters-1#Parameters":"• user: AuthenticatedUserInterface","returns-1#Returns":"Promise<AuthenticationResponseInterface>","source-2#Source":"packages/nestjs-auth-github/src/auth-github.controller.ts:60","login#login()":"login(): void\nLogin","returns-2#Returns":"void","source-3#Source":"packages/nestjs-auth-github/src/auth-github.controller.ts:49"}},"/reference/rockets/nestjs-auth-github/classes/AuthGithubGuard":{"title":"Class: AuthGithubGuard","data":{"":"@concepta/nestjs-auth-github • DocsPackages Example / @concepta/nestjs-auth-github / AuthGithubGuard","extends#Extends":"object","constructors#Constructors":"","new-authgithubguard#new AuthGithubGuard()":"new AuthGithubGuard(authenticationSettings, reflector): AuthGithubGuard","parameters#Parameters":"• authenticationSettings: AuthenticationSettingsInterface• reflector: Reflector","returns#Returns":"AuthGithubGuard","inherited-from#Inherited from":"AuthGuard(AUTH_GITHUB_STRATEGY_NAME, { canDisable: false, }).constructor","source#Source":"packages/nestjs-authentication/dist/guards/auth.guard.d.ts:6","properties#Properties":"","authenticationsettings#authenticationSettings":"readonly authenticationSettings: AuthenticationSettingsInterface","inherited-from-1#Inherited from":"AuthGuard(AUTH_GITHUB_STRATEGY_NAME, { canDisable: false, }).authenticationSettings","source-1#Source":"packages/nestjs-authentication/dist/guards/auth.guard.d.ts:8","options#options":"readonly options: AuthGuardOptions","inherited-from-2#Inherited from":"AuthGuard(AUTH_GITHUB_STRATEGY_NAME, { canDisable: false, }).options","source-2#Source":"packages/nestjs-authentication/dist/guards/auth.guard.d.ts:7","reflector#reflector":"readonly reflector: Reflector","inherited-from-3#Inherited from":"AuthGuard(AUTH_GITHUB_STRATEGY_NAME, { canDisable: false, }).reflector","source-3#Source":"packages/nestjs-authentication/dist/guards/auth.guard.d.ts:9","methods#Methods":"","canactivate#canActivate()":"canActivate(context): boolean | Promise<boolean> | Observable<boolean>","parameters-1#Parameters":"• context: ExecutionContext","returns-1#Returns":"boolean | Promise<boolean> | Observable<boolean>","inherited-from-4#Inherited from":"AuthGuard(AUTH_GITHUB_STRATEGY_NAME, { canDisable: false, }).canActivate","source-4#Source":"packages/nestjs-authentication/dist/guards/auth.guard.d.ts:10"}},"/reference/rockets/nestjs-auth-github/classes/AuthGithubLoginDto":{"title":"Class: AuthGithubLoginDto","data":{"":"@concepta/nestjs-auth-github • DocsPackages Example / @concepta/nestjs-auth-github / AuthGithubLoginDto","implements#Implements":"AuthenticationCodeInterface","constructors#Constructors":"","new-authgithublogindto#new AuthGithubLoginDto()":"new AuthGithubLoginDto(): AuthGithubLoginDto","returns#Returns":"AuthGithubLoginDto","properties#Properties":"","code#code":"code: string = ''","implementation-of#Implementation of":"AuthenticationCodeInterface.code","source#Source":"packages/nestjs-auth-github/src/dto/auth-github-login.dto.ts:14"}},"/reference/rockets/nestjs-auth-github/classes/AuthGithubModule":{"title":"Class: AuthGithubModule","data":{"":"@concepta/nestjs-auth-github • DocsPackages Example / @concepta/nestjs-auth-github / AuthGithubModuleAuth GitHub module","extends#Extends":"AuthGithubModuleClass","constructors#Constructors":"","new-authgithubmodule#new AuthGithubModule()":"new AuthGithubModule(): AuthGithubModule","returns#Returns":"AuthGithubModule","inherited-from#Inherited from":"AuthGithubModuleClass.constructor","source#Source":"node_modules/@nestjs/common/module-utils/interfaces/configurable-module-cls.interface.d.ts:12","methods#Methods":"","forfeature#forFeature()":"static forFeature(options): DynamicModule","parameters#Parameters":"• options: AuthGithubOptions","returns-1#Returns":"DynamicModule","source-1#Source":"packages/nestjs-auth-github/src/auth-github.module.ts:34","forroot#forRoot()":"static forRoot(options): DynamicModule","parameters-1#Parameters":"• options: AuthGithubOptions","returns-2#Returns":"DynamicModule","source-2#Source":"packages/nestjs-auth-github/src/auth-github.module.ts:26","forrootasync#forRootAsync()":"static forRootAsync(options): DynamicModule","parameters-2#Parameters":"• options: AuthGithubAsyncOptions","returns-3#Returns":"DynamicModule","source-3#Source":"packages/nestjs-auth-github/src/auth-github.module.ts:30","register#register()":"static register(options): DynamicModule","parameters-3#Parameters":"• options: AuthGithubOptions","returns-4#Returns":"DynamicModule","overrides#Overrides":"AuthGithubModuleClass.register","source-4#Source":"packages/nestjs-auth-github/src/auth-github.module.ts:18","registerasync#registerAsync()":"static registerAsync(options): DynamicModule","parameters-4#Parameters":"• options: AuthGithubAsyncOptions","returns-5#Returns":"DynamicModule","overrides-1#Overrides":"AuthGithubModuleClass.registerAsync","source-5#Source":"packages/nestjs-auth-github/src/auth-github.module.ts:22"}},"/reference/rockets/nestjs-auth-github/globals":{"title":"@concepta/nestjs-auth-github","data":{"":"@concepta/nestjs-auth-github • DocsPackages Example / @concepta/nestjs-auth-github","classes#Classes":"AuthGithubController\nAuthGithubGuard\nAuthGithubLoginDto\nAuthGithubModule","references#References":"","githubauthguard#GithubAuthGuard":"Renames and re-exports AuthGithubGuard"}},"/reference/rockets/nestjs-auth-jwt/classes/AuthJwtGuard":{"title":"Class: AuthJwtGuard","data":{"":"@concepta/nestjs-auth-jwt • DocsPackages Example / @concepta/nestjs-auth-jwt / AuthJwtGuard","extends#Extends":"object","constructors#Constructors":"","new-authjwtguard#new AuthJwtGuard()":"new AuthJwtGuard(authenticationSettings, reflector): AuthJwtGuard","parameters#Parameters":"• authenticationSettings: AuthenticationSettingsInterface• reflector: Reflector","returns#Returns":"AuthJwtGuard","inherited-from#Inherited from":"AuthGuard(AUTH_JWT_STRATEGY_NAME, { canDisable: true, }).constructor","source#Source":"packages/nestjs-authentication/dist/guards/auth.guard.d.ts:6","properties#Properties":"","authenticationsettings#authenticationSettings":"readonly authenticationSettings: AuthenticationSettingsInterface","inherited-from-1#Inherited from":"AuthGuard(AUTH_JWT_STRATEGY_NAME, { canDisable: true, }).authenticationSettings","source-1#Source":"packages/nestjs-authentication/dist/guards/auth.guard.d.ts:8","options#options":"readonly options: AuthGuardOptions","inherited-from-2#Inherited from":"AuthGuard(AUTH_JWT_STRATEGY_NAME, { canDisable: true, }).options","source-2#Source":"packages/nestjs-authentication/dist/guards/auth.guard.d.ts:7","reflector#reflector":"readonly reflector: Reflector","inherited-from-3#Inherited from":"AuthGuard(AUTH_JWT_STRATEGY_NAME, { canDisable: true, }).reflector","source-3#Source":"packages/nestjs-authentication/dist/guards/auth.guard.d.ts:9","methods#Methods":"","canactivate#canActivate()":"canActivate(context): boolean | Promise<boolean> | Observable<boolean>","parameters-1#Parameters":"• context: ExecutionContext","returns-1#Returns":"boolean | Promise<boolean> | Observable<boolean>","inherited-from-4#Inherited from":"AuthGuard(AUTH_JWT_STRATEGY_NAME, { canDisable: true, }).canActivate","source-4#Source":"packages/nestjs-authentication/dist/guards/auth.guard.d.ts:10","handlerequest#handleRequest()":"handleRequest<T>(err, user, info?): NonNullable<T>","type-parameters#Type parameters":"• T = ReferenceIdInterface<string>","parameters-2#Parameters":"• err: undefined | Error• user: T• info?: Error","returns-2#Returns":"NonNullable<T>","source-5#Source":"packages/nestjs-auth-jwt/src/auth-jwt.guard.ts:11"}},"/reference/rockets/nestjs-auth-jwt/classes/AuthJwtModule":{"title":"Class: AuthJwtModule","data":{"":"@concepta/nestjs-auth-jwt • DocsPackages Example / @concepta/nestjs-auth-jwt / AuthJwtModuleAuth local module","extends#Extends":"AuthJwtModuleClass","constructors#Constructors":"","new-authjwtmodule#new AuthJwtModule()":"new AuthJwtModule(): AuthJwtModule","returns#Returns":"AuthJwtModule","inherited-from#Inherited from":"AuthJwtModuleClass.constructor","source#Source":"node_modules/@nestjs/common/module-utils/interfaces/configurable-module-cls.interface.d.ts:12","methods#Methods":"","forfeature#forFeature()":"static forFeature(options): DynamicModule","parameters#Parameters":"• options: AuthJwtOptions","returns-1#Returns":"DynamicModule","source-1#Source":"packages/nestjs-auth-jwt/src/auth-jwt.module.ts:33","forroot#forRoot()":"static forRoot(options): DynamicModule","parameters-1#Parameters":"• options: AuthJwtOptions","returns-2#Returns":"DynamicModule","source-2#Source":"packages/nestjs-auth-jwt/src/auth-jwt.module.ts:25","forrootasync#forRootAsync()":"static forRootAsync(options): DynamicModule","parameters-2#Parameters":"• options: AuthJwtAsyncOptions","returns-3#Returns":"DynamicModule","source-3#Source":"packages/nestjs-auth-jwt/src/auth-jwt.module.ts:29","register#register()":"static register(options): DynamicModule","parameters-3#Parameters":"• options: AuthJwtOptions","returns-4#Returns":"DynamicModule","overrides#Overrides":"AuthJwtModuleClass.register","source-4#Source":"packages/nestjs-auth-jwt/src/auth-jwt.module.ts:17","registerasync#registerAsync()":"static registerAsync(options): DynamicModule","parameters-4#Parameters":"• options: AuthJwtAsyncOptions","returns-5#Returns":"DynamicModule","overrides-1#Overrides":"AuthJwtModuleClass.registerAsync","source-5#Source":"packages/nestjs-auth-jwt/src/auth-jwt.module.ts:21"}},"/reference/rockets/nestjs-auth-jwt/classes/AuthJwtStrategy":{"title":"Class: AuthJwtStrategy","data":{"":"@concepta/nestjs-auth-jwt • DocsPackages Example / @concepta/nestjs-auth-jwt / AuthJwtStrategy","extends#Extends":"JwtStrategy<this>","constructors#Constructors":"","new-authjwtstrategy#new AuthJwtStrategy()":"new AuthJwtStrategy(settings, verifyTokenService, userLookupService): AuthJwtStrategy","parameters#Parameters":"• settings: Partial<AuthJwtSettingsInterface>• verifyTokenService: VerifyTokenServiceInterface• userLookupService: AuthJwtUserLookupServiceInterface","returns#Returns":"AuthJwtStrategy","overrides#Overrides":"JwtStrategy.constructor","source#Source":"packages/nestjs-auth-jwt/src/auth-jwt.strategy.ts:30","properties#Properties":"","userlookupservice#userLookupService":"private userLookupService: AuthJwtUserLookupServiceInterface","source-1#Source":"packages/nestjs-auth-jwt/src/auth-jwt.strategy.ts:36","methods#Methods":"","authenticate#authenticate()":"authenticate(...args): void","parameters-1#Parameters":"• ...args: [Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>, any]","returns-1#Returns":"void","inherited-from#Inherited from":"JwtStrategy.authenticate","source-2#Source":"packages/nestjs-jwt/dist/jwt.strategy.d.ts:8","error#error()":"error(err): void\nInternal error while performing authentication.Strategies should call this function when an internal error occurs\nduring the process of performing authentication; for example, if the\nuser directory is not available.","parameters-2#Parameters":"• err: Error","returns-2#Returns":"void","inherited-from-1#Inherited from":"JwtStrategy.error","api#Api":"public","source-3#Source":"node_modules/@types/passport-strategy/index.d.ts:96","fail#fail()":"","failchallenge-status#fail(challenge, status)":"fail(challenge, status): void\nFail authentication, with optional challenge and status, defaulting\nto 401.Strategies should call this function to fail an authentication attempt.","parameters-3#Parameters":"• challenge: any(Can also be an object with 'message' and 'type' fields).• status: number","returns-3#Returns":"void","inherited-from-2#Inherited from":"JwtStrategy.fail","api-1#Api":"public","source-4#Source":"node_modules/@types/passport-strategy/index.d.ts:60","failstatus#fail(status)":"fail(status): void","parameters-4#Parameters":"• status: number","returns-4#Returns":"void","inherited-from-3#Inherited from":"JwtStrategy.fail","source-5#Source":"node_modules/@types/passport-strategy/index.d.ts:61","pass#pass()":"pass(): void\nPass without making a success or fail decision.Under most circumstances, Strategies should not need to call this\nfunction.  It exists primarily to allow previous authentication state\nto be restored, for example from an HTTP session.","returns-5#Returns":"void","inherited-from-4#Inherited from":"JwtStrategy.pass","api-2#Api":"public","source-6#Source":"node_modules/@types/passport-strategy/index.d.ts:84","redirect#redirect()":"redirect(url, status?): void\nRedirect to url with optional status, defaulting to 302.Strategies should call this function to redirect the user (via their\nuser agent) to a third-party website for authentication.","parameters-5#Parameters":"• url: string• status?: number","returns-6#Returns":"void","inherited-from-5#Inherited from":"JwtStrategy.redirect","api-3#Api":"public","source-7#Source":"node_modules/@types/passport-strategy/index.d.ts:73","success#success()":"success(user, info?): void\nAuthenticate user, with optional info.Strategies should call this function to successfully authenticate a\nuser.  user should be an object supplied by the application after it\nhas been given an opportunity to verify credentials.  info is an\noptional argument containing additional user information.  This is\nuseful for third-party authentication strategies to pass profile\ndetails.","parameters-6#Parameters":"• user: any• info?: any","returns-7#Returns":"void","inherited-from-6#Inherited from":"JwtStrategy.success","api-4#Api":"public","source-8#Source":"node_modules/@types/passport-strategy/index.d.ts:48","validate#validate()":"validate(payload, queryOptions?): Promise<ReferenceIdInterface<string>>\nValidate the user based on payload sub","parameters-7#Parameters":"• payload: AuthorizationPayloadInterfaceThe payload to validate• queryOptions?: QueryOptionsInterface","returns-8#Returns":"Promise<ReferenceIdInterface<string>>","source-9#Source":"packages/nestjs-auth-jwt/src/auth-jwt.strategy.ts:51"}},"/reference/rockets/nestjs-auth-jwt/globals":{"title":"@concepta/nestjs-auth-jwt","data":{"":"@concepta/nestjs-auth-jwt • DocsPackages Example / @concepta/nestjs-auth-jwt","classes#Classes":"AuthJwtGuard\nAuthJwtModule\nAuthJwtStrategy","references#References":"","jwtauthguard#JwtAuthGuard":"Renames and re-exports AuthJwtGuard"}},"/reference/rockets/nestjs-auth-local/classes/AuthLocalController":{"title":"Class: AuthLocalController","data":{"":"@concepta/nestjs-auth-local • DocsPackages Example / @concepta/nestjs-auth-local / AuthLocalControllerAuth Local controller","constructors#Constructors":"","new-authlocalcontroller#new AuthLocalController()":"new AuthLocalController(issueTokenService): AuthLocalController","parameters#Parameters":"• issueTokenService: IssueTokenServiceInterface","returns#Returns":"AuthLocalController","source#Source":"packages/nestjs-auth-local/src/auth-local.controller.ts:30","properties#Properties":"","issuetokenservice#issueTokenService":"private issueTokenService: IssueTokenServiceInterface","source-1#Source":"packages/nestjs-auth-local/src/auth-local.controller.ts:32","methods#Methods":"","login#login()":"login(user): Promise<AuthenticationResponseInterface>\nLogin","parameters-1#Parameters":"• user: AuthenticatedUserInterface","returns-1#Returns":"Promise<AuthenticationResponseInterface>","source-2#Source":"packages/nestjs-auth-local/src/auth-local.controller.ts:48"}},"/reference/rockets/nestjs-auth-local/classes/AuthLocalGuard":{"title":"Class: AuthLocalGuard","data":{"":"@concepta/nestjs-auth-local • DocsPackages Example / @concepta/nestjs-auth-local / AuthLocalGuard","extends#Extends":"object","constructors#Constructors":"","new-authlocalguard#new AuthLocalGuard()":"new AuthLocalGuard(authenticationSettings, reflector): AuthLocalGuard","parameters#Parameters":"• authenticationSettings: AuthenticationSettingsInterface• reflector: Reflector","returns#Returns":"AuthLocalGuard","inherited-from#Inherited from":"AuthGuard(AUTH_LOCAL_STRATEGY_NAME, { canDisable: false, }).constructor","source#Source":"packages/nestjs-authentication/dist/guards/auth.guard.d.ts:6","properties#Properties":"","authenticationsettings#authenticationSettings":"readonly authenticationSettings: AuthenticationSettingsInterface","inherited-from-1#Inherited from":"AuthGuard(AUTH_LOCAL_STRATEGY_NAME, { canDisable: false, }).authenticationSettings","source-1#Source":"packages/nestjs-authentication/dist/guards/auth.guard.d.ts:8","options#options":"readonly options: AuthGuardOptions","inherited-from-2#Inherited from":"AuthGuard(AUTH_LOCAL_STRATEGY_NAME, { canDisable: false, }).options","source-2#Source":"packages/nestjs-authentication/dist/guards/auth.guard.d.ts:7","reflector#reflector":"readonly reflector: Reflector","inherited-from-3#Inherited from":"AuthGuard(AUTH_LOCAL_STRATEGY_NAME, { canDisable: false, }).reflector","source-3#Source":"packages/nestjs-authentication/dist/guards/auth.guard.d.ts:9","methods#Methods":"","canactivate#canActivate()":"canActivate(context): boolean | Promise<boolean> | Observable<boolean>","parameters-1#Parameters":"• context: ExecutionContext","returns-1#Returns":"boolean | Promise<boolean> | Observable<boolean>","inherited-from-4#Inherited from":"AuthGuard(AUTH_LOCAL_STRATEGY_NAME, { canDisable: false, }).canActivate","source-4#Source":"packages/nestjs-authentication/dist/guards/auth.guard.d.ts:10"}},"/reference/rockets/nestjs-auth-local/classes/AuthLocalLoginDto":{"title":"Class: AuthLocalLoginDto","data":{"":"@concepta/nestjs-auth-local • DocsPackages Example / @concepta/nestjs-auth-local / AuthLocalLoginDtoPassword plain text interface","implements#Implements":"AuthenticationLoginInterface","constructors#Constructors":"","new-authlocallogindto#new AuthLocalLoginDto()":"new AuthLocalLoginDto(): AuthLocalLoginDto","returns#Returns":"AuthLocalLoginDto","properties#Properties":"","password#password":"password: string = ''\nPassword","implementation-of#Implementation of":"AuthenticationLoginInterface.password","source#Source":"packages/nestjs-auth-local/src/dto/auth-local-login.dto.ts:22","username#username":"username: string = ''","implementation-of-1#Implementation of":"AuthenticationLoginInterface.username","source-1#Source":"packages/nestjs-auth-local/src/dto/auth-local-login.dto.ts:14"}},"/reference/rockets/nestjs-auth-local/classes/AuthLocalModule":{"title":"Class: AuthLocalModule","data":{"":"@concepta/nestjs-auth-local • DocsPackages Example / @concepta/nestjs-auth-local / AuthLocalModuleAuth local module","extends#Extends":"AuthLocalModuleClass","constructors#Constructors":"","new-authlocalmodule#new AuthLocalModule()":"new AuthLocalModule(): AuthLocalModule","returns#Returns":"AuthLocalModule","inherited-from#Inherited from":"AuthLocalModuleClass.constructor","source#Source":"node_modules/@nestjs/common/module-utils/interfaces/configurable-module-cls.interface.d.ts:12","methods#Methods":"","forfeature#forFeature()":"static forFeature(options): DynamicModule","parameters#Parameters":"• options: AuthLocalOptions","returns-1#Returns":"DynamicModule","source-1#Source":"packages/nestjs-auth-local/src/auth-local.module.ts:33","forroot#forRoot()":"static forRoot(options): DynamicModule","parameters-1#Parameters":"• options: AuthLocalOptions","returns-2#Returns":"DynamicModule","source-2#Source":"packages/nestjs-auth-local/src/auth-local.module.ts:25","forrootasync#forRootAsync()":"static forRootAsync(options): DynamicModule","parameters-2#Parameters":"• options: AuthLocalAsyncOptions","returns-3#Returns":"DynamicModule","source-3#Source":"packages/nestjs-auth-local/src/auth-local.module.ts:29","register#register()":"static register(options): DynamicModule","parameters-3#Parameters":"• options: AuthLocalOptions","returns-4#Returns":"DynamicModule","overrides#Overrides":"AuthLocalModuleClass.register","source-4#Source":"packages/nestjs-auth-local/src/auth-local.module.ts:17","registerasync#registerAsync()":"static registerAsync(options): DynamicModule","parameters-4#Parameters":"• options: AuthLocalAsyncOptions","returns-5#Returns":"DynamicModule","overrides-1#Overrides":"AuthLocalModuleClass.registerAsync","source-5#Source":"packages/nestjs-auth-local/src/auth-local.module.ts:21"}},"/reference/rockets/nestjs-auth-local/classes/AuthLocalValidateUserService":{"title":"Class: AuthLocalValidateUserService","data":{"":"@concepta/nestjs-auth-local • DocsPackages Example / @concepta/nestjs-auth-local / AuthLocalValidateUserService","extends#Extends":"ValidateUserService<[AuthLocalValidateUserInterface]>","implements#Implements":"AuthLocalValidateUserServiceInterface","constructors#Constructors":"","new-authlocalvalidateuserservice#new AuthLocalValidateUserService()":"new AuthLocalValidateUserService(userLookupService, passwordValidationService): AuthLocalValidateUserService","parameters#Parameters":"• userLookupService: AuthLocalUserLookupServiceInterface• passwordValidationService: PasswordValidationServiceInterface","returns#Returns":"AuthLocalValidateUserService","overrides#Overrides":"ValidateUserService.constructor","source#Source":"packages/nestjs-auth-local/src/services/auth-local-validate-user.service.ts:18","properties#Properties":"","passwordvalidationservice#passwordValidationService":"protected readonly passwordValidationService: PasswordValidationServiceInterface","source-1#Source":"packages/nestjs-auth-local/src/services/auth-local-validate-user.service.ts:22","userlookupservice#userLookupService":"protected readonly userLookupService: AuthLocalUserLookupServiceInterface","source-2#Source":"packages/nestjs-auth-local/src/services/auth-local-validate-user.service.ts:20","methods#Methods":"","isactive#isActive()":"isActive(user): Promise<boolean>\nReturns true if user is considered valid for authentication purposes.","parameters-1#Parameters":"• user: ReferenceIdInterface<string> & ReferenceActiveInterface<boolean>","returns-1#Returns":"Promise<boolean>","implementation-of#Implementation of":"AuthLocalValidateUserServiceInterface.isActive","inherited-from#Inherited from":"ValidateUserService.isActive","source-3#Source":"packages/nestjs-authentication/dist/services/validate-user.service.d.ts:5","validateuser#validateUser()":"validateUser(dto): Promise<ReferenceIdInterface<string>>\nReturns true if user is considered valid for authentication purposes.","parameters-2#Parameters":"• dto: AuthLocalValidateUserInterface","returns-2#Returns":"Promise<ReferenceIdInterface<string>>","implementation-of-1#Implementation of":"AuthLocalValidateUserServiceInterface.validateUser","overrides-1#Overrides":"ValidateUserService.validateUser","source-4#Source":"packages/nestjs-auth-local/src/services/auth-local-validate-user.service.ts:30"}},"/reference/rockets/nestjs-auth-local/globals":{"title":"@concepta/nestjs-auth-local","data":{"":"@concepta/nestjs-auth-local • DocsPackages Example / @concepta/nestjs-auth-local","classes#Classes":"AuthLocalController\nAuthLocalGuard\nAuthLocalLoginDto\nAuthLocalModule\nAuthLocalValidateUserService","interfaces#Interfaces":"AuthLocalCredentialsInterface\nAuthLocalUserLookupServiceInterface\nAuthLocalValidateUserInterface\nAuthLocalValidateUserServiceInterface","references#References":"","localauthguard#LocalAuthGuard":"Renames and re-exports AuthLocalGuard"}},"/reference/rockets/nestjs-auth-local/interfaces/AuthLocalCredentialsInterface":{"title":"Interface: AuthLocalCredentialsInterface","data":{"":"@concepta/nestjs-auth-local • DocsPackages Example / @concepta/nestjs-auth-local / AuthLocalCredentialsInterfaceCredentials Interface","extends#Extends":"ReferenceIdInterface.ReferenceUsernameInterface.ReferenceActiveInterface.PasswordStorageInterface","properties#Properties":"","active#active":"active: boolean","inherited-from#Inherited from":"ReferenceActiveInterface.active","source#Source":"packages/ts-core/dist/references/interfaces/reference-active.interface.d.ts:3","id#id":"id: string","inherited-from-1#Inherited from":"ReferenceIdInterface.id","source-1#Source":"packages/ts-core/dist/references/interfaces/reference-id.interface.d.ts:3","passwordhash#passwordHash":"passwordHash: null | string\nHashed password","inherited-from-2#Inherited from":"PasswordStorageInterface.passwordHash","source-2#Source":"packages/nestjs-password/dist/interfaces/password-storage.interface.d.ts:2","passwordsalt#passwordSalt":"passwordSalt: null | string\nSalt used to hash password","inherited-from-3#Inherited from":"PasswordStorageInterface.passwordSalt","source-3#Source":"packages/nestjs-password/dist/interfaces/password-storage.interface.d.ts:3","username#username":"username: string","inherited-from-4#Inherited from":"ReferenceUsernameInterface.username","source-4#Source":"packages/ts-core/dist/references/interfaces/reference-username.interface.d.ts:3"}},"/reference/rockets/nestjs-auth-local/interfaces/AuthLocalUserLookupServiceInterface":{"title":"Interface: AuthLocalUserLookupServiceInterface","data":{"":"@concepta/nestjs-auth-local • DocsPackages Example / @concepta/nestjs-auth-local / AuthLocalUserLookupServiceInterface","extends#Extends":"LookupUsernameInterface<ReferenceUsername, AuthLocalCredentialsInterface, QueryOptionsInterface>","properties#Properties":"","byusername#byUsername()":"byUsername: (username, options?) => Promise<null | AuthLocalCredentialsInterface>","parameters#Parameters":"• username: string• options?: QueryOptionsInterface","returns#Returns":"Promise<null | AuthLocalCredentialsInterface>","inherited-from#Inherited from":"LookupUsernameInterface.byUsername","source#Source":"packages/ts-core/dist/references/interfaces/lookup/lookup-username.interface.d.ts:5"}},"/reference/rockets/nestjs-auth-local/interfaces/AuthLocalValidateUserInterface":{"title":"Interface: AuthLocalValidateUserInterface","data":{"":"@concepta/nestjs-auth-local • DocsPackages Example / @concepta/nestjs-auth-local / AuthLocalValidateUserInterface","properties#Properties":"","password#password":"password: string","source#Source":"packages/nestjs-auth-local/src/interfaces/auth-local-validate-user.interface.ts:3","username#username":"username: string","source-1#Source":"packages/nestjs-auth-local/src/interfaces/auth-local-validate-user.interface.ts:2"}},"/reference/rockets/nestjs-auth-local/interfaces/AuthLocalValidateUserServiceInterface":{"title":"Interface: AuthLocalValidateUserServiceInterface","data":{"":"@concepta/nestjs-auth-local • DocsPackages Example / @concepta/nestjs-auth-local / AuthLocalValidateUserServiceInterface","extends#Extends":"ValidateUserServiceInterface<[AuthLocalValidateUserInterface]>","properties#Properties":"","isactive#isActive()":"isActive: (user) => Promise<boolean>","parameters#Parameters":"• user: ReferenceIdInterface<string> & ReferenceActiveInterface<boolean>","returns#Returns":"Promise<boolean>","inherited-from#Inherited from":"ValidateUserServiceInterface.isActive","source#Source":"packages/nestjs-authentication/dist/interfaces/validate-user-service.interface.d.ts:4","validateuser#validateUser()":"validateUser: (dto) => Promise<ReferenceIdInterface<string>>","parameters-1#Parameters":"• dto: AuthLocalValidateUserInterface","returns-1#Returns":"Promise<ReferenceIdInterface<string>>","overrides#Overrides":"ValidateUserServiceInterface.validateUser","source-1#Source":"packages/nestjs-auth-local/src/interfaces/auth-local-validate-user-service.interface.ts:7"}},"/reference/rockets/nestjs-auth-recovery/README":{"title":"Rockets NestJS Auth recovery Authentication","data":{"":"@concepta/nestjs-auth-recovery • DocsPackages Example / @concepta/nestjs-auth-recoveryRecover user password using email","project#Project":"","installation#Installation":"yarn add @concepta/nestjs-auth-recovery"}},"/reference/rockets/nestjs-auth-recovery/classes/AuthRecoveryController":{"title":"Class: AuthRecoveryController","data":{"":"@concepta/nestjs-auth-recovery • DocsPackages Example / @concepta/nestjs-auth-recovery / AuthRecoveryController","constructors#Constructors":"","new-authrecoverycontroller#new AuthRecoveryController()":"new AuthRecoveryController(authRecoveryService): AuthRecoveryController","parameters#Parameters":"• authRecoveryService: AuthRecoveryService","returns#Returns":"AuthRecoveryController","source#Source":"packages/nestjs-auth-recovery/src/auth-recovery.controller.ts:29","properties#Properties":"","authrecoveryservice#authRecoveryService":"private readonly authRecoveryService: AuthRecoveryService","source-1#Source":"packages/nestjs-auth-recovery/src/auth-recovery.controller.ts:29","methods#Methods":"","recoverlogin#recoverLogin()":"recoverLogin(recoverLoginDto): Promise<void>","parameters-1#Parameters":"• recoverLoginDto: AuthRecoveryRecoverLoginDto","returns-1#Returns":"Promise<void>","source-2#Source":"packages/nestjs-auth-recovery/src/auth-recovery.controller.ts:41","recoverpassword#recoverPassword()":"recoverPassword(recoverPasswordDto): Promise<void>","parameters-2#Parameters":"• recoverPasswordDto: AuthRecoveryRecoverPasswordDto","returns-2#Returns":"Promise<void>","source-3#Source":"packages/nestjs-auth-recovery/src/auth-recovery.controller.ts:57","updatepassword#updatePassword()":"updatePassword(updatePasswordDto): Promise<void>","parameters-3#Parameters":"• updatePasswordDto: AuthRecoveryUpdatePasswordDto","returns-3#Returns":"Promise<void>","source-4#Source":"packages/nestjs-auth-recovery/src/auth-recovery.controller.ts:87","validatepasscode#validatePasscode()":"validatePasscode(passcode): Promise<void>","parameters-4#Parameters":"• passcode: string","returns-4#Returns":"Promise<void>","source-5#Source":"packages/nestjs-auth-recovery/src/auth-recovery.controller.ts:69"}},"/reference/rockets/nestjs-auth-recovery/classes/AuthRecoveryModule":{"title":"Class: AuthRecoveryModule","data":{"":"@concepta/nestjs-auth-recovery • DocsPackages Example / @concepta/nestjs-auth-recovery / AuthRecoveryModule","extends#Extends":"AuthRecoveryModuleClass","constructors#Constructors":"","new-authrecoverymodule#new AuthRecoveryModule()":"new AuthRecoveryModule(): AuthRecoveryModule","returns#Returns":"AuthRecoveryModule","inherited-from#Inherited from":"AuthRecoveryModuleClass.constructor","source#Source":"node_modules/@nestjs/common/module-utils/interfaces/configurable-module-cls.interface.d.ts:12","methods#Methods":"","forfeature#forFeature()":"static forFeature(options): DynamicModule","parameters#Parameters":"• options: AuthRecoveryOptions","returns-1#Returns":"DynamicModule","source-1#Source":"packages/nestjs-auth-recovery/src/auth-recovery.module.ts:31","forroot#forRoot()":"static forRoot(options): DynamicModule","parameters-1#Parameters":"• options: AuthRecoveryOptions","returns-2#Returns":"DynamicModule","source-2#Source":"packages/nestjs-auth-recovery/src/auth-recovery.module.ts:23","forrootasync#forRootAsync()":"static forRootAsync(options): DynamicModule","parameters-2#Parameters":"• options: AuthRecoveryAsyncOptions","returns-3#Returns":"DynamicModule","source-3#Source":"packages/nestjs-auth-recovery/src/auth-recovery.module.ts:27","register#register()":"static register(options): DynamicModule","parameters-3#Parameters":"• options: AuthRecoveryOptions","returns-4#Returns":"DynamicModule","overrides#Overrides":"AuthRecoveryModuleClass.register","source-4#Source":"packages/nestjs-auth-recovery/src/auth-recovery.module.ts:15","registerasync#registerAsync()":"static registerAsync(options): DynamicModule","parameters-4#Parameters":"• options: AuthRecoveryAsyncOptions","returns-5#Returns":"DynamicModule","overrides-1#Overrides":"AuthRecoveryModuleClass.registerAsync","source-5#Source":"packages/nestjs-auth-recovery/src/auth-recovery.module.ts:19"}},"/reference/rockets/nestjs-auth-recovery/classes/AuthRecoveryNotificationService":{"title":"Class: AuthRecoveryNotificationService","data":{"":"@concepta/nestjs-auth-recovery • DocsPackages Example / @concepta/nestjs-auth-recovery / AuthRecoveryNotificationService","implements#Implements":"AuthRecoveryNotificationServiceInterface","constructors#Constructors":"","new-authrecoverynotificationservice#new AuthRecoveryNotificationService()":"new AuthRecoveryNotificationService(settings, emailService): AuthRecoveryNotificationService","parameters#Parameters":"• settings: AuthRecoverySettingsInterface• emailService: AuthRecoveryEmailServiceInterface","returns#Returns":"AuthRecoveryNotificationService","source#Source":"packages/nestjs-auth-recovery/src/services/auth-recovery-notification.service.ts:16","properties#Properties":"","emailservice#emailService":"private readonly emailService: AuthRecoveryEmailServiceInterface","source-1#Source":"packages/nestjs-auth-recovery/src/services/auth-recovery-notification.service.ts:20","settings#settings":"private readonly settings: AuthRecoverySettingsInterface","source-2#Source":"packages/nestjs-auth-recovery/src/services/auth-recovery-notification.service.ts:18","methods#Methods":"","sendemail#sendEmail()":"sendEmail(sendMailOptions): Promise<void>","parameters-1#Parameters":"• sendMailOptions: EmailSendOptionsInterface","returns-1#Returns":"Promise<void>","implementation-of#Implementation of":"AuthRecoveryNotificationServiceInterface.sendEmail","source-3#Source":"packages/nestjs-auth-recovery/src/services/auth-recovery-notification.service.ts:23","sendpasswordupdatedsuccefullyemail#sendPasswordUpdatedSuccefullyEmail()":"sendPasswordUpdatedSuccefullyEmail(email): Promise<void>","parameters-2#Parameters":"• email: string","returns-2#Returns":"Promise<void>","implementation-of-1#Implementation of":"AuthRecoveryNotificationServiceInterface.sendPasswordUpdatedSuccefullyEmail","source-4#Source":"packages/nestjs-auth-recovery/src/services/auth-recovery-notification.service.ts:50","sendrecoverloginemail#sendRecoverLoginEmail()":"sendRecoverLoginEmail(email, username): Promise<void>","parameters-3#Parameters":"• email: string• username: string","returns-3#Returns":"Promise<void>","implementation-of-2#Implementation of":"AuthRecoveryNotificationServiceInterface.sendRecoverLoginEmail","source-5#Source":"packages/nestjs-auth-recovery/src/services/auth-recovery-notification.service.ts:61","sendrecoverpasswordemail#sendRecoverPasswordEmail()":"sendRecoverPasswordEmail(email, passcode, resetTokenExp): Promise<void>","parameters-4#Parameters":"• email: string• passcode: string• resetTokenExp: Date","returns-4#Returns":"Promise<void>","implementation-of-3#Implementation of":"AuthRecoveryNotificationServiceInterface.sendRecoverPasswordEmail","source-6#Source":"packages/nestjs-auth-recovery/src/services/auth-recovery-notification.service.ts:27"}},"/reference/rockets/nestjs-auth-recovery/classes/AuthRecoveryRecoverLoginDto":{"title":"Class: AuthRecoveryRecoverLoginDto","data":{"":"@concepta/nestjs-auth-recovery • DocsPackages Example / @concepta/nestjs-auth-recovery / AuthRecoveryRecoverLoginDto","constructors#Constructors":"","new-authrecoveryrecoverlogindto#new AuthRecoveryRecoverLoginDto()":"new AuthRecoveryRecoverLoginDto(): AuthRecoveryRecoverLoginDto","returns#Returns":"AuthRecoveryRecoverLoginDto","properties#Properties":"","email#email":"email: string = ''","source#Source":"packages/nestjs-auth-recovery/src/dto/auth-recovery-recover-login.dto.ts:12"}},"/reference/rockets/nestjs-auth-recovery/classes/AuthRecoveryRecoverPasswordDto":{"title":"Class: AuthRecoveryRecoverPasswordDto","data":{"":"@concepta/nestjs-auth-recovery • DocsPackages Example / @concepta/nestjs-auth-recovery / AuthRecoveryRecoverPasswordDto","constructors#Constructors":"","new-authrecoveryrecoverpassworddto#new AuthRecoveryRecoverPasswordDto()":"new AuthRecoveryRecoverPasswordDto(): AuthRecoveryRecoverPasswordDto","returns#Returns":"AuthRecoveryRecoverPasswordDto","properties#Properties":"","email#email":"email: string = ''","source#Source":"packages/nestjs-auth-recovery/src/dto/auth-recovery-recover-password.dto.ts:12"}},"/reference/rockets/nestjs-auth-recovery/classes/AuthRecoveryService":{"title":"Class: AuthRecoveryService","data":{"":"@concepta/nestjs-auth-recovery • DocsPackages Example / @concepta/nestjs-auth-recovery / AuthRecoveryService","implements#Implements":"AuthRecoveryServiceInterface","constructors#Constructors":"","new-authrecoveryservice#new AuthRecoveryService()":"new AuthRecoveryService(config, otpService, userLookupService, userMutateService, notificationService, entityManagerProxy): AuthRecoveryService","parameters#Parameters":"• config: AuthRecoverySettingsInterface• otpService: AuthRecoveryOtpServiceInterface• userLookupService: AuthRecoveryUserLookupServiceInterface• userMutateService: AuthRecoveryUserMutateServiceInterface• notificationService: AuthRecoveryNotificationService• entityManagerProxy: EntityManagerProxy","returns#Returns":"AuthRecoveryService","source#Source":"packages/nestjs-auth-recovery/src/services/auth-recovery.service.ts:27","properties#Properties":"","config#config":"private readonly config: AuthRecoverySettingsInterface","source-1#Source":"packages/nestjs-auth-recovery/src/services/auth-recovery.service.ts:29","entitymanagerproxy#entityManagerProxy":"private readonly entityManagerProxy: EntityManagerProxy","source-2#Source":"packages/nestjs-auth-recovery/src/services/auth-recovery.service.ts:38","notificationservice#notificationService":"private readonly notificationService: AuthRecoveryNotificationService","source-3#Source":"packages/nestjs-auth-recovery/src/services/auth-recovery.service.ts:36","otpservice#otpService":"private readonly otpService: AuthRecoveryOtpServiceInterface","source-4#Source":"packages/nestjs-auth-recovery/src/services/auth-recovery.service.ts:31","userlookupservice#userLookupService":"private readonly userLookupService: AuthRecoveryUserLookupServiceInterface","source-5#Source":"packages/nestjs-auth-recovery/src/services/auth-recovery.service.ts:33","usermutateservice#userMutateService":"private readonly userMutateService: AuthRecoveryUserMutateServiceInterface","source-6#Source":"packages/nestjs-auth-recovery/src/services/auth-recovery.service.ts:35","methods#Methods":"","recoverlogin#recoverLogin()":"recoverLogin(email, queryOptions?): Promise<void>\nRecover lost username providing an email and send the username by email.","parameters-1#Parameters":"• email: stringuser email• queryOptions?: QueryOptionsInterface","returns-1#Returns":"Promise<void>","implementation-of#Implementation of":"AuthRecoveryServiceInterface.recoverLogin","source-7#Source":"packages/nestjs-auth-recovery/src/services/auth-recovery.service.ts:46","recoverpassword#recoverPassword()":"recoverPassword(email, queryOptions?): Promise<void>\nRecover lost password providing an email and send the passcode token by email.","parameters-2#Parameters":"• email: stringuser email• queryOptions?: QueryOptionsInterface","returns-2#Returns":"Promise<void>","implementation-of-1#Implementation of":"AuthRecoveryServiceInterface.recoverPassword","source-8#Source":"packages/nestjs-auth-recovery/src/services/auth-recovery.service.ts:71","revokealluserpasswordrecoveries#revokeAllUserPasswordRecoveries()":"revokeAllUserPasswordRecoveries(email, queryOptions?): Promise<void>\nRecover lost password providing an email and send the passcode token by email.","parameters-3#Parameters":"• email: stringuser email• queryOptions?: QueryOptionsInterface","returns-3#Returns":"Promise<void>","implementation-of-2#Implementation of":"AuthRecoveryServiceInterface.revokeAllUserPasswordRecoveries","source-9#Source":"packages/nestjs-auth-recovery/src/services/auth-recovery.service.ts:190","updatepassword#updatePassword()":"updatePassword(passcode, newPassword, queryOptions?): Promise<null | ReferenceIdInterface<string>>\nChange user's password by providing it's OTP passcode and the new password.","parameters-4#Parameters":"• passcode: stringOTP user's passcode• newPassword: stringnew user password• queryOptions?: QueryOptionsInterface","returns-4#Returns":"Promise<null | ReferenceIdInterface<string>>","implementation-of-3#Implementation of":"AuthRecoveryServiceInterface.updatePassword","source-10#Source":"packages/nestjs-auth-recovery/src/services/auth-recovery.service.ts:137","validatepasscode#validatePasscode()":"validatePasscode(passcode, deleteIfValid, queryOptions?): Promise<null | ReferenceAssigneeInterface<ReferenceIdInterface<string>>>\nValidate passcode and return it's user.","parameters-5#Parameters":"• passcode: stringuser's passcode• deleteIfValid: boolean= falseflag to delete if valid or not• queryOptions?: QueryOptionsInterface","returns-5#Returns":"Promise<null | ReferenceAssigneeInterface<ReferenceIdInterface<string>>>","implementation-of-4#Implementation of":"AuthRecoveryServiceInterface.validatePasscode","source-11#Source":"packages/nestjs-auth-recovery/src/services/auth-recovery.service.ts:114"}},"/reference/rockets/nestjs-auth-recovery/classes/AuthRecoveryUpdatePasswordDto":{"title":"Class: AuthRecoveryUpdatePasswordDto","data":{"":"@concepta/nestjs-auth-recovery • DocsPackages Example / @concepta/nestjs-auth-recovery / AuthRecoveryUpdatePasswordDto","constructors#Constructors":"","new-authrecoveryupdatepassworddto#new AuthRecoveryUpdatePasswordDto()":"new AuthRecoveryUpdatePasswordDto(): AuthRecoveryUpdatePasswordDto","returns#Returns":"AuthRecoveryUpdatePasswordDto","properties#Properties":"","newpassword#newPassword":"newPassword: string = ''","source#Source":"packages/nestjs-auth-recovery/src/dto/auth-recovery-update-password.dto.ts:19","passcode#passcode":"passcode: string = ''","source-1#Source":"packages/nestjs-auth-recovery/src/dto/auth-recovery-update-password.dto.ts:11"}},"/reference/rockets/nestjs-auth-recovery/classes/AuthRecoveryValidatePasscodeDto":{"title":"Class: AuthRecoveryValidatePasscodeDto","data":{"":"@concepta/nestjs-auth-recovery • DocsPackages Example / @concepta/nestjs-auth-recovery / AuthRecoveryValidatePasscodeDto","constructors#Constructors":"","new-authrecoveryvalidatepasscodedto#new AuthRecoveryValidatePasscodeDto()":"new AuthRecoveryValidatePasscodeDto(): AuthRecoveryValidatePasscodeDto","returns#Returns":"AuthRecoveryValidatePasscodeDto","properties#Properties":"","passcode#passcode":"passcode: string = ''","source#Source":"packages/nestjs-auth-recovery/src/dto/auth-recovery-validate-passcode.dto.ts:11"}},"/reference/rockets/nestjs-auth-recovery/globals":{"title":"@concepta/nestjs-auth-recovery","data":{"":"@concepta/nestjs-auth-recovery • DocsPackages Example / @concepta/nestjs-auth-recovery","classes#Classes":"AuthRecoveryController\nAuthRecoveryModule\nAuthRecoveryNotificationService\nAuthRecoveryRecoverLoginDto\nAuthRecoveryRecoverPasswordDto\nAuthRecoveryService\nAuthRecoveryUpdatePasswordDto\nAuthRecoveryValidatePasscodeDto"}},"/reference/rockets/nestjs-auth-refresh/README":{"title":"Rockets NestJS Refresh Authentication","data":{"":"@concepta/nestjs-auth-refresh • DocsPackages Example / @concepta/nestjs-auth-refreshAuthenticate requests using JWT refresh tokens passed via the request (headers, cookies, body, query, etc).","project#Project":"","installation#Installation":"yarn add @concepta/nestjs-auth-refresh"}},"/reference/rockets/nestjs-auth-refresh/classes/AuthRefreshDto":{"title":"Class: AuthRefreshDto","data":{"":"@concepta/nestjs-auth-refresh • DocsPackages Example / @concepta/nestjs-auth-refresh / AuthRefreshDto","implements#Implements":"AuthenticationRefreshInterface","constructors#Constructors":"","new-authrefreshdto#new AuthRefreshDto()":"new AuthRefreshDto(): AuthRefreshDto","returns#Returns":"AuthRefreshDto","properties#Properties":"","refreshtoken#refreshToken":"refreshToken: string = ''","implementation-of#Implementation of":"AuthenticationRefreshInterface.refreshToken","source#Source":"packages/nestjs-auth-refresh/src/dto/auth-refresh.dto.ts:14"}},"/reference/rockets/nestjs-auth-refresh/classes/AuthRefreshGuard":{"title":"Class: AuthRefreshGuard","data":{"":"@concepta/nestjs-auth-refresh • DocsPackages Example / @concepta/nestjs-auth-refresh / AuthRefreshGuard","extends#Extends":"object","constructors#Constructors":"","new-authrefreshguard#new AuthRefreshGuard()":"new AuthRefreshGuard(authenticationSettings, reflector): AuthRefreshGuard","parameters#Parameters":"• authenticationSettings: AuthenticationSettingsInterface• reflector: Reflector","returns#Returns":"AuthRefreshGuard","inherited-from#Inherited from":"AuthGuard( AUTH_REFRESH_MODULE_STRATEGY_NAME, { canDisable: false, }, ).constructor","source#Source":"packages/nestjs-authentication/dist/guards/auth.guard.d.ts:6","properties#Properties":"","authenticationsettings#authenticationSettings":"readonly authenticationSettings: AuthenticationSettingsInterface","inherited-from-1#Inherited from":"AuthGuard( AUTH_REFRESH_MODULE_STRATEGY_NAME, { canDisable: false, }, ).authenticationSettings","source-1#Source":"packages/nestjs-authentication/dist/guards/auth.guard.d.ts:8","options#options":"readonly options: AuthGuardOptions","inherited-from-2#Inherited from":"AuthGuard( AUTH_REFRESH_MODULE_STRATEGY_NAME, { canDisable: false, }, ).options","source-2#Source":"packages/nestjs-authentication/dist/guards/auth.guard.d.ts:7","reflector#reflector":"readonly reflector: Reflector","inherited-from-3#Inherited from":"AuthGuard( AUTH_REFRESH_MODULE_STRATEGY_NAME, { canDisable: false, }, ).reflector","source-3#Source":"packages/nestjs-authentication/dist/guards/auth.guard.d.ts:9","methods#Methods":"","canactivate#canActivate()":"canActivate(context): boolean | Promise<boolean> | Observable<boolean>","parameters-1#Parameters":"• context: ExecutionContext","returns-1#Returns":"boolean | Promise<boolean> | Observable<boolean>","inherited-from-4#Inherited from":"AuthGuard( AUTH_REFRESH_MODULE_STRATEGY_NAME, { canDisable: false, }, ).canActivate","source-4#Source":"packages/nestjs-authentication/dist/guards/auth.guard.d.ts:10"}},"/reference/rockets/nestjs-auth-refresh/classes/AuthRefreshModule":{"title":"Class: AuthRefreshModule","data":{"":"@concepta/nestjs-auth-refresh • DocsPackages Example / @concepta/nestjs-auth-refresh / AuthRefreshModuleAuth Refresh module","extends#Extends":"AuthRefreshModuleClass","constructors#Constructors":"","new-authrefreshmodule#new AuthRefreshModule()":"new AuthRefreshModule(): AuthRefreshModule","returns#Returns":"AuthRefreshModule","inherited-from#Inherited from":"AuthRefreshModuleClass.constructor","source#Source":"node_modules/@nestjs/common/module-utils/interfaces/configurable-module-cls.interface.d.ts:12","methods#Methods":"","forfeature#forFeature()":"static forFeature(options): DynamicModule","parameters#Parameters":"• options: AuthRefreshOptions","returns-1#Returns":"DynamicModule","source-1#Source":"packages/nestjs-auth-refresh/src/auth-refresh.module.ts:34","forroot#forRoot()":"static forRoot(options): DynamicModule","parameters-1#Parameters":"• options: AuthRefreshOptions","returns-2#Returns":"DynamicModule","source-2#Source":"packages/nestjs-auth-refresh/src/auth-refresh.module.ts:26","forrootasync#forRootAsync()":"static forRootAsync(options): DynamicModule","parameters-2#Parameters":"• options: AuthRefreshAsyncOptions","returns-3#Returns":"DynamicModule","source-3#Source":"packages/nestjs-auth-refresh/src/auth-refresh.module.ts:30","register#register()":"static register(options): DynamicModule","parameters-3#Parameters":"• options: AuthRefreshOptions","returns-4#Returns":"DynamicModule","overrides#Overrides":"AuthRefreshModuleClass.register","source-4#Source":"packages/nestjs-auth-refresh/src/auth-refresh.module.ts:18","registerasync#registerAsync()":"static registerAsync(options): DynamicModule","parameters-4#Parameters":"• options: AuthRefreshAsyncOptions","returns-5#Returns":"DynamicModule","overrides-1#Overrides":"AuthRefreshModuleClass.registerAsync","source-5#Source":"packages/nestjs-auth-refresh/src/auth-refresh.module.ts:22"}},"/reference/rockets/nestjs-auth-refresh/globals":{"title":"@concepta/nestjs-auth-refresh","data":{"":"@concepta/nestjs-auth-refresh • DocsPackages Example / @concepta/nestjs-auth-refresh","classes#Classes":"AuthRefreshDto\nAuthRefreshGuard\nAuthRefreshModule","references#References":"","refreshauthguard#RefreshAuthGuard":"Renames and re-exports AuthRefreshGuard"}},"/reference/rockets/nestjs-authentication/README":{"title":"Rockets NestJS Authentication","data":{"":"@concepta/nestjs-authentication • DocsPackages Example / @concepta/nestjs-authenticationAuthenticate requests using one or more strategies (local, jwt, etc).All of the strategies require that this module be registered by the app, as it provides a set of shared services\nthey use to validate users as well as issue and verify tokens.","project#Project":"","installation#Installation":"yarn add @concepta/nestjs-authentication"}},"/reference/rockets/nestjs-authentication/classes/AuthenticationJwtResponseDto":{"title":"Class: AuthenticationJwtResponseDto","data":{"":"@concepta/nestjs-authentication • DocsPackages Example / @concepta/nestjs-authentication / AuthenticationJwtResponseDtoAuthentication response interface","implements#Implements":"AuthenticationResponseInterface","constructors#Constructors":"","new-authenticationjwtresponsedto#new AuthenticationJwtResponseDto()":"new AuthenticationJwtResponseDto(): AuthenticationJwtResponseDto","returns#Returns":"AuthenticationJwtResponseDto","properties#Properties":"","accesstoken#accessToken":"accessToken: string = ''\nThe access token.","implementation-of#Implementation of":"AuthenticationResponseInterface.accessToken","source#Source":"packages/nestjs-authentication/src/dto/authentication-jwt-response.dto.ts:14","refreshtoken#refreshToken":"refreshToken: string = ''","implementation-of-1#Implementation of":"AuthenticationResponseInterface.refreshToken","source-1#Source":"packages/nestjs-authentication/src/dto/authentication-jwt-response.dto.ts:21"}},"/reference/rockets/nestjs-authentication/classes/AuthenticationModule":{"title":"Class: AuthenticationModule","data":{"":"@concepta/nestjs-authentication • DocsPackages Example / @concepta/nestjs-authentication / AuthenticationModuleAuthentication module","extends#Extends":"AuthenticationModuleClass","constructors#Constructors":"","new-authenticationmodule#new AuthenticationModule()":"new AuthenticationModule(): AuthenticationModule","returns#Returns":"AuthenticationModule","inherited-from#Inherited from":"AuthenticationModuleClass.constructor","source#Source":"node_modules/@nestjs/common/module-utils/interfaces/configurable-module-cls.interface.d.ts:12","methods#Methods":"","forfeature#forFeature()":"static forFeature(options): DynamicModule","parameters#Parameters":"• options: AuthenticationOptions","returns-1#Returns":"DynamicModule","source-1#Source":"packages/nestjs-authentication/src/authentication.module.ts:33","forroot#forRoot()":"static forRoot(options): DynamicModule","parameters-1#Parameters":"• options: AuthenticationOptions","returns-2#Returns":"DynamicModule","source-2#Source":"packages/nestjs-authentication/src/authentication.module.ts:25","forrootasync#forRootAsync()":"static forRootAsync(options): DynamicModule","parameters-2#Parameters":"• options: AuthenticationAsyncOptions","returns-3#Returns":"DynamicModule","source-3#Source":"packages/nestjs-authentication/src/authentication.module.ts:29","register#register()":"static register(options): DynamicModule","parameters-3#Parameters":"• options: AuthenticationOptions","returns-4#Returns":"DynamicModule","overrides#Overrides":"AuthenticationModuleClass.register","source-4#Source":"packages/nestjs-authentication/src/authentication.module.ts:17","registerasync#registerAsync()":"static registerAsync(options): DynamicModule","parameters-4#Parameters":"• options: AuthenticationAsyncOptions","returns-5#Returns":"DynamicModule","overrides-1#Overrides":"AuthenticationModuleClass.registerAsync","source-5#Source":"packages/nestjs-authentication/src/authentication.module.ts:21"}},"/reference/rockets/nestjs-authentication/classes/IssueTokenService":{"title":"Class: IssueTokenService","data":{"":"@concepta/nestjs-authentication • DocsPackages Example / @concepta/nestjs-authentication / IssueTokenService","implements#Implements":"IssueTokenServiceInterface","constructors#Constructors":"","new-issuetokenservice#new IssueTokenService()":"new IssueTokenService(jwtIssueService): IssueTokenService","parameters#Parameters":"• jwtIssueService: JwtIssueService","returns#Returns":"IssueTokenService","source#Source":"packages/nestjs-authentication/src/services/issue-token.service.ts:10","properties#Properties":"","jwtissueservice#jwtIssueService":"protected readonly jwtIssueService: JwtIssueService","source-1#Source":"packages/nestjs-authentication/src/services/issue-token.service.ts:10","methods#Methods":"","accesstoken#accessToken()":"accessToken(...args): Promise<string>\nGenerate access token for a payload.","parameters-1#Parameters":"• ...args: [string | object | Buffer, JwtSignOptions]","returns-1#Returns":"Promise<string>","implementation-of#Implementation of":"IssueTokenServiceInterface.accessToken","source-2#Source":"packages/nestjs-authentication/src/services/issue-token.service.ts:15","refreshtoken#refreshToken()":"refreshToken(...args): Promise<string>\nGenerate refresh token for a payload.","parameters-2#Parameters":"• ...args: [string | object | Buffer, JwtSignOptions]","returns-2#Returns":"Promise<string>","implementation-of-1#Implementation of":"IssueTokenServiceInterface.refreshToken","source-3#Source":"packages/nestjs-authentication/src/services/issue-token.service.ts:22","responsepayload#responsePayload()":"responsePayload(id): Promise<AuthenticationResponseInterface>\nGenerate the response payload.","parameters-3#Parameters":"• id: string","returns-3#Returns":"Promise<AuthenticationResponseInterface>","implementation-of-2#Implementation of":"IssueTokenServiceInterface.responsePayload","source-4#Source":"packages/nestjs-authentication/src/services/issue-token.service.ts:31"}},"/reference/rockets/nestjs-authentication/classes/ValidateUserService":{"title":"Class: abstract ValidateUserService<T, R>","data":{"":"@concepta/nestjs-authentication • DocsPackages Example / @concepta/nestjs-authentication / ValidateUserService","extended-by#Extended by":"","type-parameters#Type parameters":"• T extends unknown[] = unknown[]• R extends ReferenceIdInterface = ReferenceIdInterface","implements#Implements":"ValidateUserServiceInterface<T, R>","constructors#Constructors":"","new-validateuserservice#new ValidateUserService()":"new ValidateUserService<T, R>(): ValidateUserService<T, R>","returns#Returns":"ValidateUserService<T, R>","methods#Methods":"","isactive#isActive()":"isActive(user): Promise<boolean>\nReturns true if user is considered valid for authentication purposes.","parameters#Parameters":"• user: ReferenceIdInterface<string> & ReferenceActiveInterface<boolean>","returns-1#Returns":"Promise<boolean>","implementation-of#Implementation of":"ValidateUserServiceInterface.isActive","source#Source":"packages/nestjs-authentication/src/services/validate-user.service.ts:22","validateuser#validateUser()":"abstract validateUser(...rest): Promise<R>\nReturns validated user","parameters-1#Parameters":"• ...rest: T","returns-2#Returns":"Promise<R>","implementation-of-1#Implementation of":"ValidateUserServiceInterface.validateUser","source-1#Source":"packages/nestjs-authentication/src/services/validate-user.service.ts:17"}},"/reference/rockets/nestjs-authentication/classes/VerifyTokenService":{"title":"Class: VerifyTokenService","data":{"":"@concepta/nestjs-authentication • DocsPackages Example / @concepta/nestjs-authentication / VerifyTokenService","implements#Implements":"VerifyTokenServiceInterface","constructors#Constructors":"","new-verifytokenservice#new VerifyTokenService()":"new VerifyTokenService(jwtVerifyService, validateTokenService?): VerifyTokenService","parameters#Parameters":"• jwtVerifyService: JwtVerifyService• validateTokenService?: ValidateTokenServiceInterface","returns#Returns":"VerifyTokenService","source#Source":"packages/nestjs-authentication/src/services/verify-token.service.ts:14","properties#Properties":"","jwtverifyservice#jwtVerifyService":"protected readonly jwtVerifyService: JwtVerifyService","source-1#Source":"packages/nestjs-authentication/src/services/verify-token.service.ts:15","validatetokenservice#validateTokenService?":"protected optional readonly validateTokenService: ValidateTokenServiceInterface","source-2#Source":"packages/nestjs-authentication/src/services/verify-token.service.ts:18","methods#Methods":"","accesstoken#accessToken()":"accessToken(...args): Promise<any>\nVerify an access token.","parameters-1#Parameters":"• ...args: [string, JwtVerifyOptions]","returns-1#Returns":"Promise<any>","implementation-of#Implementation of":"VerifyTokenServiceInterface.accessToken","source-3#Source":"packages/nestjs-authentication/src/services/verify-token.service.ts:24","refreshtoken#refreshToken()":"refreshToken(...args): Promise<any>\nVerify a refresh token.","parameters-2#Parameters":"• ...args: [string, JwtVerifyOptions]","returns-2#Returns":"Promise<any>","implementation-of-1#Implementation of":"VerifyTokenServiceInterface.refreshToken","source-4#Source":"packages/nestjs-authentication/src/services/verify-token.service.ts:41","validatetoken#validateToken()":"private validateToken(payload): Promise<boolean>\nFurther validate the authenticity of a token.For example, You may want to check if it's id exists in a database or some other source.","parameters-3#Parameters":"• payload: Record<string, unknown>","returns-3#Returns":"Promise<boolean>","source-5#Source":"packages/nestjs-authentication/src/services/verify-token.service.ts:63"}},"/reference/rockets/nestjs-authentication/functions/AuthGuard":{"title":"Function: AuthGuard()","data":{"":"@concepta/nestjs-authentication • DocsPackages Example / @concepta/nestjs-authentication / AuthGuard\nAuthGuard(strategyName, options): typeof AuthGuard\nA Guard to use passport for express or fastify\n@UseGuards(AuthGuard('local'))\n@Post('login')\nasync authenticateWithGuard(\n  @AuthUser() user: CredentialLookupInterface,\n): Promise<AuthenticationResponseInterface> {\n  const token = this.issueTokenService.issueAccessToken(user.username);\n  return {\n    ...user,\n    ...token,\n  };\n}","parameters#Parameters":"• strategyName: string• options: AuthGuardOptions= undefined","returns#Returns":"typeof AuthGuard","source#Source":"packages/nestjs-authentication/src/guards/auth.guard.ts:36"}},"/reference/rockets/nestjs-authentication/functions/AuthPublic":{"title":"Function: AuthPublic()","data":{"":"@concepta/nestjs-authentication • DocsPackages Example / @concepta/nestjs-authentication / AuthPublic\nAuthPublic(): CustomDecorator<string>\nDisable ONLY AuthGuards that have the canDisable option set to true.","returns#Returns":"CustomDecorator<string>","source#Source":"packages/nestjs-authentication/src/decorators/auth-public.decorator.ts:7"}},"/reference/rockets/nestjs-authentication/functions/AuthUser":{"title":"Function: AuthUser()","data":{"":"@concepta/nestjs-authentication • DocsPackages Example / @concepta/nestjs-authentication / AuthUser\nAuthUser(...dataOrPipes): ParameterDecorator","parameters#Parameters":"• ...dataOrPipes: (string | PipeTransform<any, any> | Type<PipeTransform<any, any>>)[]","returns#Returns":"ParameterDecorator","source#Source":"packages/nestjs-common/dist/decorators/auth-user.decorator.d.ts:1"}},"/reference/rockets/nestjs-authentication/functions/PassportStrategyFactory":{"title":"Function: PassportStrategyFactory()","data":{"":"@concepta/nestjs-authentication • DocsPackages Example / @concepta/nestjs-authentication / PassportStrategyFactory\nPassportStrategyFactory<T>(strategy, strategyName): (...args) => T","type-parameters#Type parameters":"• T extends Strategy<T>","parameters#Parameters":"• strategy: Type<T>• strategyName: string","returns#Returns":"Function","parameters-1#Parameters":"• ...args: any[]","returns-1#Returns":"T","source#Source":"packages/nestjs-authentication/src/factories/passport-strategy.factory.ts:5"}},"/reference/rockets/nestjs-authentication/functions/authenticationDefaultConfig":{"title":"Function: authenticationDefaultConfig()","data":{"":"@concepta/nestjs-authentication • DocsPackages Example / @concepta/nestjs-authentication / authenticationDefaultConfig\nauthenticationDefaultConfig(): AuthenticationSettingsInterface","returns#Returns":"AuthenticationSettingsInterface","source#Source":"packages/nestjs-authentication/src/config/authentication-default.config.ts:7"}},"/reference/rockets/nestjs-authentication/globals":{"title":"@concepta/nestjs-authentication","data":{"":"@concepta/nestjs-authentication • DocsPackages Example / @concepta/nestjs-authentication","classes#Classes":"AuthenticationJwtResponseDto\nAuthenticationModule\nIssueTokenService\nValidateUserService\nVerifyTokenService","interfaces#Interfaces":"AuthGuardOptions\nAuthenticationOptionsInterface\nIssueTokenServiceInterface\nValidateUserServiceInterface\nVerifyTokenServiceInterface","type-aliases#Type Aliases":"AuthGuardCtr","functions#Functions":"AuthGuard\nAuthPublic\nAuthUser\nPassportStrategyFactory\nauthenticationDefaultConfig"}},"/reference/rockets/nestjs-authentication/interfaces/AuthGuardOptions":{"title":"Interface: AuthGuardOptions","data":{"":"@concepta/nestjs-authentication • DocsPackages Example / @concepta/nestjs-authentication / AuthGuardOptions","properties#Properties":"","candisable#canDisable?":"optional canDisable: boolean","source#Source":"packages/nestjs-authentication/src/authentication.types.ts:4"}},"/reference/rockets/nestjs-authentication/interfaces/AuthenticationOptionsInterface":{"title":"Interface: AuthenticationOptionsInterface","data":{"":"@concepta/nestjs-authentication • DocsPackages Example / @concepta/nestjs-authentication / AuthenticationOptionsInterfaceAuthentication module configuration options interface","properties#Properties":"","issuetokenservice#issueTokenService?":"optional issueTokenService: IssueTokenServiceInterface","source#Source":"packages/nestjs-authentication/src/interfaces/authentication-options.interface.ts:11","settings#settings?":"optional settings: AuthenticationSettingsInterface","source-1#Source":"packages/nestjs-authentication/src/interfaces/authentication-options.interface.ts:10","validatetokenservice#validateTokenService?":"optional validateTokenService: ValidateTokenServiceInterface","source-2#Source":"packages/nestjs-authentication/src/interfaces/authentication-options.interface.ts:13","verifytokenservice#verifyTokenService?":"optional verifyTokenService: VerifyTokenServiceInterface","source-3#Source":"packages/nestjs-authentication/src/interfaces/authentication-options.interface.ts:12"}},"/reference/rockets/nestjs-authentication/interfaces/IssueTokenServiceInterface":{"title":"Interface: IssueTokenServiceInterface","data":{"":"@concepta/nestjs-authentication • DocsPackages Example / @concepta/nestjs-authentication / IssueTokenServiceInterface","extends#Extends":"JwtIssueServiceInterface","methods#Methods":"","accesstoken#accessToken()":"accessToken(...args): Promise<string>","parameters#Parameters":"• ...args: [string | object | Buffer, JwtSignOptions]","returns#Returns":"Promise<string>","inherited-from#Inherited from":"JwtIssueServiceInterface.accessToken","source#Source":"packages/nestjs-jwt/dist/interfaces/jwt-issue-service.interface.d.ts:3","refreshtoken#refreshToken()":"refreshToken(...args): Promise<string>","parameters-1#Parameters":"• ...args: [string | object | Buffer, JwtSignOptions]","returns-1#Returns":"Promise<string>","inherited-from-1#Inherited from":"JwtIssueServiceInterface.refreshToken","source-1#Source":"packages/nestjs-jwt/dist/interfaces/jwt-issue-service.interface.d.ts:4","responsepayload#responsePayload()":"responsePayload(id): Promise<AuthenticationResponseInterface>","parameters-2#Parameters":"• id: string","returns-2#Returns":"Promise<AuthenticationResponseInterface>","source-2#Source":"packages/nestjs-authentication/src/interfaces/issue-token-service.interface.ts:6"}},"/reference/rockets/nestjs-authentication/interfaces/ValidateUserServiceInterface":{"title":"Interface: ValidateUserServiceInterface<T, R>","data":{"":"@concepta/nestjs-authentication • DocsPackages Example / @concepta/nestjs-authentication / ValidateUserServiceInterface","extended-by#Extended by":"","type-parameters#Type parameters":"• T extends unknown[] = unknown[]• R extends ReferenceIdInterface = ReferenceIdInterface","properties#Properties":"","isactive#isActive()":"isActive: (user) => Promise<boolean>","parameters#Parameters":"• user: R & ReferenceActiveInterface<boolean>","returns#Returns":"Promise<boolean>","source#Source":"packages/nestjs-authentication/src/interfaces/validate-user-service.interface.ts:11","validateuser#validateUser()":"validateUser: (..._) => Promise<R>","parameters-1#Parameters":"• ..._: T","returns-1#Returns":"Promise<R>","source-1#Source":"packages/nestjs-authentication/src/interfaces/validate-user-service.interface.ts:10"}},"/reference/rockets/nestjs-authentication/interfaces/VerifyTokenServiceInterface":{"title":"Interface: VerifyTokenServiceInterface","data":{"":"@concepta/nestjs-authentication • DocsPackages Example / @concepta/nestjs-authentication / VerifyTokenServiceInterface","extends#Extends":"JwtVerifyServiceInterface","methods#Methods":"","accesstoken#accessToken()":"accessToken(...args): Promise<object>","parameters#Parameters":"• ...args: [string, JwtVerifyOptions]","returns#Returns":"Promise<object>","inherited-from#Inherited from":"JwtVerifyServiceInterface.accessToken","source#Source":"packages/nestjs-jwt/dist/interfaces/jwt-verify-service.interface.d.ts:3","refreshtoken#refreshToken()":"refreshToken(...args): Promise<object>","parameters-1#Parameters":"• ...args: [string, JwtVerifyOptions]","returns-1#Returns":"Promise<object>","inherited-from-1#Inherited from":"JwtVerifyServiceInterface.refreshToken","source-1#Source":"packages/nestjs-jwt/dist/interfaces/jwt-verify-service.interface.d.ts:4"}},"/reference/rockets/nestjs-authentication/type-aliases/AuthGuardCtr":{"title":"Type alias: AuthGuardCtr()","data":{"":"@concepta/nestjs-authentication • DocsPackages Example / @concepta/nestjs-authentication / AuthGuardCtr\nAuthGuardCtr: (strategyName, options) => CanActivate","parameters#Parameters":"• strategyName: string• options: AuthGuardOptions","returns#Returns":"CanActivate","source#Source":"packages/nestjs-authentication/src/authentication.types.ts:7"}},"/reference/rockets/nestjs-cache/classes/CacheCreateDto":{"title":"Class: CacheCreateDto","data":{"":"@concepta/nestjs-cache • DocsPackages Example / @concepta/nestjs-cache / CacheCreateDtoCache Create DTO","extends#Extends":"Pick<CacheDto, \"expiresIn\" | \"key\" | \"data\" | \"type\" | \"assignee\">","implements#Implements":"CacheCreatableInterface","constructors#Constructors":"","new-cachecreatedto#new CacheCreateDto()":"new CacheCreateDto(...args): CacheCreateDto","parameters#Parameters":"• ...args: any[]","returns#Returns":"CacheCreateDto","inherited-from#Inherited from":"PickType(CacheDto, [ 'key', 'data', 'type', 'expiresIn', 'assignee', ] as const).constructor","source#Source":".tmp/repos/rockets/node_modules/@nestjs/common/interfaces/type.interface.d.ts:2","properties#Properties":"","assignee#assignee":"assignee: ReferenceIdInterface<string>\nAssignee","implementation-of#Implementation of":"CacheCreatableInterface.assignee","inherited-from-1#Inherited from":"PickType(CacheDto, [ 'key', 'data', 'type', 'expiresIn', 'assignee', ] as const).assignee","source-1#Source":".tmp/repos/rockets/packages/nestjs-cache/src/dto/cache.dto.ts:50","data#data":"data: null | string\ndata","implementation-of-1#Implementation of":"CacheCreatableInterface.data","inherited-from-2#Inherited from":"PickType(CacheDto, [ 'key', 'data', 'type', 'expiresIn', 'assignee', ] as const).data","source-2#Source":".tmp/repos/rockets/packages/nestjs-cache/src/dto/cache.dto.ts:25","expiresin#expiresIn":"expiresIn: null | string\nExpressed in seconds or a string describing a time span zeit/ms.Eg: 60, \"2 days\", \"10h\", \"7d\"","implementation-of-2#Implementation of":"CacheCreatableInterface.expiresIn","inherited-from-3#Inherited from":"PickType(CacheDto, [ 'key', 'data', 'type', 'expiresIn', 'assignee', ] as const).expiresIn","source-3#Source":".tmp/repos/rockets/packages/nestjs-cache/src/dto/cache.dto.ts:42","key#key":"key: string = ''\nkey","implementation-of-3#Implementation of":"CacheCreatableInterface.key","inherited-from-4#Inherited from":"PickType(CacheDto, [ 'key', 'data', 'type', 'expiresIn', 'assignee', ] as const).key","source-4#Source":".tmp/repos/rockets/packages/nestjs-cache/src/dto/cache.dto.ts:17","type#type":"type: string = ''\ntype","implementation-of-4#Implementation of":"CacheCreatableInterface.type","inherited-from-5#Inherited from":"PickType(CacheDto, [ 'key', 'data', 'type', 'expiresIn', 'assignee', ] as const).type","source-5#Source":".tmp/repos/rockets/packages/nestjs-cache/src/dto/cache.dto.ts:32","arguments#arguments":"static arguments: any","inherited-from-6#Inherited from":"PickType(CacheDto, [ 'key', 'data', 'type', 'expiresIn', 'assignee', ] as const).arguments","source-6#Source":"node_modules/typescript/lib/lib.es5.d.ts:304","caller#caller":"static caller: Function","inherited-from-7#Inherited from":"PickType(CacheDto, [ 'key', 'data', 'type', 'expiresIn', 'assignee', ] as const).caller","source-7#Source":"node_modules/typescript/lib/lib.es5.d.ts:305","length#length":"static readonly length: number","inherited-from-8#Inherited from":"PickType(CacheDto, [ 'key', 'data', 'type', 'expiresIn', 'assignee', ] as const).length","source-8#Source":"node_modules/typescript/lib/lib.es5.d.ts:301","name#name":"static readonly name: string\nReturns the name of the function. Function names are read-only and can not be changed.","inherited-from-9#Inherited from":"PickType(CacheDto, [ 'key', 'data', 'type', 'expiresIn', 'assignee', ] as const).name","source-9#Source":"node_modules/typescript/lib/lib.es2015.core.d.ts:97","methods#Methods":"","hasinstance#[hasInstance]()":"static [hasInstance](value): boolean\nDetermines whether the given value inherits from this function if this function was used\r\nas a constructor function.A constructor function can control which objects are recognized as its instances by\r\n'instanceof' by overriding this method.","parameters-1#Parameters":"• value: any","returns-1#Returns":"boolean","inherited-from-10#Inherited from":"PickType(CacheDto, [ 'key', 'data', 'type', 'expiresIn', 'assignee', ] as const).[hasInstance]","source-10#Source":"node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts:162","apply#apply()":"static apply(this, thisArg, argArray?): any\nCalls the function, substituting the specified object for the this value of the function, and the specified array for the arguments of the function.","parameters-2#Parameters":"• this: Function• thisArg: anyThe object to be used as the this object.• argArray?: anyA set of arguments to be passed to the function.","returns-2#Returns":"any","inherited-from-11#Inherited from":"PickType(CacheDto, [ 'key', 'data', 'type', 'expiresIn', 'assignee', ] as const).apply","source-11#Source":"node_modules/typescript/lib/lib.es5.d.ts:280","bind#bind()":"static bind(this, thisArg, ...argArray): any\nFor a given function, creates a bound function that has the same body as the original function.\r\nThe this object of the bound function is associated with the specified object, and has the specified initial parameters.","parameters-3#Parameters":"• this: Function• thisArg: anyAn object to which the this keyword can refer inside the new function.• ...argArray: any[]A list of arguments to be passed to the new function.","returns-3#Returns":"any","inherited-from-12#Inherited from":"PickType(CacheDto, [ 'key', 'data', 'type', 'expiresIn', 'assignee', ] as const).bind","source-12#Source":"node_modules/typescript/lib/lib.es5.d.ts:295","call#call()":"static call(this, thisArg, ...argArray): any\nCalls a method of an object, substituting another object for the current object.","parameters-4#Parameters":"• this: Function• thisArg: anyThe object to be used as the current object.• ...argArray: any[]A list of arguments to be passed to the method.","returns-4#Returns":"any","inherited-from-13#Inherited from":"PickType(CacheDto, [ 'key', 'data', 'type', 'expiresIn', 'assignee', ] as const).call","source-13#Source":"node_modules/typescript/lib/lib.es5.d.ts:287","tostring#toString()":"static toString(): string\nReturns a string representation of a function.","returns-5#Returns":"string","inherited-from-14#Inherited from":"PickType(CacheDto, [ 'key', 'data', 'type', 'expiresIn', 'assignee', ] as const).toString","source-14#Source":"node_modules/typescript/lib/lib.es5.d.ts:298"}},"/reference/rockets/nestjs-cache/classes/CacheDto":{"title":"Class: CacheDto","data":{"":"@concepta/nestjs-cache • DocsPackages Example / @concepta/nestjs-cache / CacheDtoCache Create DTO","extends#Extends":"CommonEntityDto","implements#Implements":"CacheInterface","constructors#Constructors":"","new-cachedto#new CacheDto()":"new CacheDto(): CacheDto","returns#Returns":"CacheDto","inherited-from#Inherited from":"CommonEntityDto.constructor","properties#Properties":"","assignee#assignee":"assignee: ReferenceIdInterface<string>\nAssignee","implementation-of#Implementation of":"CacheInterface.assignee","source#Source":".tmp/repos/rockets/packages/nestjs-cache/src/dto/cache.dto.ts:50","data#data":"data: null | string\ndata","implementation-of-1#Implementation of":"CacheInterface.data","source-1#Source":".tmp/repos/rockets/packages/nestjs-cache/src/dto/cache.dto.ts:25","datecreated#dateCreated":"dateCreated: Date\nDate created","implementation-of-2#Implementation of":"CacheInterface.dateCreated","inherited-from-1#Inherited from":"CommonEntityDto.dateCreated","source-2#Source":".tmp/repos/rockets/packages/nestjs-common/dist/audit/dto/audit.dto.d.ts:3","datedeleted#dateDeleted":"dateDeleted: AuditDateDeleted\nDate deleted","implementation-of-3#Implementation of":"CacheInterface.dateDeleted","inherited-from-2#Inherited from":"CommonEntityDto.dateDeleted","source-3#Source":".tmp/repos/rockets/packages/nestjs-common/dist/audit/dto/audit.dto.d.ts:5","dateupdated#dateUpdated":"dateUpdated: Date\nDate updated","implementation-of-4#Implementation of":"CacheInterface.dateUpdated","inherited-from-3#Inherited from":"CommonEntityDto.dateUpdated","source-4#Source":".tmp/repos/rockets/packages/nestjs-common/dist/audit/dto/audit.dto.d.ts:4","expirationdate#expirationDate":"expirationDate: null | Date\nexpirationDate","implementation-of-5#Implementation of":"CacheInterface.expirationDate","source-5#Source":".tmp/repos/rockets/packages/nestjs-cache/src/dto/cache.dto.ts:58","expiresin#expiresIn":"expiresIn: null | string\nExpressed in seconds or a string describing a time span zeit/ms.Eg: 60, \"2 days\", \"10h\", \"7d\"","source-6#Source":".tmp/repos/rockets/packages/nestjs-cache/src/dto/cache.dto.ts:42","id#id":"id: string","implementation-of-6#Implementation of":"CacheInterface.id","inherited-from-4#Inherited from":"CommonEntityDto.id","source-7#Source":".tmp/repos/rockets/packages/nestjs-common/dist/common/common-entity.dto.d.ts:4","key#key":"key: string = ''\nkey","implementation-of-7#Implementation of":"CacheInterface.key","source-8#Source":".tmp/repos/rockets/packages/nestjs-cache/src/dto/cache.dto.ts:17","type#type":"type: string = ''\ntype","implementation-of-8#Implementation of":"CacheInterface.type","source-9#Source":".tmp/repos/rockets/packages/nestjs-cache/src/dto/cache.dto.ts:32","version#version":"version: number\nVersion","implementation-of-9#Implementation of":"CacheInterface.version","inherited-from-5#Inherited from":"CommonEntityDto.version","source-10#Source":".tmp/repos/rockets/packages/nestjs-common/dist/audit/dto/audit.dto.d.ts:6"}},"/reference/rockets/nestjs-cache/classes/CacheModule":{"title":"Class: CacheModule","data":{"":"@concepta/nestjs-cache • DocsPackages Example / @concepta/nestjs-cache / CacheModuleCache Module","extends#Extends":"CacheModuleClass","constructors#Constructors":"","new-cachemodule#new CacheModule()":"new CacheModule(): CacheModule","returns#Returns":"CacheModule","inherited-from#Inherited from":"CacheModuleClass.constructor","source#Source":".tmp/repos/rockets/node_modules/@nestjs/common/module-utils/interfaces/configurable-module-cls.interface.d.ts:12","methods#Methods":"","forfeature#forFeature()":"static forFeature(options): DynamicModule","parameters#Parameters":"• options: CacheOptions","returns-1#Returns":"DynamicModule","source-1#Source":".tmp/repos/rockets/packages/nestjs-cache/src/cache.module.ts:33","forroot#forRoot()":"static forRoot(options): DynamicModule","parameters-1#Parameters":"• options: CacheOptions","returns-2#Returns":"DynamicModule","source-2#Source":".tmp/repos/rockets/packages/nestjs-cache/src/cache.module.ts:25","forrootasync#forRootAsync()":"static forRootAsync(options): DynamicModule","parameters-2#Parameters":"• options: CacheAsyncOptions","returns-3#Returns":"DynamicModule","source-3#Source":".tmp/repos/rockets/packages/nestjs-cache/src/cache.module.ts:29","register#register()":"static register(options): DynamicModule","parameters-3#Parameters":"• options: CacheOptions","returns-4#Returns":"DynamicModule","overrides#Overrides":"CacheModuleClass.register","source-4#Source":".tmp/repos/rockets/packages/nestjs-cache/src/cache.module.ts:17","registerasync#registerAsync()":"static registerAsync(options): DynamicModule","parameters-4#Parameters":"• options: CacheAsyncOptions","returns-5#Returns":"DynamicModule","overrides-1#Overrides":"CacheModuleClass.registerAsync","source-5#Source":".tmp/repos/rockets/packages/nestjs-cache/src/cache.module.ts:21"}},"/reference/rockets/nestjs-cache/classes/CachePostgresEntity":{"title":"Class: abstract CachePostgresEntity","data":{"":"@concepta/nestjs-cache • DocsPackages Example / @concepta/nestjs-cache / CachePostgresEntityCache Postgres Entity","extends#Extends":"CommonPostgresEntity","implements#Implements":"CacheInterface","constructors#Constructors":"","new-cachepostgresentity#new CachePostgresEntity()":"new CachePostgresEntity(): CachePostgresEntity","returns#Returns":"CachePostgresEntity","inherited-from#Inherited from":"CommonPostgresEntity.constructor","properties#Properties":"","assignee#assignee":"assignee: ReferenceIdInterface<string>\nShould be overwrite by the table it will be assigned to","implementation-of#Implementation of":"CacheInterface.assignee","source#Source":".tmp/repos/rockets/packages/nestjs-cache/src/entities/cache-postgres.entity.ts:29","data#data":"data: null | string\ndata of the cache","implementation-of-1#Implementation of":"CacheInterface.data","source-1#Source":".tmp/repos/rockets/packages/nestjs-cache/src/entities/cache-postgres.entity.ts:21","datecreated#dateCreated":"dateCreated: Date\nDate created.","implementation-of-2#Implementation of":"CacheInterface.dateCreated","inherited-from-1#Inherited from":"CommonPostgresEntity.dateCreated","source-2#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/audit/audit-postgres.entity.d.ts:3","datedeleted#dateDeleted":"dateDeleted: AuditDateDeleted\nDate deleted.","implementation-of-3#Implementation of":"CacheInterface.dateDeleted","inherited-from-2#Inherited from":"CommonPostgresEntity.dateDeleted","source-3#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/audit/audit-postgres.entity.d.ts:5","dateupdated#dateUpdated":"dateUpdated: Date\nDate updated.","implementation-of-4#Implementation of":"CacheInterface.dateUpdated","inherited-from-3#Inherited from":"CommonPostgresEntity.dateUpdated","source-4#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/audit/audit-postgres.entity.d.ts:4","expirationdate#expirationDate":"expirationDate: null | Date\nDate it will expire","implementation-of-5#Implementation of":"CacheInterface.expirationDate","source-5#Source":".tmp/repos/rockets/packages/nestjs-cache/src/entities/cache-postgres.entity.ts:24","id#id":"id: string","implementation-of-6#Implementation of":"CacheInterface.id","inherited-from-4#Inherited from":"CommonPostgresEntity.id","source-6#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/common/common-postgres.entity.d.ts:4","key#key":"key: string\nkey to be used as reference for the cache data","implementation-of-7#Implementation of":"CacheInterface.key","source-7#Source":".tmp/repos/rockets/packages/nestjs-cache/src/entities/cache-postgres.entity.ts:18","type#type":"type: string\nType of the passcode","implementation-of-8#Implementation of":"CacheInterface.type","source-8#Source":".tmp/repos/rockets/packages/nestjs-cache/src/entities/cache-postgres.entity.ts:15","version#version":"version: number\nVersion","implementation-of-9#Implementation of":"CacheInterface.version","inherited-from-5#Inherited from":"CommonPostgresEntity.version","source-9#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/audit/audit-postgres.entity.d.ts:6"}},"/reference/rockets/nestjs-cache/classes/CacheService":{"title":"Class: CacheService","data":{"":"@concepta/nestjs-cache • DocsPackages Example / @concepta/nestjs-cache / CacheService","implements#Implements":"CacheServiceInterface","constructors#Constructors":"","new-cacheservice#new CacheService()":"new CacheService(allCacheRepos, settings): CacheService","parameters#Parameters":"• allCacheRepos: Record<string, Repository<CacheInterface>>• settings: CacheSettingsInterface","returns#Returns":"CacheService","source#Source":".tmp/repos/rockets/packages/nestjs-cache/src/services/cache.service.ts:32","properties#Properties":"","allcacherepos#allCacheRepos":"private allCacheRepos: Record<string, Repository<CacheInterface>>","source-1#Source":".tmp/repos/rockets/packages/nestjs-cache/src/services/cache.service.ts:34","settings#settings":"protected readonly settings: CacheSettingsInterface","source-2#Source":".tmp/repos/rockets/packages/nestjs-cache/src/services/cache.service.ts:36","methods#Methods":"","clear#clear()":"clear(assignment, cache, queryOptions?): Promise<void>\nClear all caches for a given assignee.","parameters-1#Parameters":"• assignment: stringThe assignment of the repository• cache: Pick<CacheInterface, \"assignee\">The cache to clear• queryOptions?: QueryOptionsInterface","returns-1#Returns":"Promise<void>","implementation-of#Implementation of":"CacheServiceInterface.clear","source-3#Source":".tmp/repos/rockets/packages/nestjs-cache/src/services/cache.service.ts:200","create#create()":"create(assignment, cache, queryOptions?): Promise<CacheInterface>\nCreate a cache with a for the given assignee.","parameters-2#Parameters":"• assignment: stringThe cache assignment• cache: CacheCreatableInterfaceThe data to create• queryOptions?: QueryOptionsInterface","returns-2#Returns":"Promise<CacheInterface>","implementation-of-1#Implementation of":"CacheServiceInterface.create","source-4#Source":".tmp/repos/rockets/packages/nestjs-cache/src/services/cache.service.ts:45","delete#delete()":"delete(assignment, cache, queryOptions?): Promise<void>\nDelete a cache based on params","parameters-3#Parameters":"• assignment: stringThe cache assignment• cache: Pick<CacheInterface, \"key\" | \"type\" | \"assignee\">The cache to delete• queryOptions?: QueryOptionsInterface","returns-3#Returns":"Promise<void>","implementation-of-2#Implementation of":"CacheServiceInterface.delete","source-5#Source":".tmp/repos/rockets/packages/nestjs-cache/src/services/cache.service.ts:130","deletecache#deleteCache()":"private deleteCache(assignment, id, queryOptions?): Promise<void>\nDelete CACHE based on assignment","parameters-4#Parameters":"• assignment: stringThe assignment to delete id from• id: string | string[]The id or ids to delete• queryOptions?: QueryOptionsInterface","returns-4#Returns":"Promise<void>","source-6#Source":".tmp/repos/rockets/packages/nestjs-cache/src/services/cache.service.ts:228","findcache#findCache()":"protected findCache(repoProxy, cache, queryOptions?): Promise<null | CacheInterface>","parameters-5#Parameters":"• repoProxy: RepositoryProxy<CacheInterface>• cache: Pick<CacheInterface, \"key\" | \"type\" | \"assignee\">• queryOptions?: QueryOptionsInterface","returns-5#Returns":"Promise<null | CacheInterface>","source-7#Source":".tmp/repos/rockets/packages/nestjs-cache/src/services/cache.service.ts:269","get#get()":"get(assignment, cache, queryOptions?): Promise<null | CacheInterface>","parameters-6#Parameters":"• assignment: string• cache: Pick<CacheInterface, \"key\" | \"type\" | \"assignee\">• queryOptions?: QueryOptionsInterface","returns-6#Returns":"Promise<null | CacheInterface>","implementation-of-3#Implementation of":"CacheServiceInterface.get","source-8#Source":".tmp/repos/rockets/packages/nestjs-cache/src/services/cache.service.ts:180","getassignedcaches#getAssignedCaches()":"getAssignedCaches(assignment, cache, queryOptions?): Promise<CacheInterface[]>\nGet all CACHEs for assignee.","parameters-7#Parameters":"• assignment: stringThe assignment of the check• cache: Pick<CacheInterface, \"assignee\">The cache to get assignments• queryOptions?: QueryOptionsInterface","returns-7#Returns":"Promise<CacheInterface[]>","implementation-of-4#Implementation of":"CacheServiceInterface.getAssignedCaches","source-9#Source":".tmp/repos/rockets/packages/nestjs-cache/src/services/cache.service.ts:149","getassignmentrepo#getAssignmentRepo()":"private getAssignmentRepo(assignment): Repository<CacheInterface>\nGet the assignment repo for the given assignment.","parameters-8#Parameters":"• assignment: stringThe cache assignment","returns-8#Returns":"Repository<CacheInterface>","source-10#Source":".tmp/repos/rockets/packages/nestjs-cache/src/services/cache.service.ts:300","mergeentity#mergeEntity()":"private mergeEntity(repoProxy, assignedCache, dto, queryOptions?): Promise<CacheInterface>","parameters-9#Parameters":"• repoProxy: RepositoryProxy<CacheInterface>• assignedCache: CacheInterface• dto: CacheUpdateDto• queryOptions?: QueryOptionsInterface","returns-9#Returns":"Promise<CacheInterface>","source-11#Source":".tmp/repos/rockets/packages/nestjs-cache/src/services/cache.service.ts:321","update#update()":"update(assignment, cache, queryOptions?): Promise<CacheInterface>","parameters-10#Parameters":"• assignment: string• cache: CacheUpdatableInterface• queryOptions?: QueryOptionsInterface","returns-10#Returns":"Promise<CacheInterface>","implementation-of-5#Implementation of":"CacheServiceInterface.update","source-12#Source":".tmp/repos/rockets/packages/nestjs-cache/src/services/cache.service.ts:82","validatedto#validateDto()":"protected validateDto<T>(type, data): Promise<T>","type-parameters#Type parameters":"• T extends DeepPartial<CacheInterface>","parameters-11#Parameters":"• type: Type<T>• data: T","returns-11#Returns":"Promise<T>","source-13#Source":".tmp/repos/rockets/packages/nestjs-cache/src/services/cache.service.ts:247"}},"/reference/rockets/nestjs-cache/classes/CacheSqliteEntity":{"title":"Class: abstract CacheSqliteEntity","data":{"":"@concepta/nestjs-cache • DocsPackages Example / @concepta/nestjs-cache / CacheSqliteEntityCache Sqlite Entity","extends#Extends":"CommonSqliteEntity","implements#Implements":"CacheInterface","constructors#Constructors":"","new-cachesqliteentity#new CacheSqliteEntity()":"new CacheSqliteEntity(): CacheSqliteEntity","returns#Returns":"CacheSqliteEntity","inherited-from#Inherited from":"CommonSqliteEntity.constructor","properties#Properties":"","assignee#assignee":"assignee: ReferenceIdInterface<string>\nShould be overwrite by the table it will be assigned to","implementation-of#Implementation of":"CacheInterface.assignee","source#Source":".tmp/repos/rockets/packages/nestjs-cache/src/entities/cache-sqlite.entity.ts:30","data#data":"data: string\ndata of the cache","implementation-of-1#Implementation of":"CacheInterface.data","source-1#Source":".tmp/repos/rockets/packages/nestjs-cache/src/entities/cache-sqlite.entity.ts:22","datecreated#dateCreated":"dateCreated: Date\nDate created.","implementation-of-2#Implementation of":"CacheInterface.dateCreated","inherited-from-1#Inherited from":"CommonSqliteEntity.dateCreated","source-2#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/audit/audit-sqlite.entity.d.ts:3","datedeleted#dateDeleted":"dateDeleted: AuditDateDeleted\nDate deleted.","implementation-of-3#Implementation of":"CacheInterface.dateDeleted","inherited-from-2#Inherited from":"CommonSqliteEntity.dateDeleted","source-3#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/audit/audit-sqlite.entity.d.ts:5","dateupdated#dateUpdated":"dateUpdated: Date\nDate updated.","implementation-of-4#Implementation of":"CacheInterface.dateUpdated","inherited-from-3#Inherited from":"CommonSqliteEntity.dateUpdated","source-4#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/audit/audit-sqlite.entity.d.ts:4","expirationdate#expirationDate":"expirationDate: null | Date\nDate it will expire","implementation-of-5#Implementation of":"CacheInterface.expirationDate","source-5#Source":".tmp/repos/rockets/packages/nestjs-cache/src/entities/cache-sqlite.entity.ts:25","id#id":"id: string","implementation-of-6#Implementation of":"CacheInterface.id","inherited-from-4#Inherited from":"CommonSqliteEntity.id","source-6#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/common/common-sqlite.entity.d.ts:4","key#key":"key: string\nkey to be used as reference for the cache data","implementation-of-7#Implementation of":"CacheInterface.key","source-7#Source":".tmp/repos/rockets/packages/nestjs-cache/src/entities/cache-sqlite.entity.ts:16","type#type":"type: string\nType of the passcode","implementation-of-8#Implementation of":"CacheInterface.type","source-8#Source":".tmp/repos/rockets/packages/nestjs-cache/src/entities/cache-sqlite.entity.ts:19","version#version":"version: number\nVersion","implementation-of-9#Implementation of":"CacheInterface.version","inherited-from-5#Inherited from":"CommonSqliteEntity.version","source-9#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/audit/audit-sqlite.entity.d.ts:6"}},"/reference/rockets/nestjs-cache/classes/CacheUpdateDto":{"title":"Class: CacheUpdateDto","data":{"":"@concepta/nestjs-cache • DocsPackages Example / @concepta/nestjs-cache / CacheUpdateDtoCache Create DTO","extends#Extends":"Pick<CacheDto, \"expiresIn\" | \"key\" | \"data\" | \"type\" | \"assignee\">","implements#Implements":"CacheUpdatableInterface","constructors#Constructors":"","new-cacheupdatedto#new CacheUpdateDto()":"new CacheUpdateDto(...args): CacheUpdateDto","parameters#Parameters":"• ...args: any[]","returns#Returns":"CacheUpdateDto","inherited-from#Inherited from":"PickType(CacheDto, [ 'key', 'type', 'assignee', 'data', 'expiresIn', ] as const).constructor","source#Source":".tmp/repos/rockets/node_modules/@nestjs/common/interfaces/type.interface.d.ts:2","properties#Properties":"","assignee#assignee":"assignee: ReferenceIdInterface<string>\nAssignee","implementation-of#Implementation of":"CacheUpdatableInterface.assignee","inherited-from-1#Inherited from":"PickType(CacheDto, [ 'key', 'type', 'assignee', 'data', 'expiresIn', ] as const).assignee","source-1#Source":".tmp/repos/rockets/packages/nestjs-cache/src/dto/cache.dto.ts:50","data#data":"data: null | string\ndata","implementation-of-1#Implementation of":"CacheUpdatableInterface.data","inherited-from-2#Inherited from":"PickType(CacheDto, [ 'key', 'type', 'assignee', 'data', 'expiresIn', ] as const).data","source-2#Source":".tmp/repos/rockets/packages/nestjs-cache/src/dto/cache.dto.ts:25","expiresin#expiresIn":"expiresIn: null | string\nExpressed in seconds or a string describing a time span zeit/ms.Eg: 60, \"2 days\", \"10h\", \"7d\"","implementation-of-2#Implementation of":"CacheUpdatableInterface.expiresIn","inherited-from-3#Inherited from":"PickType(CacheDto, [ 'key', 'type', 'assignee', 'data', 'expiresIn', ] as const).expiresIn","source-3#Source":".tmp/repos/rockets/packages/nestjs-cache/src/dto/cache.dto.ts:42","key#key":"key: string = ''\nkey","implementation-of-3#Implementation of":"CacheUpdatableInterface.key","inherited-from-4#Inherited from":"PickType(CacheDto, [ 'key', 'type', 'assignee', 'data', 'expiresIn', ] as const).key","source-4#Source":".tmp/repos/rockets/packages/nestjs-cache/src/dto/cache.dto.ts:17","type#type":"type: string = ''\ntype","implementation-of-4#Implementation of":"CacheUpdatableInterface.type","inherited-from-5#Inherited from":"PickType(CacheDto, [ 'key', 'type', 'assignee', 'data', 'expiresIn', ] as const).type","source-5#Source":".tmp/repos/rockets/packages/nestjs-cache/src/dto/cache.dto.ts:32","arguments#arguments":"static arguments: any","inherited-from-6#Inherited from":"PickType(CacheDto, [ 'key', 'type', 'assignee', 'data', 'expiresIn', ] as const).arguments","source-6#Source":"node_modules/typescript/lib/lib.es5.d.ts:304","caller#caller":"static caller: Function","inherited-from-7#Inherited from":"PickType(CacheDto, [ 'key', 'type', 'assignee', 'data', 'expiresIn', ] as const).caller","source-7#Source":"node_modules/typescript/lib/lib.es5.d.ts:305","length#length":"static readonly length: number","inherited-from-8#Inherited from":"PickType(CacheDto, [ 'key', 'type', 'assignee', 'data', 'expiresIn', ] as const).length","source-8#Source":"node_modules/typescript/lib/lib.es5.d.ts:301","name#name":"static readonly name: string\nReturns the name of the function. Function names are read-only and can not be changed.","inherited-from-9#Inherited from":"PickType(CacheDto, [ 'key', 'type', 'assignee', 'data', 'expiresIn', ] as const).name","source-9#Source":"node_modules/typescript/lib/lib.es2015.core.d.ts:97","methods#Methods":"","hasinstance#[hasInstance]()":"static [hasInstance](value): boolean\nDetermines whether the given value inherits from this function if this function was used\r\nas a constructor function.A constructor function can control which objects are recognized as its instances by\r\n'instanceof' by overriding this method.","parameters-1#Parameters":"• value: any","returns-1#Returns":"boolean","inherited-from-10#Inherited from":"PickType(CacheDto, [ 'key', 'type', 'assignee', 'data', 'expiresIn', ] as const).[hasInstance]","source-10#Source":"node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts:162","apply#apply()":"static apply(this, thisArg, argArray?): any\nCalls the function, substituting the specified object for the this value of the function, and the specified array for the arguments of the function.","parameters-2#Parameters":"• this: Function• thisArg: anyThe object to be used as the this object.• argArray?: anyA set of arguments to be passed to the function.","returns-2#Returns":"any","inherited-from-11#Inherited from":"PickType(CacheDto, [ 'key', 'type', 'assignee', 'data', 'expiresIn', ] as const).apply","source-11#Source":"node_modules/typescript/lib/lib.es5.d.ts:280","bind#bind()":"static bind(this, thisArg, ...argArray): any\nFor a given function, creates a bound function that has the same body as the original function.\r\nThe this object of the bound function is associated with the specified object, and has the specified initial parameters.","parameters-3#Parameters":"• this: Function• thisArg: anyAn object to which the this keyword can refer inside the new function.• ...argArray: any[]A list of arguments to be passed to the new function.","returns-3#Returns":"any","inherited-from-12#Inherited from":"PickType(CacheDto, [ 'key', 'type', 'assignee', 'data', 'expiresIn', ] as const).bind","source-12#Source":"node_modules/typescript/lib/lib.es5.d.ts:295","call#call()":"static call(this, thisArg, ...argArray): any\nCalls a method of an object, substituting another object for the current object.","parameters-4#Parameters":"• this: Function• thisArg: anyThe object to be used as the current object.• ...argArray: any[]A list of arguments to be passed to the method.","returns-4#Returns":"any","inherited-from-13#Inherited from":"PickType(CacheDto, [ 'key', 'type', 'assignee', 'data', 'expiresIn', ] as const).call","source-13#Source":"node_modules/typescript/lib/lib.es5.d.ts:287","tostring#toString()":"static toString(): string\nReturns a string representation of a function.","returns-5#Returns":"string","inherited-from-14#Inherited from":"PickType(CacheDto, [ 'key', 'type', 'assignee', 'data', 'expiresIn', ] as const).toString","source-14#Source":"node_modules/typescript/lib/lib.es5.d.ts:298"}},"/reference/rockets/nestjs-cache/globals":{"title":"@concepta/nestjs-cache","data":{"":"@concepta/nestjs-cache • DocsPackages Example / @concepta/nestjs-cache","classes#Classes":"CacheCreateDto\nCacheDto\nCacheModule\nCachePostgresEntity\nCacheService\nCacheSqliteEntity\nCacheUpdateDto"}},"/reference/rockets/nestjs-common/README":{"title":"Rockets NestJS Common","data":{"":"@concepta/nestjs-common • DocsPackages Example / @concepta/nestjs-commonThe common module contains commonly used utilities, DTOs, etc.","project#Project":"","installation#Installation":"yarn add @concepta/nestjs-common"}},"/reference/rockets/nestjs-common/classes/AuditDto":{"title":"Class: AuditDto","data":{"":"@concepta/nestjs-common • DocsPackages Example / @concepta/nestjs-common / AuditDtoAudit DTO","extended-by#Extended by":"CommonEntityDto","implements#Implements":"AuditInterface","constructors#Constructors":"","new-auditdto#new AuditDto()":"new AuditDto(): AuditDto","returns#Returns":"AuditDto","properties#Properties":"","datecreated#dateCreated":"dateCreated: Date\nDate created","implementation-of#Implementation of":"AuditInterface.dateCreated","source#Source":"packages/nestjs-common/src/audit/dto/audit.dto.ts:27","datedeleted#dateDeleted":"dateDeleted: AuditDateDeleted\nDate deleted","implementation-of-1#Implementation of":"AuditInterface.dateDeleted","source-1#Source":"packages/nestjs-common/src/audit/dto/audit.dto.ts:55","dateupdated#dateUpdated":"dateUpdated: Date\nDate updated","implementation-of-2#Implementation of":"AuditInterface.dateUpdated","source-2#Source":"packages/nestjs-common/src/audit/dto/audit.dto.ts:40","version#version":"version: number\nVersion","implementation-of-3#Implementation of":"AuditInterface.version","source-3#Source":"packages/nestjs-common/src/audit/dto/audit.dto.ts:66"}},"/reference/rockets/nestjs-common/classes/CommonEntityDto":{"title":"Class: CommonEntityDto","data":{"":"@concepta/nestjs-common • DocsPackages Example / @concepta/nestjs-common / CommonEntityDtoUser DTO","extends#Extends":"AuditDto","extended-by#Extended by":"","implements#Implements":"ReferenceIdInterface\nAuditInterface","constructors#Constructors":"","new-commonentitydto#new CommonEntityDto()":"new CommonEntityDto(): CommonEntityDto","returns#Returns":"CommonEntityDto","inherited-from#Inherited from":"AuditDto.constructor","properties#Properties":"","datecreated#dateCreated":"dateCreated: Date\nDate created","implementation-of#Implementation of":"AuditInterface.dateCreated","inherited-from-1#Inherited from":"AuditDto.dateCreated","source#Source":"packages/nestjs-common/src/audit/dto/audit.dto.ts:27","datedeleted#dateDeleted":"dateDeleted: AuditDateDeleted\nDate deleted","implementation-of-1#Implementation of":"AuditInterface.dateDeleted","inherited-from-2#Inherited from":"AuditDto.dateDeleted","source-1#Source":"packages/nestjs-common/src/audit/dto/audit.dto.ts:55","dateupdated#dateUpdated":"dateUpdated: Date\nDate updated","implementation-of-2#Implementation of":"AuditInterface.dateUpdated","inherited-from-3#Inherited from":"AuditDto.dateUpdated","source-2#Source":"packages/nestjs-common/src/audit/dto/audit.dto.ts:40","id#id":"id: string = ''","implementation-of-3#Implementation of":"ReferenceIdInterface.id","source-3#Source":"packages/nestjs-common/src/common/common-entity.dto.ts:21","version#version":"version: number\nVersion","implementation-of-4#Implementation of":"AuditInterface.version","inherited-from-4#Inherited from":"AuditDto.version","source-4#Source":"packages/nestjs-common/src/audit/dto/audit.dto.ts:66"}},"/reference/rockets/nestjs-common/classes/ReferenceIdDto":{"title":"Class: ReferenceIdDto","data":{"":"@concepta/nestjs-common • DocsPackages Example / @concepta/nestjs-common / ReferenceIdDtoIdentifiable by id.","see#See":"https://en.wikipedia.org/wiki/Reference_(computer_science)","implements#Implements":"ReferenceIdInterface","constructors#Constructors":"","new-referenceiddto#new ReferenceIdDto()":"new ReferenceIdDto(): ReferenceIdDto","returns#Returns":"ReferenceIdDto","properties#Properties":"","id#id":"id: string = ''","implementation-of#Implementation of":"ReferenceIdInterface.id","source#Source":"packages/nestjs-common/src/reference/reference-id.dto.ts:12"}},"/reference/rockets/nestjs-common/functions/AuthUser":{"title":"Function: AuthUser()","data":{"":"@concepta/nestjs-common • DocsPackages Example / @concepta/nestjs-common / AuthUser\nAuthUser(...dataOrPipes): ParameterDecorator\nDecorator that takes a property name as key, and returns the\nassociated value if it exists (or undefined if it doesn't exist,\nor if the user object has not been created).\n@Get()\nasync findOne(@AuthUser('firstName') firstName: string) {\n  console.log(`Hello ${firstName}`);\n}","parameters#Parameters":"• ...dataOrPipes: (string | PipeTransform<any, any> | Type<PipeTransform<any, any>>)[]","returns#Returns":"ParameterDecorator","source#Source":"packages/nestjs-common/src/decorators/auth-user.decorator.ts:16"}},"/reference/rockets/nestjs-common/functions/createSettingsProvider":{"title":"Function: createSettingsProvider()","data":{"":"@concepta/nestjs-common • DocsPackages Example / @concepta/nestjs-common / createSettingsProvider\ncreateSettingsProvider<ModuleSettingsType, ModuleOptionsType>(options): Provider","type-parameters#Type parameters":"• ModuleSettingsType• ModuleOptionsType extends ModuleOptionsSettingsInterface<ModuleSettingsType, ModuleOptionsType>","parameters#Parameters":"• options• options.optionsOverrides?: ModuleOptionsType• options.optionsToken: InjectionToken• options.settingsKey: string• options.settingsToken: string","returns#Returns":"Provider","source#Source":"packages/nestjs-common/src/modules/utils/create-settings-provider.ts:4"}},"/reference/rockets/nestjs-common/globals":{"title":"@concepta/nestjs-common","data":{"":"@concepta/nestjs-common • DocsPackages Example / @concepta/nestjs-common","classes#Classes":"AuditDto\nCommonEntityDto\nReferenceIdDto","functions#Functions":"AuthUser\ncreateSettingsProvider"}},"/reference/rockets/nestjs-core/README":{"title":"Rockets NestJS Core","data":{"":"@concepta/nestjs-core • DocsPackages Example / @concepta/nestjs-coreThe core module is a dependency of all Rockets modules.","project#Project":"","installation#Installation":"yarn add @concepta/nestjs-core","configuration#Configuration":"Available configuration options:\nDeferred Registration","deferred-registration#Deferred Registration":"By default, modules that are registered using .deferred() do not have a timeout set.If you module wirings make some asynchronous calls that may experience significant delays during start up,\nit is a good idea to set the global ROCKETS_MODULE_DEFERRED_TIMEOUT environment variable to the number of\nmilliseconds that each module should timeout at.","examples#Examples":"Your .env file:\n# global deferred timeout\nROCKETS_MODULE_DEFERRED_TIMEOUT=5000\nYour shell:\nexport ROCKETS_MODULE_DEFERRED_TIMEOUT=5000;"}},"/reference/rockets/nestjs-core/functions/createConfigurableDynamicRootModule":{"title":"Function: createConfigurableDynamicRootModule()","data":{"":"@concepta/nestjs-core • DocsPackages Example / @concepta/nestjs-core / createConfigurableDynamicRootModule\ncreateConfigurableDynamicRootModule<T, U>(moduleConfigToken, moduleProperties?): IConfigurableDynamicRootModule<T, U>","type-parameters#Type parameters":"• T• U","parameters#Parameters":"• moduleConfigToken: InjectionToken• moduleProperties?: Partial<Pick<ModuleMetadata, \"imports\" | \"exports\" | \"providers\" | \"controllers\">>","returns#Returns":"IConfigurableDynamicRootModule<T, U>","source#Source":"node_modules/@golevelup/nestjs-modules/lib/dynamicModules.d.ts:25"}},"/reference/rockets/nestjs-core/functions/deferExternal":{"title":"Function: deferExternal()","data":{"":"@concepta/nestjs-core • DocsPackages Example / @concepta/nestjs-core / deferExternal\ndeferExternal<T, U>(moduleCtor, options): Promise<DynamicModule>","type-parameters#Type parameters":"• T• U","parameters#Parameters":"• moduleCtor: IConfigurableDynamicRootModule<T, U> & Type<T>• options: DeferExternalOptionsInterface","returns#Returns":"Promise<DynamicModule>","source#Source":"packages/nestjs-core/src/modules/defer-external.ts:5"}},"/reference/rockets/nestjs-core/functions/negotiateController":{"title":"Function: negotiateController()","data":{"":"@concepta/nestjs-core • DocsPackages Example / @concepta/nestjs-core / negotiateController\nnegotiateController(module, options): void\nNegotiate the addition of controllers to a dynamic module.","parameters#Parameters":"• module: DynamicModuleA dynamic module• options: ModuleOptionsControllerInterfaceOptions containing controller setting.","returns#Returns":"void","source#Source":"packages/nestjs-core/src/modules/negotiate-controller.ts:10"}},"/reference/rockets/nestjs-core/interfaces/ModuleOptionsControllerInterface":{"title":"Interface: ModuleOptionsControllerInterface","data":{"":"@concepta/nestjs-core • DocsPackages Example / @concepta/nestjs-core / ModuleOptionsControllerInterface","properties#Properties":"","controller#controller?":"optional controller: false | Type<any> | Type<any>[]","source#Source":"packages/nestjs-core/src/modules/interfaces/module-options-controller.interface.ts:4"}},"/reference/rockets/nestjs-core/interfaces/DeferExternalOptionsInterface":{"title":"Interface: DeferExternalOptionsInterface","data":{"":"@concepta/nestjs-core • DocsPackages Example / @concepta/nestjs-core / DeferExternalOptionsInterface","properties#Properties":"","timeout#timeout?":"optional timeout: number","source#Source":"packages/nestjs-core/src/modules/interfaces/defer-external-options.interface.ts:2","timeoutmessage#timeoutMessage?":"optional timeoutMessage: string","source-1#Source":"packages/nestjs-core/src/modules/interfaces/defer-external-options.interface.ts:3"}},"/reference/rockets/nestjs-core/interfaces/ModuleOptionsSettingsInterface":{"title":"Interface: ModuleOptionsSettingsInterface<T>","data":{"":"@concepta/nestjs-core • DocsPackages Example / @concepta/nestjs-core / ModuleOptionsSettingsInterface","type-parameters#Type parameters":"• T","properties#Properties":"","settings#settings?":"optional settings: T","source#Source":"packages/nestjs-core/src/modules/interfaces/module-options-settings.interface.ts:2","settingstransform#settingsTransform()?":"optional settingsTransform: (settings?, defaultSettings?) => T","parameters#Parameters":"• settings?: T• defaultSettings?: T","returns#Returns":"T","source-1#Source":"packages/nestjs-core/src/modules/interfaces/module-options-settings.interface.ts:3"}},"/reference/rockets/nestjs-crud/README":{"title":"Rockets NestJS CRUD","data":{"":"@concepta/nestjs-crud • DocsPackages Example / @concepta/nestjs-crudExtremely powerful CRUD module that is an extension/wrapper of the popular @nestjsx/crud module.We love the original module, but in many cases it was not flexible enough. We have retained all of the options and signatures, but pushed\nthe options from the controller level down to the method level.","project#Project":"","installation#Installation":"Prerequisites\nyarn add pg typeorm class-transformer class-validatorThe crud module\nyarn add @concepta/nestjs-crud"}},"/reference/rockets/nestjs-crud/classes/CrudCreateManyDto":{"title":"Class: CrudCreateManyDto<T>","data":{"":"@concepta/nestjs-crud • DocsPackages Example / @concepta/nestjs-crud / CrudCreateManyDto","extended-by#Extended by":"","type-parameters#Type parameters":"• T","implements#Implements":"CrudCreateManyInterface<T>","constructors#Constructors":"","new-crudcreatemanydto#new CrudCreateManyDto()":"new CrudCreateManyDto<T>(): CrudCreateManyDto<T>","returns#Returns":"CrudCreateManyDto<T>","properties#Properties":"","bulk#bulk":"bulk: T[] = []","implementation-of#Implementation of":"CrudCreateManyInterface.bulk","source#Source":"packages/nestjs-crud/src/dto/crud-create-many.dto.ts:15"}},"/reference/rockets/nestjs-crud/classes/CrudModule":{"title":"Class: CrudModule","data":{"":"@concepta/nestjs-crud • DocsPackages Example / @concepta/nestjs-crud / CrudModule","extends#Extends":"CrudModuleClass","constructors#Constructors":"","new-crudmodule#new CrudModule()":"new CrudModule(): CrudModule","returns#Returns":"CrudModule","inherited-from#Inherited from":"CrudModuleClass.constructor","source#Source":"node_modules/@nestjs/common/module-utils/interfaces/configurable-module-cls.interface.d.ts:12","methods#Methods":"","forfeature#forFeature()":"static forFeature(options): DynamicModule","parameters#Parameters":"• options: CrudOptions","returns-1#Returns":"DynamicModule","source-1#Source":"packages/nestjs-crud/src/crud.module.ts:29","forroot#forRoot()":"static forRoot(options): DynamicModule","parameters-1#Parameters":"• options: CrudOptions","returns-2#Returns":"DynamicModule","source-2#Source":"packages/nestjs-crud/src/crud.module.ts:21","forrootasync#forRootAsync()":"static forRootAsync(options): DynamicModule","parameters-2#Parameters":"• options: CrudAsyncOptions","returns-3#Returns":"DynamicModule","source-3#Source":"packages/nestjs-crud/src/crud.module.ts:25","register#register()":"static register(options): DynamicModule","parameters-3#Parameters":"• options: CrudOptions","returns-4#Returns":"DynamicModule","overrides#Overrides":"CrudModuleClass.register","source-4#Source":"packages/nestjs-crud/src/crud.module.ts:13","registerasync#registerAsync()":"static registerAsync(options): DynamicModule","parameters-4#Parameters":"• options: CrudAsyncOptions","returns-5#Returns":"DynamicModule","overrides-1#Overrides":"CrudModuleClass.registerAsync","source-5#Source":"packages/nestjs-crud/src/crud.module.ts:17"}},"/reference/rockets/nestjs-crud/classes/CrudQueryHelper":{"title":"Class: CrudQueryHelper","data":{"":"@concepta/nestjs-crud • DocsPackages Example / @concepta/nestjs-crud / CrudQueryHelper","constructors#Constructors":"","new-crudqueryhelper#new CrudQueryHelper()":"new CrudQueryHelper(): CrudQueryHelper","returns#Returns":"CrudQueryHelper","methods#Methods":"","addsearch#addSearch()":"addSearch(req, search?): void","parameters#Parameters":"• req: CrudRequest• search?: SCondition","returns-1#Returns":"void","source#Source":"packages/nestjs-crud/src/util/crud-query.helper.ts:39","mergeoptions#mergeOptions()":"mergeOptions(req, options): void","parameters-1#Parameters":"• req: CrudRequest• options: Omit<CrudQueryOptionsInterface, \"filter\">","returns-2#Returns":"void","source-1#Source":"packages/nestjs-crud/src/util/crud-query.helper.ts:20","modifyrequest#modifyRequest()":"modifyRequest(req, options?): void","parameters-2#Parameters":"• req: CrudRequest• options?: CrudQueryOptionsInterface","returns-3#Returns":"void","source-2#Source":"packages/nestjs-crud/src/util/crud-query.helper.ts:8"}},"/reference/rockets/nestjs-crud/classes/CrudResponsePaginatedDto":{"title":"Class: CrudResponsePaginatedDto<T>","data":{"":"@concepta/nestjs-crud • DocsPackages Example / @concepta/nestjs-crud / CrudResponsePaginatedDto","extended-by#Extended by":"","type-parameters#Type parameters":"• T","implements#Implements":"CrudResponsePaginatedInterface<T>","constructors#Constructors":"","new-crudresponsepaginateddto#new CrudResponsePaginatedDto()":"new CrudResponsePaginatedDto<T>(): CrudResponsePaginatedDto<T>","returns#Returns":"CrudResponsePaginatedDto<T>","properties#Properties":"","count#count":"count: number = 0","implementation-of#Implementation of":"CrudResponsePaginatedInterface.count","source#Source":"packages/nestjs-crud/src/dto/crud-response-paginated.dto.ts:21","data#data":"data: T[] = []","implementation-of-1#Implementation of":"CrudResponsePaginatedInterface.data","source-1#Source":"packages/nestjs-crud/src/dto/crud-response-paginated.dto.ts:17","page#page":"page: number = 0","implementation-of-2#Implementation of":"CrudResponsePaginatedInterface.page","source-2#Source":"packages/nestjs-crud/src/dto/crud-response-paginated.dto.ts:32","pagecount#pageCount":"pageCount: number = 0","implementation-of-3#Implementation of":"CrudResponsePaginatedInterface.pageCount","source-3#Source":"packages/nestjs-crud/src/dto/crud-response-paginated.dto.ts:36","total#total":"total: number = 0","implementation-of-4#Implementation of":"CrudResponsePaginatedInterface.total","source-4#Source":"packages/nestjs-crud/src/dto/crud-response-paginated.dto.ts:28"}},"/reference/rockets/nestjs-crud/classes/TypeOrmCrudService":{"title":"Class: TypeOrmCrudService<T>","data":{"":"@concepta/nestjs-crud • DocsPackages Example / @concepta/nestjs-crud / TypeOrmCrudService","extends#Extends":"TypeOrmCrudService<T>","extended-by#Extended by":"","type-parameters#Type parameters":"• T extends ObjectLiteral","constructors#Constructors":"","new-typeormcrudservice#new TypeOrmCrudService()":"new TypeOrmCrudService<T>(repo): TypeOrmCrudService<T>","parameters#Parameters":"• repo: Repository<T>","returns#Returns":"TypeOrmCrudService<T>","overrides#Overrides":"xTypeOrmCrudService<T>.constructor","source#Source":"packages/nestjs-crud/src/services/typeorm-crud.service.ts:20","properties#Properties":"","alias#alias":"protected readonly alias: string","inherited-from#Inherited from":"xTypeOrmCrudService.alias","source-1#Source":"node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:28","count#count()":"readonly count: (options?) => Promise<number>\nCounts entities that match given options.\nUseful for pagination.","parameters-1#Parameters":"• options?: FindManyOptions<T>","returns-1#Returns":"Promise<number>","inherited-from-1#Inherited from":"xTypeOrmCrudService.count","source-2#Source":"node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:26","crudqueryhelper#crudQueryHelper":"protected readonly crudQueryHelper: CrudQueryHelper","source-3#Source":"packages/nestjs-crud/src/services/typeorm-crud.service.ts:24","dbname#dbName":"protected dbName: \"mysql\" | \"mariadb\" | \"postgres\" | \"cockroachdb\" | \"sqlite\" | \"mssql\" | \"sap\" | \"oracle\" | \"cordova\" | \"nativescript\" | \"react-native\" | \"sqljs\" | \"mongodb\" | \"aurora-mysql\" | \"aurora-postgres\" | \"expo\" | \"better-sqlite3\" | \"capacitor\" | \"spanner\"","inherited-from-2#Inherited from":"xTypeOrmCrudService.dbName","source-4#Source":"node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:16","entitycolumns#entityColumns":"protected entityColumns: string[]","inherited-from-3#Inherited from":"xTypeOrmCrudService.entityColumns","source-5#Source":"node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:17","entitycolumnshash#entityColumnsHash":"protected entityColumnsHash: ObjectLiteral","inherited-from-4#Inherited from":"xTypeOrmCrudService.entityColumnsHash","source-6#Source":"node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:20","entityhasdeletecolumn#entityHasDeleteColumn":"protected entityHasDeleteColumn: boolean","inherited-from-5#Inherited from":"xTypeOrmCrudService.entityHasDeleteColumn","source-7#Source":"node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:19","entityprimarycolumns#entityPrimaryColumns":"protected entityPrimaryColumns: string[]","inherited-from-6#Inherited from":"xTypeOrmCrudService.entityPrimaryColumns","source-8#Source":"node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:18","entityrelationshash#entityRelationsHash":"protected entityRelationsHash: Map<string, IAllowedRelation>","inherited-from-7#Inherited from":"xTypeOrmCrudService.entityRelationsHash","source-9#Source":"node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:21","entitytype#entityType":"protected readonly entityType: ClassType<T>","inherited-from-8#Inherited from":"xTypeOrmCrudService.entityType","source-10#Source":"node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:27","find#find()":"readonly find: (options?) => Promise<T[]>\nFinds entities that match given find options.","parameters-2#Parameters":"• options?: FindManyOptions<T>","returns-2#Returns":"Promise<T[]>","inherited-from-9#Inherited from":"xTypeOrmCrudService.find","source-11#Source":"node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:25","findone#findOne()":"readonly findOne: (options) => Promise<null | T>\nFinds first entity by a given find options.\nIf entity was not found in the database - returns null.","parameters-3#Parameters":"• options: FindOneOptions<T>","returns-3#Returns":"Promise<null | T>","inherited-from-10#Inherited from":"xTypeOrmCrudService.findOne","source-12#Source":"node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:24","repo#repo":"protected repo: Repository<T>","inherited-from-11#Inherited from":"xTypeOrmCrudService.repo","source-13#Source":"packages/nestjs-crud/src/services/typeorm-crud.service.ts:20","sqlinjectionregex#sqlInjectionRegEx":"protected sqlInjectionRegEx: RegExp[]","inherited-from-12#Inherited from":"xTypeOrmCrudService.sqlInjectionRegEx","source-14#Source":"node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:22","methods#Methods":"","builderaddbrackets#builderAddBrackets()":"protected builderAddBrackets(builder, condition, brackets): void","parameters-4#Parameters":"• builder: SelectQueryBuilder<T>• condition: SConditionKey• brackets: Brackets","returns-4#Returns":"void","inherited-from-13#Inherited from":"xTypeOrmCrudService.builderAddBrackets","source-15#Source":"node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:53","buildersetwhere#builderSetWhere()":"protected builderSetWhere(builder, condition, field, value, operator?): void","parameters-5#Parameters":"• builder: SelectQueryBuilder<T>• condition: SConditionKey• field: string• value: any• operator?: ComparisonOperator","returns-5#Returns":"void","inherited-from-14#Inherited from":"xTypeOrmCrudService.builderSetWhere","source-16#Source":"node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:54","createbuilder#createBuilder()":"createBuilder(parsed, options, many?, withDeleted?): Promise<SelectQueryBuilder<T>>","parameters-6#Parameters":"• parsed: ParsedRequestParams• options: CrudRequestOptions• many?: boolean• withDeleted?: boolean","returns-6#Returns":"Promise<SelectQueryBuilder<T>>","inherited-from-15#Inherited from":"xTypeOrmCrudService.createBuilder","source-17#Source":"node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:38","createmany#createMany()":"createMany(req, dto, queryOptions?): Promise<T[]>","parameters-7#Parameters":"• req: CrudRequest• dto: CreateManyDto<DeepPartial<T>>• queryOptions?: CrudQueryOptionsInterface","returns-7#Returns":"Promise<T[]>","overrides-1#Overrides":"xTypeOrmCrudService.createMany","source-18#Source":"packages/nestjs-crud/src/services/typeorm-crud.service.ts:70","createone#createOne()":"createOne(req, dto, queryOptions?): Promise<T>","parameters-8#Parameters":"• req: CrudRequest• dto: DeepPartial<T>• queryOptions?: CrudQueryOptionsInterface","returns-8#Returns":"Promise<T>","overrides-2#Overrides":"xTypeOrmCrudService.createOne","source-19#Source":"packages/nestjs-crud/src/services/typeorm-crud.service.ts:85","createpageinfo#createPageInfo()":"createPageInfo(data, total, limit, offset): GetManyDefaultResponse<T>","parameters-9#Parameters":"• data: T[]• total: number• limit: number• offset: number","returns-9#Returns":"GetManyDefaultResponse<T>","inherited-from-16#Inherited from":"xTypeOrmCrudService.createPageInfo","source-20#Source":"node_modules/@nestjsx/crud/lib/services/crud-service.abstract.d.ts:15","decidepagination#decidePagination()":"decidePagination(parsed, options): boolean","parameters-10#Parameters":"• parsed: ParsedRequestParams• options: CrudRequestOptions","returns-10#Returns":"boolean","inherited-from-17#Inherited from":"xTypeOrmCrudService.decidePagination","source-21#Source":"node_modules/@nestjsx/crud/lib/services/crud-service.abstract.d.ts:16","deleteone#deleteOne()":"deleteOne(req, queryOptions?): Promise<void | T>","parameters-11#Parameters":"• req: CrudRequest• queryOptions?: CrudQueryOptionsInterface","returns-11#Returns":"Promise<void | T>","overrides-3#Overrides":"xTypeOrmCrudService.deleteOne","source-22#Source":"packages/nestjs-crud/src/services/typeorm-crud.service.ts:130","dogetmany#doGetMany()":"protected doGetMany(builder, query, options): Promise<GetManyDefaultResponse<T> | T[]>","parameters-12#Parameters":"• builder: SelectQueryBuilder<T>• query: ParsedRequestParams• options: CrudRequestOptions","returns-12#Returns":"Promise<GetManyDefaultResponse<T> | T[]>","inherited-from-18#Inherited from":"xTypeOrmCrudService.doGetMany","source-23#Source":"node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:39","getallowedcolumns#getAllowedColumns()":"protected getAllowedColumns(columns, options): string[]","parameters-13#Parameters":"• columns: string[]• options: QueryOptions","returns-13#Returns":"string[]","inherited-from-19#Inherited from":"xTypeOrmCrudService.getAllowedColumns","source-24#Source":"node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:43","getentitycolumns#getEntityColumns()":"protected getEntityColumns(entityMetadata): object","parameters-14#Parameters":"• entityMetadata: EntityMetadata","returns-14#Returns":"object","columns#columns":"columns: string[]","primarycolumns#primaryColumns":"primaryColumns: string[]","inherited-from-20#Inherited from":"xTypeOrmCrudService.getEntityColumns","source-25#Source":"node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:44","getfieldwithalias#getFieldWithAlias()":"protected getFieldWithAlias(field, sort?): string","parameters-15#Parameters":"• field: string• sort?: boolean","returns-15#Returns":"string","inherited-from-21#Inherited from":"xTypeOrmCrudService.getFieldWithAlias","source-26#Source":"node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:58","getmany#getMany()":"getMany(req, queryOptions?): Promise<T[] | CrudResultPaginatedInterface<T>>","parameters-16#Parameters":"• req: CrudRequest• queryOptions?: CrudQueryOptionsInterface","returns-16#Returns":"Promise<T[] | CrudResultPaginatedInterface<T>>","overrides-4#Overrides":"xTypeOrmCrudService.getMany","source-27#Source":"packages/nestjs-crud/src/services/typeorm-crud.service.ts:26","getone#getOne()":"getOne(req, queryOptions?): Promise<T>","parameters-17#Parameters":"• req: CrudRequest• queryOptions?: CrudQueryOptionsInterface","returns-17#Returns":"Promise<T>","overrides-5#Overrides":"xTypeOrmCrudService.getOne","source-28#Source":"packages/nestjs-crud/src/services/typeorm-crud.service.ts:56","getoneorfail#getOneOrFail()":"protected getOneOrFail(req, shallow?, withDeleted?): Promise<T>","parameters-18#Parameters":"• req: CrudRequest• shallow?: boolean• withDeleted?: boolean","returns-18#Returns":"Promise<T>","inherited-from-22#Inherited from":"xTypeOrmCrudService.getOneOrFail","source-29#Source":"node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:41","getparamfilters#getParamFilters()":"getParamFilters(parsed): ObjectLiteral","parameters-19#Parameters":"• parsed: ParsedRequestParams","returns-19#Returns":"ObjectLiteral","inherited-from-23#Inherited from":"xTypeOrmCrudService.getParamFilters","source-30#Source":"node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:37","getprimaryparams#getPrimaryParams()":"getPrimaryParams(options): string[]","parameters-20#Parameters":"• options: CrudRequestOptions","returns-20#Returns":"string[]","inherited-from-24#Inherited from":"xTypeOrmCrudService.getPrimaryParams","source-31#Source":"node_modules/@nestjsx/crud/lib/services/crud-service.abstract.d.ts:19","getrelationmetadata#getRelationMetadata()":"protected getRelationMetadata(field, options): IAllowedRelation","parameters-21#Parameters":"• field: string• options: JoinOption","returns-21#Returns":"IAllowedRelation","inherited-from-25#Inherited from":"xTypeOrmCrudService.getRelationMetadata","source-32#Source":"node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:48","getselect#getSelect()":"protected getSelect(query, options): string[]","parameters-22#Parameters":"• query: ParsedRequestParams• options: QueryOptions","returns-22#Returns":"string[]","overrides-6#Overrides":"xTypeOrmCrudService.getSelect","source-33#Source":"packages/nestjs-crud/src/services/typeorm-crud.service.ts:210","getskip#getSkip()":"getSkip(query, take): null | number","parameters-23#Parameters":"• query: ParsedRequestParams• take: number","returns-23#Returns":"null | number","inherited-from-26#Inherited from":"xTypeOrmCrudService.getSkip","source-34#Source":"node_modules/@nestjsx/crud/lib/services/crud-service.abstract.d.ts:18","getsort#getSort()":"protected getSort(query, options): ObjectLiteral","parameters-24#Parameters":"• query: ParsedRequestParams• options: QueryOptions","returns-24#Returns":"ObjectLiteral","inherited-from-27#Inherited from":"xTypeOrmCrudService.getSort","source-35#Source":"node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:57","gettake#getTake()":"getTake(query, options): null | number","parameters-25#Parameters":"• query: ParsedRequestParams• options: QueryOptions","returns-25#Returns":"null | number","inherited-from-28#Inherited from":"xTypeOrmCrudService.getTake","source-36#Source":"node_modules/@nestjsx/crud/lib/services/crud-service.abstract.d.ts:17","mapoperatorstoquery#mapOperatorsToQuery()":"protected mapOperatorsToQuery(cond, param): object","parameters-26#Parameters":"• cond: QueryFilter• param: any","returns-26#Returns":"object","params#params":"params: ObjectLiteral","str#str":"str: string","inherited-from-29#Inherited from":"xTypeOrmCrudService.mapOperatorsToQuery","source-37#Source":"node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:60","mapsort#mapSort()":"protected mapSort(sort): ObjectLiteral","parameters-27#Parameters":"• sort: QuerySort[]","returns-27#Returns":"ObjectLiteral","inherited-from-30#Inherited from":"xTypeOrmCrudService.mapSort","source-38#Source":"node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:59","oninitmapentitycolumns#onInitMapEntityColumns()":"protected onInitMapEntityColumns(): void","returns-28#Returns":"void","inherited-from-31#Inherited from":"xTypeOrmCrudService.onInitMapEntityColumns","source-39#Source":"node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:40","prepareentitybeforesave#prepareEntityBeforeSave()":"protected prepareEntityBeforeSave(dto, parsed): T","parameters-28#Parameters":"• dto: DeepPartial<T>• parsed: ParsedRequestParams","returns-29#Returns":"T","inherited-from-32#Inherited from":"xTypeOrmCrudService.prepareEntityBeforeSave","source-40#Source":"node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:42","recoverone#recoverOne()":"recoverOne(req, queryOptions?): Promise<T>","parameters-29#Parameters":"• req: CrudRequest• queryOptions?: CrudQueryOptionsInterface","returns-30#Returns":"Promise<T>","overrides-7#Overrides":"xTypeOrmCrudService.recoverOne","source-41#Source":"packages/nestjs-crud/src/services/typeorm-crud.service.ts:144","replaceone#replaceOne()":"replaceOne(req, dto, queryOptions?): Promise<T>","parameters-30#Parameters":"• req: CrudRequest• dto: DeepPartial<T>• queryOptions?: CrudQueryOptionsInterface","returns-31#Returns":"Promise<T>","overrides-8#Overrides":"xTypeOrmCrudService.replaceOne","source-42#Source":"packages/nestjs-crud/src/services/typeorm-crud.service.ts:115","setandwhere#setAndWhere()":"protected setAndWhere(cond, i, builder): void","parameters-31#Parameters":"• cond: QueryFilter• i: any• builder: SelectQueryBuilder<T> | WhereExpression","returns-32#Returns":"void","inherited-from-33#Inherited from":"xTypeOrmCrudService.setAndWhere","source-43#Source":"node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:50","setjoin#setJoin()":"protected setJoin(cond, joinOptions, builder): boolean","parameters-32#Parameters":"• cond: QueryJoin• joinOptions: JoinOptions• builder: SelectQueryBuilder<T>","returns-33#Returns":"boolean","overrides-9#Overrides":"xTypeOrmCrudService.setJoin","source-44#Source":"packages/nestjs-crud/src/services/typeorm-crud.service.ts:162","setorwhere#setOrWhere()":"protected setOrWhere(cond, i, builder): void","parameters-33#Parameters":"• cond: QueryFilter• i: any• builder: SelectQueryBuilder<T> | WhereExpression","returns-34#Returns":"void","inherited-from-34#Inherited from":"xTypeOrmCrudService.setOrWhere","source-45#Source":"node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:51","setsearchcondition#setSearchCondition()":"protected setSearchCondition(builder, search, condition?): void","parameters-34#Parameters":"• builder: SelectQueryBuilder<T>• search: SCondition• condition?: SConditionKey","returns-35#Returns":"void","inherited-from-35#Inherited from":"xTypeOrmCrudService.setSearchCondition","source-46#Source":"node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:52","setsearchfieldobjectcondition#setSearchFieldObjectCondition()":"protected setSearchFieldObjectCondition(builder, condition, field, object): void","parameters-35#Parameters":"• builder: SelectQueryBuilder<T>• condition: SConditionKey• field: string• object: any","returns-36#Returns":"void","inherited-from-36#Inherited from":"xTypeOrmCrudService.setSearchFieldObjectCondition","source-47#Source":"node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:55","throwbadrequestexception#throwBadRequestException()":"throwBadRequestException(msg?): BadRequestException","parameters-36#Parameters":"• msg?: any","returns-37#Returns":"BadRequestException","inherited-from-37#Inherited from":"xTypeOrmCrudService.throwBadRequestException","source-48#Source":"node_modules/@nestjsx/crud/lib/services/crud-service.abstract.d.ts:13","thrownotfoundexception#throwNotFoundException()":"throwNotFoundException(name): NotFoundException","parameters-37#Parameters":"• name: string","returns-38#Returns":"NotFoundException","inherited-from-38#Inherited from":"xTypeOrmCrudService.throwNotFoundException","source-49#Source":"node_modules/@nestjsx/crud/lib/services/crud-service.abstract.d.ts:14","transaction#transaction()":"transaction(options?): TransactionProxy","parameters-38#Parameters":"• options?: SafeTransactionOptionsInterface","returns-39#Returns":"TransactionProxy","source-50#Source":"packages/nestjs-crud/src/services/typeorm-crud.service.ts:158","updateone#updateOne()":"updateOne(req, dto, queryOptions?): Promise<T>","parameters-39#Parameters":"• req: CrudRequest• dto: DeepPartial<T>• queryOptions?: CrudQueryOptionsInterface","returns-40#Returns":"Promise<T>","overrides-10#Overrides":"xTypeOrmCrudService.updateOne","source-51#Source":"packages/nestjs-crud/src/services/typeorm-crud.service.ts:100"}},"/reference/rockets/nestjs-crud/functions/CrudAction":{"title":"Function: CrudAction()","data":{"":"@concepta/nestjs-crud • DocsPackages Example / @concepta/nestjs-crud / CrudAction\nCrudAction(action): <TFunction, Y>(target, propertyKey?, descriptor?) => void\nCRUD action route decorator","parameters#Parameters":"• action: CrudActions","returns#Returns":"Function","type-parameters#Type parameters":"• TFunction extends Function• Y","parameters-1#Parameters":"• target: object | TFunction• propertyKey?: string | symbol• descriptor?: TypedPropertyDescriptor<Y>","returns-1#Returns":"void","source#Source":"packages/nestjs-crud/src/decorators/routes/crud-action.decorator.ts:9"}},"/reference/rockets/nestjs-crud/functions/CrudAllow":{"title":"Function: CrudAllow()","data":{"":"@concepta/nestjs-crud • DocsPackages Example / @concepta/nestjs-crud / CrudAllow\nCrudAllow(fields): CustomDecorator<string>\nCRUD allow route decorator.Set the CRUD allow query option.","parameters#Parameters":"• fields: undefined | QueryFields","returns#Returns":"CustomDecorator<string>","source#Source":"packages/nestjs-crud/src/decorators/routes/crud-allow.decorator.ts:10"}},"/reference/rockets/nestjs-crud/functions/CrudAlwaysPaginate":{"title":"Function: CrudAlwaysPaginate()","data":{"":"@concepta/nestjs-crud • DocsPackages Example / @concepta/nestjs-crud / CrudAlwaysPaginate\nCrudAlwaysPaginate(alwaysPaginate): CustomDecorator<string>\nCRUD always paginate route decorator.Set the CRUD always paginate query option.","parameters#Parameters":"• alwaysPaginate: undefined | boolean","returns#Returns":"CustomDecorator<string>","source#Source":"packages/nestjs-crud/src/decorators/routes/crud-always-paginate.decorator.ts:10"}},"/reference/rockets/nestjs-crud/functions/CrudBody":{"title":"Function: CrudBody()","data":{"":"@concepta/nestjs-crud • DocsPackages Example / @concepta/nestjs-crud / CrudBody\nCrudBody(options?): ParameterDecorator\n@CrudBody() parameter decorator","parameters#Parameters":"• options?: CrudBodyOptionsInterface","returns#Returns":"ParameterDecorator","source#Source":"packages/nestjs-crud/src/decorators/params/crud-body.decorator.ts:11"}},"/reference/rockets/nestjs-crud/functions/CrudCache":{"title":"Function: CrudCache()","data":{"":"@concepta/nestjs-crud • DocsPackages Example / @concepta/nestjs-crud / CrudCache\nCrudCache(cache): CustomDecorator<string>\nCRUD cache route decorator.Set the CRUD cache query option.","parameters#Parameters":"• cache: undefined | number | false","returns#Returns":"CustomDecorator<string>","source#Source":"packages/nestjs-crud/src/decorators/routes/crud-cache.decorator.ts:10"}},"/reference/rockets/nestjs-crud/functions/CrudController":{"title":"Function: CrudController()","data":{"":"@concepta/nestjs-crud • DocsPackages Example / @concepta/nestjs-crud / CrudController\nCrudController(options): <TFunction, Y>(target, propertyKey?, descriptor?) => void\nCRUD controller decoratorThis decorator is a helper for calling the most common controller level decorators.","parameters#Parameters":"• options: CrudControllerOptionsInterface","returns#Returns":"Function","type-parameters#Type parameters":"• TFunction extends Function• Y","parameters-1#Parameters":"• target: object | TFunction• propertyKey?: string | symbol• descriptor?: TypedPropertyDescriptor<Y>","returns-1#Returns":"void","source#Source":"packages/nestjs-crud/src/decorators/controller/crud-controller.decorator.ts:20"}},"/reference/rockets/nestjs-crud/functions/CrudCreateMany":{"title":"Function: CrudCreateMany()","data":{"":"@concepta/nestjs-crud • DocsPackages Example / @concepta/nestjs-crud / CrudCreateMany\nCrudCreateMany(options): <TFunction, Y>(target, propertyKey?, descriptor?) => void\nCRUD Create Many route decorator","parameters#Parameters":"• options: CrudCreateManyOptionsInterface= {}","returns#Returns":"Function","type-parameters#Type parameters":"• TFunction extends Function• Y","parameters-1#Parameters":"• target: object | TFunction• propertyKey?: string | symbol• descriptor?: TypedPropertyDescriptor<Y>","returns-1#Returns":"void","source#Source":"packages/nestjs-crud/src/decorators/actions/crud-create-many.decorator.ts:14"}},"/reference/rockets/nestjs-crud/functions/CrudCreateOne":{"title":"Function: CrudCreateOne()","data":{"":"@concepta/nestjs-crud • DocsPackages Example / @concepta/nestjs-crud / CrudCreateOne\nCrudCreateOne(options): <TFunction, Y>(target, propertyKey?, descriptor?) => void\nCRUD Create One route decorator","parameters#Parameters":"• options: CrudCreateOneOptionsInterface= {}","returns#Returns":"Function","type-parameters#Type parameters":"• TFunction extends Function• Y","parameters-1#Parameters":"• target: object | TFunction• propertyKey?: string | symbol• descriptor?: TypedPropertyDescriptor<Y>","returns-1#Returns":"void","source#Source":"packages/nestjs-crud/src/decorators/actions/crud-create-one.decorator.ts:14"}},"/reference/rockets/nestjs-crud/functions/CrudDeleteOne":{"title":"Function: CrudDeleteOne()","data":{"":"@concepta/nestjs-crud • DocsPackages Example / @concepta/nestjs-crud / CrudDeleteOne\nCrudDeleteOne(options): <TFunction, Y>(target, propertyKey?, descriptor?) => void\nCRUD Delete One route decorator","parameters#Parameters":"• options: CrudDeleteOneOptionsInterface= {}","returns#Returns":"Function","type-parameters#Type parameters":"• TFunction extends Function• Y","parameters-1#Parameters":"• target: object | TFunction• propertyKey?: string | symbol• descriptor?: TypedPropertyDescriptor<Y>","returns-1#Returns":"void","source#Source":"packages/nestjs-crud/src/decorators/actions/crud-delete-one.decorator.ts:18"}},"/reference/rockets/nestjs-crud/functions/CrudExclude":{"title":"Function: CrudExclude()","data":{"":"@concepta/nestjs-crud • DocsPackages Example / @concepta/nestjs-crud / CrudExclude\nCrudExclude(fields): CustomDecorator<string>\nCRUD exclude route decorator.Set the CRUD exclude query option.","parameters#Parameters":"• fields: undefined | QueryFields","returns#Returns":"CustomDecorator<string>","source#Source":"packages/nestjs-crud/src/decorators/routes/crud-exclude.decorator.ts:10"}},"/reference/rockets/nestjs-crud/functions/CrudJoin":{"title":"Function: CrudJoin()","data":{"":"@concepta/nestjs-crud • DocsPackages Example / @concepta/nestjs-crud / CrudJoin\nCrudJoin(joins): CustomDecorator<string>\nCRUD join route decorator.Set the CRUD join query option.","parameters#Parameters":"• joins: undefined | JoinOptions","returns#Returns":"CustomDecorator<string>","source#Source":"packages/nestjs-crud/src/decorators/routes/crud-join.decorator.ts:10"}},"/reference/rockets/nestjs-crud/functions/CrudFilter":{"title":"Function: CrudFilter()","data":{"":"@concepta/nestjs-crud • DocsPackages Example / @concepta/nestjs-crud / CrudFilter\nCrudFilter(filters): CustomDecorator<string>\nCRUD filter route decorator.Set the CRUD filter query option.","parameters#Parameters":"• filters: undefined | SCondition","returns#Returns":"CustomDecorator<string>","source#Source":"packages/nestjs-crud/src/decorators/routes/crud-filter.decorator.ts:10"}},"/reference/rockets/nestjs-crud/functions/CrudLimit":{"title":"Function: CrudLimit()","data":{"":"@concepta/nestjs-crud • DocsPackages Example / @concepta/nestjs-crud / CrudLimit\nCrudLimit(limit): CustomDecorator<string>\nCRUD limit route decorator.Set the CRUD limit query option.","parameters#Parameters":"• limit: undefined | number","returns#Returns":"CustomDecorator<string>","source#Source":"packages/nestjs-crud/src/decorators/routes/crud-limit.decorator.ts:10"}},"/reference/rockets/nestjs-crud/functions/CrudMaxLimit":{"title":"Function: CrudMaxLimit()","data":{"":"@concepta/nestjs-crud • DocsPackages Example / @concepta/nestjs-crud / CrudMaxLimit\nCrudMaxLimit(maxLimit): CustomDecorator<string>\nCRUD max limit route decorator.Set the CRUD max limit query option.","parameters#Parameters":"• maxLimit: undefined | number","returns#Returns":"CustomDecorator<string>","source#Source":"packages/nestjs-crud/src/decorators/routes/crud-max-limit.decorator.ts:10"}},"/reference/rockets/nestjs-crud/functions/CrudModel":{"title":"Function: CrudModel()","data":{"":"@concepta/nestjs-crud • DocsPackages Example / @concepta/nestjs-crud / CrudModel\nCrudModel(options): CustomDecorator<string>\nCRUD Model route decorator.Set the CRUD model, or override the model set by the @CrudController decorator.","parameters#Parameters":"• options: CrudModelOptionsInterface","returns#Returns":"CustomDecorator<string>","source#Source":"packages/nestjs-crud/src/decorators/routes/crud-model.decorator.ts:10"}},"/reference/rockets/nestjs-crud/functions/CrudParams":{"title":"Function: CrudParams()","data":{"":"@concepta/nestjs-crud • DocsPackages Example / @concepta/nestjs-crud / CrudParams\nCrudParams(params): CustomDecorator<string>\nCRUD Params route decorator.Set the CRUD params.","parameters#Parameters":"• params: ParamsOptions","returns#Returns":"CustomDecorator<string>","source#Source":"packages/nestjs-crud/src/decorators/routes/crud-params.decorator.ts:10"}},"/reference/rockets/nestjs-crud/functions/CrudReadAll":{"title":"Function: CrudReadAll()","data":{"":"@concepta/nestjs-crud • DocsPackages Example / @concepta/nestjs-crud / CrudReadAll\nCrudReadAll(options): <TFunction, Y>(target, propertyKey?, descriptor?) => void\nCRUD Read All route decorator","parameters#Parameters":"• options: CrudReadAllOptionsInterface= {}","returns#Returns":"Function","type-parameters#Type parameters":"• TFunction extends Function• Y","parameters-1#Parameters":"• target: object | TFunction• propertyKey?: string | symbol• descriptor?: TypedPropertyDescriptor<Y>","returns-1#Returns":"void","source#Source":"packages/nestjs-crud/src/decorators/actions/crud-read-all.decorator.ts:14"}},"/reference/rockets/nestjs-crud/functions/CrudReadMany":{"title":"Function: CrudReadMany()","data":{"":"@concepta/nestjs-crud • DocsPackages Example / @concepta/nestjs-crud / CrudReadMany\nCrudReadMany(...args): <TFunction, Y>(target, propertyKey?, descriptor?) => void\nCRUD Read Many route decorator (alias for Read All)","parameters#Parameters":"• ...args: [CrudReadAllOptionsInterface]","returns#Returns":"Function","type-parameters#Type parameters":"• TFunction extends Function• Y","parameters-1#Parameters":"• target: object | TFunction• propertyKey?: string | symbol• descriptor?: TypedPropertyDescriptor<Y>","returns-1#Returns":"void","source#Source":"packages/nestjs-crud/src/decorators/actions/crud-read-many.decorator.ts:6"}},"/reference/rockets/nestjs-crud/functions/CrudRecoverOne":{"title":"Function: CrudRecoverOne()","data":{"":"@concepta/nestjs-crud • DocsPackages Example / @concepta/nestjs-crud / CrudRecoverOne\nCrudRecoverOne(options): <TFunction, Y>(target, propertyKey?, descriptor?) => void\nCRUD Recover One route decorator","parameters#Parameters":"• options: CrudRecoverOneOptionsInterface= {}","returns#Returns":"Function","type-parameters#Type parameters":"• TFunction extends Function• Y","parameters-1#Parameters":"• target: object | TFunction• propertyKey?: string | symbol• descriptor?: TypedPropertyDescriptor<Y>","returns-1#Returns":"void","source#Source":"packages/nestjs-crud/src/decorators/actions/crud-recover-one.decorator.ts:18"}},"/reference/rockets/nestjs-crud/functions/CrudReadOne":{"title":"Function: CrudReadOne()","data":{"":"@concepta/nestjs-crud • DocsPackages Example / @concepta/nestjs-crud / CrudReadOne\nCrudReadOne(options): <TFunction, Y>(target, propertyKey?, descriptor?) => void\nCRUD Read One route decorator","parameters#Parameters":"• options: CrudReadOneOptionsInterface= {}","returns#Returns":"Function","type-parameters#Type parameters":"• TFunction extends Function• Y","parameters-1#Parameters":"• target: object | TFunction• propertyKey?: string | symbol• descriptor?: TypedPropertyDescriptor<Y>","returns-1#Returns":"void","source#Source":"packages/nestjs-crud/src/decorators/actions/crud-read-one.decorator.ts:16"}},"/reference/rockets/nestjs-crud/functions/CrudReplaceOne":{"title":"Function: CrudReplaceOne()","data":{"":"@concepta/nestjs-crud • DocsPackages Example / @concepta/nestjs-crud / CrudReplaceOne\nCrudReplaceOne(options): <TFunction, Y>(target, propertyKey?, descriptor?) => void\nCRUD Replace One route decorator","parameters#Parameters":"• options: CrudReplaceOneOptionsInterface= {}","returns#Returns":"Function","type-parameters#Type parameters":"• TFunction extends Function• Y","parameters-1#Parameters":"• target: object | TFunction• propertyKey?: string | symbol• descriptor?: TypedPropertyDescriptor<Y>","returns-1#Returns":"void","source#Source":"packages/nestjs-crud/src/decorators/actions/crud-replace-one.decorator.ts:18"}},"/reference/rockets/nestjs-crud/functions/CrudRequest":{"title":"Function: CrudRequest()","data":{"":"@concepta/nestjs-crud • DocsPackages Example / @concepta/nestjs-crud / CrudRequest\nCrudRequest(...dataOrPipes): ParameterDecorator\n@CrudRequest() parameter decorator","parameters#Parameters":"• ...dataOrPipes: (PipeTransform<any, any> | Type<PipeTransform<any, any>> | CrudRequestInterface)[]","returns#Returns":"ParameterDecorator","source#Source":"packages/nestjs-crud/src/decorators/params/crud-request.decorator.ts:8"}},"/reference/rockets/nestjs-crud/functions/CrudSerialize":{"title":"Function: CrudSerialize()","data":{"":"@concepta/nestjs-crud • DocsPackages Example / @concepta/nestjs-crud / CrudSerialize\nCrudSerialize(options?): CustomDecorator<string>\nCRUD serialize route decorator","parameters#Parameters":"• options?: CrudSerializationOptionsInterface","returns#Returns":"CustomDecorator<string>","source#Source":"packages/nestjs-crud/src/decorators/routes/crud-serialize.decorator.ts:8"}},"/reference/rockets/nestjs-crud/functions/CrudSoftDelete":{"title":"Function: CrudSoftDelete()","data":{"":"@concepta/nestjs-crud • DocsPackages Example / @concepta/nestjs-crud / CrudSoftDelete\nCrudSoftDelete(softDelete): CustomDecorator<string>\nCRUD soft delete route decorator.Set the CRUD soft delete query option.","parameters#Parameters":"• softDelete: undefined | boolean","returns#Returns":"CustomDecorator<string>","source#Source":"packages/nestjs-crud/src/decorators/routes/crud-soft-delete.decorator.ts:10"}},"/reference/rockets/nestjs-crud/functions/CrudUpdateOne":{"title":"Function: CrudUpdateOne()","data":{"":"@concepta/nestjs-crud • DocsPackages Example / @concepta/nestjs-crud / CrudUpdateOne\nCrudUpdateOne(options): <TFunction, Y>(target, propertyKey?, descriptor?) => void\nCRUD Update One route decorator","parameters#Parameters":"• options: CrudUpdateOneOptionsInterface= {}","returns#Returns":"Function","type-parameters#Type parameters":"• TFunction extends Function• Y","parameters-1#Parameters":"• target: object | TFunction• propertyKey?: string | symbol• descriptor?: TypedPropertyDescriptor<Y>","returns-1#Returns":"void","source#Source":"packages/nestjs-crud/src/decorators/actions/crud-update-one.decorator.ts:18"}},"/reference/rockets/nestjs-crud/functions/CrudSort":{"title":"Function: CrudSort()","data":{"":"@concepta/nestjs-crud • DocsPackages Example / @concepta/nestjs-crud / CrudSort\nCrudSort(sort): CustomDecorator<string>\nCRUD sort route decorator.Set the CRUD sort query option.","parameters#Parameters":"• sort: undefined | QuerySort[]","returns#Returns":"CustomDecorator<string>","source#Source":"packages/nestjs-crud/src/decorators/routes/crud-sort.decorator.ts:10"}},"/reference/rockets/nestjs-crud/globals":{"title":"@concepta/nestjs-crud","data":{"":"@concepta/nestjs-crud • DocsPackages Example / @concepta/nestjs-crud","classes#Classes":"CrudCreateManyDto\nCrudModule\nCrudQueryHelper\nCrudResponsePaginatedDto\nTypeOrmCrudService","interfaces#Interfaces":"CrudControllerInterface\nCrudCreateManyInterface\nCrudRequestInterface\nCrudResponsePaginatedInterface","functions#Functions":"CrudAction\nCrudAllow\nCrudAlwaysPaginate\nCrudBody\nCrudCache\nCrudController\nCrudCreateMany\nCrudCreateOne\nCrudDeleteOne\nCrudExclude\nCrudFilter\nCrudJoin\nCrudLimit\nCrudMaxLimit\nCrudModel\nCrudParams\nCrudReadAll\nCrudReadMany\nCrudReadOne\nCrudRecoverOne\nCrudReplaceOne\nCrudRequest\nCrudSerialize\nCrudSoftDelete\nCrudSort\nCrudUpdateOne\nCrudValidate"}},"/reference/rockets/nestjs-crud/functions/CrudValidate":{"title":"Function: CrudValidate()","data":{"":"@concepta/nestjs-crud • DocsPackages Example / @concepta/nestjs-crud / CrudValidate\nCrudValidate(options?): CustomDecorator<string>\nCrud validate options decorator.Set the fallback ValidationPipe options for all method\nparameters called with the CrudBody decorator.If this decorator is used on a controller, it will use the given options to\nevery controller method's Crud param that does NOT have validations explicitly set.If this decorator is used on a method, it will use the given options for\nevery Crud parameter on the method that does NOT have validations explicitly set.","parameters#Parameters":"• options?: false | ValidationPipeOptionscrud validation options","returns#Returns":"CustomDecorator<string>","source#Source":"packages/nestjs-crud/src/decorators/routes/crud-validate.decorator.ts:19"}},"/reference/rockets/nestjs-crud/interfaces/CrudCreateManyInterface":{"title":"Interface: CrudCreateManyInterface<T>","data":{"":"@concepta/nestjs-crud • DocsPackages Example / @concepta/nestjs-crud / CrudCreateManyInterface","extends#Extends":"CreateManyDto<T>","type-parameters#Type parameters":"• T = unknown","properties#Properties":"","bulk#bulk":"bulk: T[]","overrides#Overrides":"CreateManyDto.bulk","source#Source":"packages/nestjs-crud/src/interfaces/crud-create-many.interface.ts:4"}},"/reference/rockets/nestjs-crud/interfaces/CrudControllerInterface":{"title":"Interface: CrudControllerInterface<Entity, Creatable, Updatable, Replaceable>","data":{"":"@concepta/nestjs-crud • DocsPackages Example / @concepta/nestjs-crud / CrudControllerInterface","type-parameters#Type parameters":"• Entity• Creatable extends DeepPartial<Entity>• Updatable extends DeepPartial<Entity>• Replaceable extends Creatable = Creatable","properties#Properties":"","createmany#createMany()?":"optional createMany: (crudRequest, dto, ...rest) => Promise<Entity[]>","parameters#Parameters":"• crudRequest: CrudRequestInterface• dto: CreateManyDto<Creatable>• ...rest: AdditionalCrudMethodArgs","returns#Returns":"Promise<Entity[]>","source#Source":"packages/nestjs-crud/src/interfaces/crud-controller.interface.ts:29","createone#createOne()?":"optional createOne: (crudRequest, dto, ...rest) => Promise<Entity>","parameters-1#Parameters":"• crudRequest: CrudRequestInterface• dto: Creatable• ...rest: AdditionalCrudMethodArgs","returns-1#Returns":"Promise<Entity>","source-1#Source":"packages/nestjs-crud/src/interfaces/crud-controller.interface.ts:23","deleteone#deleteOne()?":"optional deleteOne: (crudRequest, ...rest) => Promise<void | Entity>","parameters-2#Parameters":"• crudRequest: CrudRequestInterface• ...rest: AdditionalCrudMethodArgs","returns-2#Returns":"Promise<void | Entity>","source-2#Source":"packages/nestjs-crud/src/interfaces/crud-controller.interface.ts:47","getmany#getMany()?":"optional getMany: (crudRequest, ...rest) => Promise<CrudResponsePaginatedInterface<Entity> | Entity[]>","parameters-3#Parameters":"• crudRequest: CrudRequestInterface• ...rest: AdditionalCrudMethodArgs","returns-3#Returns":"Promise<CrudResponsePaginatedInterface<Entity> | Entity[]>","source-3#Source":"packages/nestjs-crud/src/interfaces/crud-controller.interface.ts:13","getone#getOne()?":"optional getOne: (crudRequest, ...rest) => Promise<Entity>","parameters-4#Parameters":"• crudRequest: CrudRequestInterface• ...rest: AdditionalCrudMethodArgs","returns-4#Returns":"Promise<Entity>","source-4#Source":"packages/nestjs-crud/src/interfaces/crud-controller.interface.ts:18","recoverone#recoverOne()?":"optional recoverOne: (crudRequest, ...rest) => Promise<Entity>","parameters-5#Parameters":"• crudRequest: CrudRequestInterface• ...rest: AdditionalCrudMethodArgs","returns-5#Returns":"Promise<Entity>","source-5#Source":"packages/nestjs-crud/src/interfaces/crud-controller.interface.ts:52","replaceone#replaceOne()?":"optional replaceOne: (crudRequest, dto, ...rest) => Promise<Entity>","parameters-6#Parameters":"• crudRequest: CrudRequestInterface• dto: Replaceable• ...rest: AdditionalCrudMethodArgs","returns-6#Returns":"Promise<Entity>","source-6#Source":"packages/nestjs-crud/src/interfaces/crud-controller.interface.ts:41","updateone#updateOne()?":"optional updateOne: (crudRequest, dto, ...rest) => Promise<Entity>","parameters-7#Parameters":"• crudRequest: CrudRequestInterface• dto: Updatable• ...rest: AdditionalCrudMethodArgs","returns-7#Returns":"Promise<Entity>","source-7#Source":"packages/nestjs-crud/src/interfaces/crud-controller.interface.ts:35"}},"/reference/rockets/nestjs-crud/interfaces/CrudResponsePaginatedInterface":{"title":"Interface: CrudResponsePaginatedInterface<T>","data":{"":"@concepta/nestjs-crud • DocsPackages Example / @concepta/nestjs-crud / CrudResponsePaginatedInterface","extends#Extends":"GetManyDefaultResponse<T>","type-parameters#Type parameters":"• T = unknown","properties#Properties":"","count#count":"count: number","inherited-from#Inherited from":"GetManyDefaultResponse.count","source#Source":"node_modules/@nestjsx/crud/lib/interfaces/get-many-default-response.interface.d.ts:3","data#data":"data: T[]","inherited-from-1#Inherited from":"GetManyDefaultResponse.data","source-1#Source":"node_modules/@nestjsx/crud/lib/interfaces/get-many-default-response.interface.d.ts:2","page#page":"page: number","inherited-from-2#Inherited from":"GetManyDefaultResponse.page","source-2#Source":"node_modules/@nestjsx/crud/lib/interfaces/get-many-default-response.interface.d.ts:5","pagecount#pageCount":"pageCount: number","inherited-from-3#Inherited from":"GetManyDefaultResponse.pageCount","source-3#Source":"node_modules/@nestjsx/crud/lib/interfaces/get-many-default-response.interface.d.ts:6","total#total":"total: number","inherited-from-4#Inherited from":"GetManyDefaultResponse.total","source-4#Source":"node_modules/@nestjsx/crud/lib/interfaces/get-many-default-response.interface.d.ts:4"}},"/reference/rockets/nestjs-crud/interfaces/CrudRequestInterface":{"title":"Interface: CrudRequestInterface","data":{"":"@concepta/nestjs-crud • DocsPackages Example / @concepta/nestjs-crud / CrudRequestInterface","extends#Extends":"CrudRequest","properties#Properties":"","options#options":"options: CrudRequestOptions","inherited-from#Inherited from":"xCrudRequest.options","source#Source":"node_modules/@nestjsx/crud/lib/interfaces/crud-request.interface.d.ts:5","parsed#parsed":"parsed: ParsedRequestParams","inherited-from-1#Inherited from":"xCrudRequest.parsed","source-1#Source":"node_modules/@nestjsx/crud/lib/interfaces/crud-request.interface.d.ts:4"}},"/reference/rockets/nestjs-email/README":{"title":"Rockets NestJS Email","data":{"":"@concepta/nestjs-email • DocsPackages Example / @concepta/nestjs-emailEmail deliver module that supports the popular @nestjs-modules/mailer module.","project#Project":"","installation#Installation":"yarn add @concepta/nestjs-emailyarn add @nestjs-modules/mailer handlebars"}},"/reference/rockets/nestjs-email/classes/EmailModule":{"title":"Class: EmailModule","data":{"":"@concepta/nestjs-email • DocsPackages Example / @concepta/nestjs-email / EmailModuleEmail module","extends#Extends":"EmailModuleClass","constructors#Constructors":"","new-emailmodule#new EmailModule()":"new EmailModule(): EmailModule","returns#Returns":"EmailModule","inherited-from#Inherited from":"EmailModuleClass.constructor","source#Source":"node_modules/@nestjs/common/module-utils/interfaces/configurable-module-cls.interface.d.ts:12","methods#Methods":"","forfeature#forFeature()":"static forFeature(options): DynamicModule","parameters#Parameters":"• options: EmailOptions","returns-1#Returns":"DynamicModule","source-1#Source":"packages/nestjs-email/src/email.module.ts:33","forroot#forRoot()":"static forRoot(options): DynamicModule","parameters-1#Parameters":"• options: EmailOptions","returns-2#Returns":"DynamicModule","source-2#Source":"packages/nestjs-email/src/email.module.ts:25","forrootasync#forRootAsync()":"static forRootAsync(options): DynamicModule","parameters-2#Parameters":"• options: EmailAsyncOptions","returns-3#Returns":"DynamicModule","source-3#Source":"packages/nestjs-email/src/email.module.ts:29","register#register()":"static register(options): DynamicModule","parameters-3#Parameters":"• options: EmailOptions","returns-4#Returns":"DynamicModule","overrides#Overrides":"EmailModuleClass.register","source-4#Source":"packages/nestjs-email/src/email.module.ts:17","registerasync#registerAsync()":"static registerAsync(options): DynamicModule","parameters-4#Parameters":"• options: EmailAsyncOptions","returns-5#Returns":"DynamicModule","overrides-1#Overrides":"EmailModuleClass.registerAsync","source-5#Source":"packages/nestjs-email/src/email.module.ts:21"}},"/reference/rockets/nestjs-email/classes/EmailService":{"title":"Class: EmailService","data":{"":"@concepta/nestjs-email • DocsPackages Example / @concepta/nestjs-email / EmailService","implements#Implements":"EmailServiceInterface","constructors#Constructors":"","new-emailservice#new EmailService()":"new EmailService(logger, mailerService): EmailService","parameters#Parameters":"• logger: Logger• mailerService: EmailServiceInterface","returns#Returns":"EmailService","source#Source":"packages/nestjs-email/src/email.service.ts:13","properties#Properties":"","logger#logger":"protected readonly logger: Logger","source-1#Source":"packages/nestjs-email/src/email.service.ts:14","mailerservice#mailerService":"protected readonly mailerService: EmailServiceInterface","source-2#Source":"packages/nestjs-email/src/email.service.ts:16","methods#Methods":"","sendmail#sendMail()":"sendMail(dto): Promise<void>","parameters-1#Parameters":"• dto: EmailSendOptionsInterface","returns-1#Returns":"Promise<void>","implementation-of#Implementation of":"EmailServiceInterface.sendMail","source-3#Source":"packages/nestjs-email/src/email.service.ts:19"}},"/reference/rockets/nestjs-email/globals":{"title":"@concepta/nestjs-email","data":{"":"@concepta/nestjs-email • DocsPackages Example / @concepta/nestjs-email","classes#Classes":"EmailModule\nEmailService","interfaces#Interfaces":"EmailOptionsInterface\nEmailServiceInterface"}},"/reference/rockets/nestjs-email/interfaces/EmailOptionsInterface":{"title":"Interface: EmailOptionsInterface","data":{"":"@concepta/nestjs-email • DocsPackages Example / @concepta/nestjs-email / EmailOptionsInterface","properties#Properties":"","mailerservice#mailerService":"mailerService: EmailServiceInterface","source#Source":"packages/nestjs-email/src/interfaces/email-options.interface.ts:6","settings#settings?":"optional settings: EmailSettingsInterface","source-1#Source":"packages/nestjs-email/src/interfaces/email-options.interface.ts:5"}},"/reference/rockets/nestjs-email/interfaces/EmailServiceInterface":{"title":"Interface: EmailServiceInterface","data":{"":"@concepta/nestjs-email • DocsPackages Example / @concepta/nestjs-email / EmailServiceInterface","extends#Extends":"EmailSendInterface","methods#Methods":"","sendmail#sendMail()":"sendMail(sendMailOptions): Promise<void>","parameters#Parameters":"• sendMailOptions: EmailSendOptionsInterface","returns#Returns":"Promise<void>","inherited-from#Inherited from":"EmailSendInterface.sendMail","source#Source":"packages/ts-common/dist/email/interfaces/email-send.interface.d.ts:3"}},"/reference/rockets/nestjs-event/classes/Event":{"title":"Class: abstract Event<P, R>","data":{"":"@concepta/nestjs-event • DocsPackages Example / @concepta/nestjs-event / EventAbstract event class.To create a custom event, extend the Event class.You must implement one of the EventSyncInterface or EventAsyncInterface\ninterfaces.There are additional abstract classes available which have implemented the\nsync and async event types for your convenience. They are EventSync\nand EventAsync.","example#Example":"// event payload type\ntype MyPayloadType = {id: number, active: boolean};\n// event class\nclass MyEvent extends Event<MyPayloadType>\n  implements EventSyncInterface<MyPayloadType>\n{}\n// create an event\nconst myEvent = new MyEvent({id: 1234, active: true});","extended-by#Extended by":"EventSync\nEventAsync","type-parameters#Type parameters":"• P = undefinedEvent Payload• R = PEvent return payload, defaults to Event Payload","implements#Implements":"EventInterface<P, R>","constructors#Constructors":"","new-event#new Event()":"new Event<P, R>(payload?): Event<P, R>\nConstructor","parameters#Parameters":"• payload?: PPayload to emit when the event is dispatched.","returns#Returns":"Event<P, R>","source#Source":".tmp/repos/rockets/packages/nestjs-event/src/events/event.ts:73","properties#Properties":"","_payload#_payload":"private _payload: P\nThe payload that was passed to the constructor.","source-1#Source":".tmp/repos/rockets/packages/nestjs-event/src/events/event.ts:66","expectsreturnof#expectsReturnOf":"private readonly expectsReturnOf: R\nExpects return of payload","implementation-of#Implementation of":"EventInterface.expectsReturnOf","source-2#Source":".tmp/repos/rockets/packages/nestjs-event/src/events/event.ts:43","accessors#Accessors":"","key#key":"get key(): string\nEvent key.","returns-1#Returns":"stringThe event key string.","source-3#Source":".tmp/repos/rockets/packages/nestjs-event/src/events/event.ts:59","payload#payload":"get payload(): P\nReturns payload that was passed to the Event constructor.","returns-2#Returns":"PThe payload.","source-4#Source":".tmp/repos/rockets/packages/nestjs-event/src/events/event.ts:89","key-1#key":"get static key(): string\nEvent key.","returns-3#Returns":"stringThe event key string.","source-5#Source":".tmp/repos/rockets/packages/nestjs-event/src/events/event.ts:50"}},"/reference/rockets/nestjs-event/README":{"title":"Rockets NestJS Events","data":{"":"@concepta/nestjs-event • DocsPackages Example / @concepta/nestjs-eventAdvanced class based event dispatch/listener module.This module extends/wraps the eventemitter2 module.The goal is to enable a pattern where modules can export re-usable events and listener classes that can be easily consumed by their dependent modules.","project#Project":"","installation#Installation":"yarn add @concepta/nestjs-event","todo#TODO":"Add class/method decorators"}},"/reference/rockets/nestjs-event/classes/EventAsync":{"title":"Class: abstract EventAsync<P, R>","data":{"":"@concepta/nestjs-event • DocsPackages Example / @concepta/nestjs-event / EventAsyncAbstract async event class.To create a custom async event, extend the\nEventAsync class.You can override and customize the [payload]Event#payload getter\nif desired. Please read the documentation for the abstract Event class\nfor the complete documentation.For synchronous events, see the EventSync abstract class.","example#Example":"// event payload type\ntype MyPayloadType = {id: number, active: boolean};\n// event class\nclass MyEvent extends EventAsync<MyPayloadType> {}\n// create an event\nconst myEvent = new MyEvent({id: 1234, active: true});","extends#Extends":"Event<P, Promise<R>>","extended-by#Extended by":"","type-parameters#Type parameters":"• P = undefined• R = P","implements#Implements":"EventAsyncInterface<P, R>","constructors#Constructors":"","new-eventasync#new EventAsync()":"new EventAsync<P, R>(payload?): EventAsync<P, R>\nConstructor","parameters#Parameters":"• payload?: PPayload to emit when the event is dispatched.","returns#Returns":"EventAsync<P, R>","inherited-from#Inherited from":"Event.constructor","source#Source":".tmp/repos/rockets/packages/nestjs-event/src/events/event.ts:73","properties#Properties":"","expectsreturnof#expectsReturnOf":"private readonly expectsReturnOf: Promise<R>\nExpects return of payload","implementation-of#Implementation of":"EventAsyncInterface.expectsReturnOf","inherited-from-1#Inherited from":"Event.expectsReturnOf","source-1#Source":".tmp/repos/rockets/packages/nestjs-event/src/events/event.ts:43","accessors#Accessors":"","key#key":"get key(): string\nEvent key.","returns-1#Returns":"stringThe event key string.","source-2#Source":".tmp/repos/rockets/packages/nestjs-event/src/events/event.ts:59","payload#payload":"get payload(): P\nReturns payload that was passed to the Event constructor.","returns-2#Returns":"PThe payload.","source-3#Source":".tmp/repos/rockets/packages/nestjs-event/src/events/event.ts:89","key-1#key":"get static key(): string\nEvent key.","returns-3#Returns":"stringThe event key string.","source-4#Source":".tmp/repos/rockets/packages/nestjs-event/src/events/event.ts:50"}},"/reference/rockets/nestjs-event/classes/EventDispatchException":{"title":"Class: EventDispatchException<P, R>","data":{"":"@concepta/nestjs-event • DocsPackages Example / @concepta/nestjs-event / EventDispatchExceptionThrown when an error is caught when dispatching an Event.","extends#Extends":"Error","type-parameters#Type parameters":"• P• R","implements#Implements":"ExceptionInterface","constructors#Constructors":"","new-eventdispatchexception#new EventDispatchException()":"new EventDispatchException<P, R>(event, originalError, message): EventDispatchException<P, R>","parameters#Parameters":"• event: EventInterface<P, R>• originalError: unknown• message: string= 'Error while trying to dispatch the event with key %s'","returns#Returns":"EventDispatchException<P, R>","overrides#Overrides":"Error.constructor","source#Source":".tmp/repos/rockets/packages/nestjs-event/src/exceptions/event-dispatch.exception.ts:19","properties#Properties":"","context#context":"context: object\nAdditional context","event#event":"event: EventInterface<P, R>","originalerror#originalError":"originalError: Error","implementation-of#Implementation of":"ExceptionInterface.context","source-1#Source":".tmp/repos/rockets/packages/nestjs-event/src/exceptions/event-dispatch.exception.ts:14","errorcode#errorCode":"errorCode: string = 'EVENT_DISPATCH_ERROR'\nThe error code.","implementation-of-1#Implementation of":"ExceptionInterface.errorCode","source-2#Source":".tmp/repos/rockets/packages/nestjs-event/src/exceptions/event-dispatch.exception.ts:12","message#message":"message: string","implementation-of-2#Implementation of":"ExceptionInterface.message","inherited-from#Inherited from":"Error.message","source-3#Source":"node_modules/typescript/lib/lib.es5.d.ts:1054","name#name":"name: string","implementation-of-3#Implementation of":"ExceptionInterface.name","inherited-from-1#Inherited from":"Error.name","source-4#Source":"node_modules/typescript/lib/lib.es5.d.ts:1053","stack#stack?":"optional stack: string","implementation-of-4#Implementation of":"ExceptionInterface.stack","inherited-from-2#Inherited from":"Error.stack","source-5#Source":"node_modules/typescript/lib/lib.es5.d.ts:1055","preparestacktrace#prepareStackTrace()?":"static optional prepareStackTrace: (err, stackTraces) => any\nOptional override for formatting stack traces","see#See":"https://v8.dev/docs/stack-trace-api#customizing-stack-traces","parameters-1#Parameters":"• err: Error• stackTraces: CallSite[]","returns-1#Returns":"any","inherited-from-3#Inherited from":"Error.prepareStackTrace","source-6#Source":".tmp/repos/rockets/node_modules/@types/node/globals.d.ts:11","stacktracelimit#stackTraceLimit":"static stackTraceLimit: number","inherited-from-4#Inherited from":"Error.stackTraceLimit","source-7#Source":".tmp/repos/rockets/node_modules/@types/node/globals.d.ts:13","methods#Methods":"","capturestacktrace#captureStackTrace()":"static captureStackTrace(targetObject, constructorOpt?): void\nCreate .stack property on a target object","parameters-2#Parameters":"• targetObject: object• constructorOpt?: Function","returns-2#Returns":"void","inherited-from-5#Inherited from":"Error.captureStackTrace","source-8#Source":".tmp/repos/rockets/node_modules/@types/node/globals.d.ts:4"}},"/reference/rockets/nestjs-event/classes/EventDispatchService":{"title":"Class: EventDispatchService","data":{"":"@concepta/nestjs-event • DocsPackages Example / @concepta/nestjs-event / EventDispatchServiceEvent Dispatch ServiceThis service coordinates the dispatching of events to the NestJS EventEmitter module.","constructors#Constructors":"","new-eventdispatchservice#new EventDispatchService()":"new EventDispatchService(eventEmitter): EventDispatchService\nConstructor","parameters#Parameters":"• eventEmitter: EventEmitter2Injected event emitter instance","returns#Returns":"EventDispatchService","source#Source":".tmp/repos/rockets/packages/nestjs-event/src/services/event-dispatch.service.ts:20","properties#Properties":"","eventemitter#eventEmitter":"private eventEmitter: EventEmitter2\nInjected event emitter instance","source-1#Source":".tmp/repos/rockets/packages/nestjs-event/src/services/event-dispatch.service.ts:22","methods#Methods":"","async#async()":"async<E>(event): Promise<EventReturnPayload<E, EventReturnType<E>>[]>\nDispatch an event asynchronously.Asynchronously calls each of the listeners registered for the event,\nin the order they were registered, passing the event arguments to each.\nimport { Injectable } from '@nestjs/common';\nimport { EventDispatchService, EventAsync } from '@concepta/nestjs-events';\n// expected object\nexport type MyPayloadType = {id: number, active: boolean};\n// event class\nexport class MyEvent extends EventAsync<MyPayloadType> {}\n@Injectable()\nclass MyClass {\n  constructor(private eventDispatchService: EventDispatchService) {}\n  // allow any listener to activate object\n  async maybeActivate(myPayloadType: MyPayloadType): MyPayloadType {\n    // event instance\n    const myEvent = new MyEvent({...myPayloadType, active: false});\n    // dispatch the event\n    const allPayloads: MyPayloadType[] =\n      await this.eventDispatchService.async(myEvent);\n    // merge it\n    allPayloads.forEach((payload) => {\n      // did any listener set it to true?\n      if (payload.active) {\n        myPayloadType.active = true;\n      }\n    });\n    // return possibly modified object\n    return myPayloadType;\n  }\n}","type-parameters#Type parameters":"• E","parameters-1#Parameters":"• event: E & EventAsyncInstance<E>The event being dispatched.","returns-1#Returns":"Promise<EventReturnPayload<E, EventReturnType<E>>[]>An array of return payloads, one for each listener that subscribed to the event.","source-2#Source":".tmp/repos/rockets/packages/nestjs-event/src/services/event-dispatch.service.ts:110","sync#sync()":"sync<P>(event): boolean\nDispatch an event synchronously.Synchronously calls each of the listeners registered for the event,\nin the order they were registered, passing the event arguments to each.","example#Example":"import { Injectable } from '@nestjs/common';\nimport { EventDispatchService, EventSync } from '@concepta/nestjs-events';\n// event payload type\nexport type MyPayloadType = {id: number};\n// event class\nexport class MyEvent extends EventSync<MyPayloadType> {}\n@Injectable()\nclass MyClass {\n  constructor(private eventDispatchService: EventDispatchService) {}\n  didSomething() {\n    // event instance\n    const myEvent = new MyEvent({id: 1234});\n    // dispatch the event\n    this.eventDispatchService.sync(myEvent);\n  }\n}","type-parameters-1#Type parameters":"• P","parameters-2#Parameters":"• event: EventSyncInterface<P>The event being dispatched.","returns-2#Returns":"booleanboolean Returns true if the event had listeners, false otherwise.","source-3#Source":".tmp/repos/rockets/packages/nestjs-event/src/services/event-dispatch.service.ts:58"}},"/reference/rockets/nestjs-event/classes/EventListenException":{"title":"Class: EventListenException<E>","data":{"":"@concepta/nestjs-event • DocsPackages Example / @concepta/nestjs-event / EventListenExceptionThrown when an error is caught when listening on an EventListenOn.","extends#Extends":"Error","type-parameters#Type parameters":"• E","implements#Implements":"ExceptionInterface","constructors#Constructors":"","new-eventlistenexception#new EventListenException()":"new EventListenException<E>(listener, originalError, message): EventListenException<E>","parameters#Parameters":"• listener: EventListenOnInterface<E>• originalError: unknown• message: string= 'Error while trying to listen on an event'","returns#Returns":"EventListenException<E>","overrides#Overrides":"Error.constructor","source#Source":".tmp/repos/rockets/packages/nestjs-event/src/exceptions/event-listen.exception.ts:18","properties#Properties":"","context#context":"context: object\nAdditional context","listener#listener":"listener: EventListenOnInterface<E>","originalerror#originalError":"originalError: Error","implementation-of#Implementation of":"ExceptionInterface.context","source-1#Source":".tmp/repos/rockets/packages/nestjs-event/src/exceptions/event-listen.exception.ts:13","errorcode#errorCode":"errorCode: string = 'EVENT_LISTEN_ERROR'\nThe error code.","implementation-of-1#Implementation of":"ExceptionInterface.errorCode","source-2#Source":".tmp/repos/rockets/packages/nestjs-event/src/exceptions/event-listen.exception.ts:11","message#message":"message: string","implementation-of-2#Implementation of":"ExceptionInterface.message","inherited-from#Inherited from":"Error.message","source-3#Source":"node_modules/typescript/lib/lib.es5.d.ts:1054","name#name":"name: string","implementation-of-3#Implementation of":"ExceptionInterface.name","inherited-from-1#Inherited from":"Error.name","source-4#Source":"node_modules/typescript/lib/lib.es5.d.ts:1053","stack#stack?":"optional stack: string","implementation-of-4#Implementation of":"ExceptionInterface.stack","inherited-from-2#Inherited from":"Error.stack","source-5#Source":"node_modules/typescript/lib/lib.es5.d.ts:1055","preparestacktrace#prepareStackTrace()?":"static optional prepareStackTrace: (err, stackTraces) => any\nOptional override for formatting stack traces","see#See":"https://v8.dev/docs/stack-trace-api#customizing-stack-traces","parameters-1#Parameters":"• err: Error• stackTraces: CallSite[]","returns-1#Returns":"any","inherited-from-3#Inherited from":"Error.prepareStackTrace","source-6#Source":".tmp/repos/rockets/node_modules/@types/node/globals.d.ts:11","stacktracelimit#stackTraceLimit":"static stackTraceLimit: number","inherited-from-4#Inherited from":"Error.stackTraceLimit","source-7#Source":".tmp/repos/rockets/node_modules/@types/node/globals.d.ts:13","methods#Methods":"","capturestacktrace#captureStackTrace()":"static captureStackTrace(targetObject, constructorOpt?): void\nCreate .stack property on a target object","parameters-2#Parameters":"• targetObject: object• constructorOpt?: Function","returns-2#Returns":"void","inherited-from-5#Inherited from":"Error.captureStackTrace","source-8#Source":".tmp/repos/rockets/node_modules/@types/node/globals.d.ts:4"}},"/reference/rockets/nestjs-event/classes/EventListenService":{"title":"Class: EventListenService","data":{"":"@concepta/nestjs-event • DocsPackages Example / @concepta/nestjs-event / EventListenServiceEvent Listen ServiceThis service coordinates the registering of listeners on dispatched events to the NestJS EventEmitter module.","constructors#Constructors":"","new-eventlistenservice#new EventListenService()":"new EventListenService(eventEmitter): EventListenService\nConstructor","parameters#Parameters":"• eventEmitter: EventEmitter2Injected event emitter instance","returns#Returns":"EventListenService","source#Source":".tmp/repos/rockets/packages/nestjs-event/src/services/event-listen.service.ts:26","properties#Properties":"","eventemitter#eventEmitter":"private eventEmitter: EventEmitter2\nInjected event emitter instance","source-1#Source":".tmp/repos/rockets/packages/nestjs-event/src/services/event-listen.service.ts:28","methods#Methods":"","createlistenwrapper#createListenWrapper()":"private createListenWrapper<E>(listener): (e) => EventReturnType<E>","type-parameters#Type parameters":"• E","parameters-1#Parameters":"• listener: EventListenOnInterface<E>","returns-1#Returns":"Function","parameters-2#Parameters":"• e: EventInstance<E>","returns-2#Returns":"EventReturnType<E>","source-2#Source":".tmp/repos/rockets/packages/nestjs-event/src/services/event-listen.service.ts:107","on#on()":"on<E>(eventClass, listener, options): void\nAdds a listener to the end of the listeners list for the specified event.See the EventEmitter2.on\ndocumentation for more details about the underlying emitter API.","example#Example":"import { Injectable, OnModuleInit } from '@nestjs/common';\nimport { EventListenService, EventListenerOn } from '@concepta/nestjs-events';\nimport { TargetEvent } from 'target-module';\nclass MyListener extends EventListenerOn<TargetEvent> {\n  listen(event: TargetEvent) {\n    console.log(event.payload);\n  }\n}\n@Injectable()\nclass MyClass implements OnModuleInit {\n  constructor(private eventListenService: EventListenService) {}\n  onModuleInit() {\n    // listener instance\n    const listener = new MyListener();\n    // register the listener\n    this.eventListenService.on(TargetEvent, listener);\n  }\n}","type-parameters-1#Type parameters":"• E","parameters-3#Parameters":"• eventClass: EventClassInterface<E>The event class to subscribe to. This is the class, NOT an instance.• listener: EventListenOnInterface<E>Instance of the event listener class to attach to the event.• options: EventListenOnOptionsInterface= {}Overriding options.","returns-3#Returns":"void","source-3#Source":".tmp/repos/rockets/packages/nestjs-event/src/services/event-listen.service.ts:66"}},"/reference/rockets/nestjs-event/classes/EventListener":{"title":"Class: abstract EventListener<E>","data":{"":"@concepta/nestjs-event • DocsPackages Example / @concepta/nestjs-event / EventListenerAbstract event listener class.To create a custom event listener, extend the EventListener class and implement the\n[listen]EventListener#listen method. The [listen]EventListener#listen\nmethod will receive the payload dispatched by EventDispatchService.You will also need to implement one of the interfaces that is enforced by the\nEventListenService method you intend to use. For example\nEventListenService.on requires the EventListenOnInterface interface.There are additional abstract classes available which have implemented the basic types\nfor you. So far we have EventListenerOn... more to come!","example#Example":"// event payload type\ntype MyEventPayload = {id: number, active: boolean};\n// example event class\nclass MyEvent extends EventSync<MyEventPayload> {}\n// example listener class\nclass MyListenOn extends EventListener<MyEvent>\n  implements EventListenOnInterface\n{\n  // default options\n  options = {};\n  // custom handler\n  listen(event: MyEvent): void {\n    console.log(event.payload);\n  }\n}\n// new listener\nconst myListener = new MyListener();\n// subscribe to the event\nEventListenService.on(MyEvent, myListener);\n// and you can remove the listener easily\nlistener.remove();","extended-by#Extended by":"EventListenerOn","type-parameters#Type parameters":"• E","implements#Implements":"EventListenerInterface<E>","constructors#Constructors":"","new-eventlistener#new EventListener()":"new EventListener<E>(): EventListener<E>","returns#Returns":"EventListener<E>","properties#Properties":"","emitterlistener#emitterListener":"private emitterListener: null | Listener = null\nAn instance of the Listener object from EventEmitter2","source#Source":".tmp/repos/rockets/packages/nestjs-event/src/listeners/event-listener.ts:55","methods#Methods":"","listen#listen()":"abstract listen(event): EventReturnType<E>\nListen to an event.","parameters#Parameters":"• event: EventInstance<E>","returns-1#Returns":"EventReturnType<E>","implementation-of#Implementation of":"EventListenerInterface.listen","source-1#Source":".tmp/repos/rockets/packages/nestjs-event/src/listeners/event-listener.ts:60","remove#remove()":"remove(): void\nRemove the subscription.","returns-2#Returns":"void","implementation-of-1#Implementation of":"EventListenerInterface.remove","source-2#Source":".tmp/repos/rockets/packages/nestjs-event/src/listeners/event-listener.ts:85","subscription#subscription()":"private subscription(emitterListener): void\nCalled after successful subscription.","parameters-1#Parameters":"• emitterListener: ListenerThe Listener object returned by EventEmitter2","returns-3#Returns":"void","implementation-of-2#Implementation of":"EventListenerInterface.subscription","source-3#Source":".tmp/repos/rockets/packages/nestjs-event/src/listeners/event-listener.ts:68"}},"/reference/rockets/nestjs-event/classes/EventListenerException":{"title":"Class: EventListenerException","data":{"":"@concepta/nestjs-event • DocsPackages Example / @concepta/nestjs-event / EventListenerExceptionThrown when an error is caught when subscribing or\nmanaging a EventListener of an Event.","extends#Extends":"Error","implements#Implements":"ExceptionInterface","constructors#Constructors":"","new-eventlistenerexception#new EventListenerException()":"new EventListenerException(originalError?, message?): EventListenerException","parameters#Parameters":"• originalError?: unknown• message?: string= 'Error occurred in event listener'","returns#Returns":"EventListenerException","overrides#Overrides":"Error.constructor","source#Source":".tmp/repos/rockets/packages/nestjs-event/src/exceptions/event-listener.exception.ts:17","properties#Properties":"","context#context":"context: object\nAdditional context","originalerror#originalError":"originalError: Error","implementation-of#Implementation of":"ExceptionInterface.context","source-1#Source":".tmp/repos/rockets/packages/nestjs-event/src/exceptions/event-listener.exception.ts:13","errorcode#errorCode":"errorCode: string = 'EVENT_LISTENER_ERROR'\nThe error code.","implementation-of-1#Implementation of":"ExceptionInterface.errorCode","source-2#Source":".tmp/repos/rockets/packages/nestjs-event/src/exceptions/event-listener.exception.ts:11","message#message":"message: string","implementation-of-2#Implementation of":"ExceptionInterface.message","inherited-from#Inherited from":"Error.message","source-3#Source":"node_modules/typescript/lib/lib.es5.d.ts:1054","name#name":"name: string","implementation-of-3#Implementation of":"ExceptionInterface.name","inherited-from-1#Inherited from":"Error.name","source-4#Source":"node_modules/typescript/lib/lib.es5.d.ts:1053","stack#stack?":"optional stack: string","implementation-of-4#Implementation of":"ExceptionInterface.stack","inherited-from-2#Inherited from":"Error.stack","source-5#Source":"node_modules/typescript/lib/lib.es5.d.ts:1055","preparestacktrace#prepareStackTrace()?":"static optional prepareStackTrace: (err, stackTraces) => any\nOptional override for formatting stack traces","see#See":"https://v8.dev/docs/stack-trace-api#customizing-stack-traces","parameters-1#Parameters":"• err: Error• stackTraces: CallSite[]","returns-1#Returns":"any","inherited-from-3#Inherited from":"Error.prepareStackTrace","source-6#Source":".tmp/repos/rockets/node_modules/@types/node/globals.d.ts:11","stacktracelimit#stackTraceLimit":"static stackTraceLimit: number","inherited-from-4#Inherited from":"Error.stackTraceLimit","source-7#Source":".tmp/repos/rockets/node_modules/@types/node/globals.d.ts:13","methods#Methods":"","capturestacktrace#captureStackTrace()":"static captureStackTrace(targetObject, constructorOpt?): void\nCreate .stack property on a target object","parameters-2#Parameters":"• targetObject: object• constructorOpt?: Function","returns-2#Returns":"void","inherited-from-5#Inherited from":"Error.captureStackTrace","source-8#Source":".tmp/repos/rockets/node_modules/@types/node/globals.d.ts:4"}},"/reference/rockets/nestjs-event/classes/EventListenerOn":{"title":"Class: abstract EventListenerOn<E>","data":{"":"@concepta/nestjs-event • DocsPackages Example / @concepta/nestjs-event / EventListenerOnAbstract event listen on class.To create a custom event listener, extend the EventListenerOn class and implement the\n[listen]EventListenerOn#listen method. The [listen]EventListenerOn#listen\nmethod will receive the payload dispatched by EventDispatchService.","example#Example":"// event payload type\ntype MyPayloadType = {id: number, active: boolean};\n// example event class\nclass MyEvent extends EventSync<MyPayloadType> {}\n// example listener class\nclass MyListenOn extends EventListenerOn<MyEvent> {\n  // custom handler\n  listen(event: MyEvent): void {\n    console.log(event.payload);\n  }\n}\n// new listener\nconst myListener = new MyListenOn();\n// subscribe to the event\nEventListenService.on(MyEvent, myListener);\n// and you can remove the listener easily\nlistener.remove();","extends#Extends":"EventListener<E>","type-parameters#Type parameters":"• E","implements#Implements":"EventListenOnInterface<E>","constructors#Constructors":"","new-eventlisteneron#new EventListenerOn()":"new EventListenerOn<E>(_options): EventListenerOn<E>\nConstructor","parameters#Parameters":"• _options: EventListenOnOptionsInterface= {}Listener options","returns#Returns":"EventListenerOn<E>","overrides#Overrides":"EventListener.constructor","source#Source":".tmp/repos/rockets/packages/nestjs-event/src/listeners/event-listener-on.ts:47","properties#Properties":"","_options#_options":"private _options: EventListenOnOptionsInterface = {}\nListener options","source-1#Source":".tmp/repos/rockets/packages/nestjs-event/src/listeners/event-listener-on.ts:47","accessors#Accessors":"","options#options":"get options(): EventListenOnOptionsInterface\nDefault listener options.","returns-1#Returns":"EventListenOnOptionsInterfaceThe default listener options.","source-2#Source":".tmp/repos/rockets/packages/nestjs-event/src/listeners/event-listener-on.ts:56","methods#Methods":"","listen#listen()":"abstract listen(event): EventReturnType<E>\nListen to an event.","parameters-1#Parameters":"• event: EventInstance<E>","returns-2#Returns":"EventReturnType<E>","implementation-of#Implementation of":"EventListenOnInterface.listen","inherited-from#Inherited from":"EventListener.listen","source-3#Source":".tmp/repos/rockets/packages/nestjs-event/src/listeners/event-listener.ts:60","remove#remove()":"remove(): void\nRemove the subscription.","returns-3#Returns":"void","implementation-of-1#Implementation of":"EventListenOnInterface.remove","inherited-from-1#Inherited from":"EventListener.remove","source-4#Source":".tmp/repos/rockets/packages/nestjs-event/src/listeners/event-listener.ts:85","subscription#subscription()":"private subscription(emitterListener): void\nCalled after successful subscription.","parameters-2#Parameters":"• emitterListener: ListenerThe Listener object returned by EventEmitter2","returns-4#Returns":"void","implementation-of-2#Implementation of":"EventListenOnInterface.subscription","inherited-from-2#Inherited from":"EventListener.subscription","source-5#Source":".tmp/repos/rockets/packages/nestjs-event/src/listeners/event-listener.ts:68"}},"/reference/rockets/nestjs-event/classes/EventModule":{"title":"Class: EventModule","data":{"":"@concepta/nestjs-event • DocsPackages Example / @concepta/nestjs-event / EventModuleEvent module","extends#Extends":"EventModuleClass","constructors#Constructors":"","new-eventmodule#new EventModule()":"new EventModule(): EventModule","returns#Returns":"EventModule","inherited-from#Inherited from":"EventModuleClass.constructor","source#Source":".tmp/repos/rockets/node_modules/@nestjs/common/module-utils/interfaces/configurable-module-cls.interface.d.ts:12","methods#Methods":"","forroot#forRoot()":"static forRoot(options): DynamicModule","parameters#Parameters":"• options: EventOptions","returns-1#Returns":"DynamicModule","overrides#Overrides":"EventModuleClass.forRoot","source-1#Source":".tmp/repos/rockets/packages/nestjs-event/src/event.module.ts:14","forrootasync#forRootAsync()":"static forRootAsync(options): DynamicModule","parameters-1#Parameters":"• options: EventAsyncOptions","returns-2#Returns":"DynamicModule","overrides-1#Overrides":"EventModuleClass.forRootAsync","source-2#Source":".tmp/repos/rockets/packages/nestjs-event/src/event.module.ts:18"}},"/reference/rockets/nestjs-event/classes/EventSync":{"title":"Class: abstract EventSync<P>","data":{"":"@concepta/nestjs-event • DocsPackages Example / @concepta/nestjs-event / EventSyncAbstract synchronous event class.To create a custom event, extend the\nEventSync class.You can override and customize the [payload]Event#payload getter\nif desired. Please read the documentation for the abstract Event class\nfor the complete documentation.For asynchronous events, see the EventAsync abstract class.","example#Example":"// event payload type\ntype MyPayloadType = {id: number, active: boolean};\n// event class\nclass MyEvent extends Event<MyPayloadType> {}\n// create an event\nconst myEvent = new MyEvent({id: 1234, active: true});","extends#Extends":"Event<P, void>","type-parameters#Type parameters":"• P = undefined","implements#Implements":"EventSyncInterface<P>","constructors#Constructors":"","new-eventsync#new EventSync()":"new EventSync<P>(payload?): EventSync<P>\nConstructor","parameters#Parameters":"• payload?: PPayload to emit when the event is dispatched.","returns#Returns":"EventSync<P>","inherited-from#Inherited from":"Event.constructor","source#Source":".tmp/repos/rockets/packages/nestjs-event/src/events/event.ts:73","properties#Properties":"","expectsreturnof#expectsReturnOf":"private readonly expectsReturnOf: void\nExpects return of payload","implementation-of#Implementation of":"EventSyncInterface.expectsReturnOf","inherited-from-1#Inherited from":"Event.expectsReturnOf","source-1#Source":".tmp/repos/rockets/packages/nestjs-event/src/events/event.ts:43","accessors#Accessors":"","key#key":"get key(): string\nEvent key.","returns-1#Returns":"stringThe event key string.","source-2#Source":".tmp/repos/rockets/packages/nestjs-event/src/events/event.ts:59","payload#payload":"get payload(): P\nReturns payload that was passed to the Event constructor.","returns-2#Returns":"PThe payload.","source-3#Source":".tmp/repos/rockets/packages/nestjs-event/src/events/event.ts:89","key-1#key":"get static key(): string\nEvent key.","returns-3#Returns":"stringThe event key string.","source-4#Source":".tmp/repos/rockets/packages/nestjs-event/src/events/event.ts:50"}},"/reference/rockets/nestjs-event/globals":{"title":"@concepta/nestjs-event","data":{"":"@concepta/nestjs-event • DocsPackages Example / @concepta/nestjs-event","classes#Classes":"Event\nEventAsync\nEventDispatchException\nEventDispatchService\nEventListenException\nEventListenService\nEventListener\nEventListenerException\nEventListenerOn\nEventModule\nEventSync","interfaces#Interfaces":"EventAsyncInterface\nEventClassInterface\nEventInterface\nEventListenOnInterface\nEventListenOnOptionsInterface\nEventListenerInterface\nEventOptionsInterface\nEventSyncInterface","variables#Variables":"\nEVENT_MODULE_EMITTER_SERVICE_TOKEN\nEVENT_MODULE_EVENT_KEY_PREFIX\nEVENT_MODULE_SETTINGS_TOKEN"}},"/reference/rockets/nestjs-event/interfaces/EventAsyncInterface":{"title":"Interface: EventAsyncInterface<P, R>","data":{"":"@concepta/nestjs-event • DocsPackages Example / @concepta/nestjs-event / EventAsyncInterfaceThe interface that all async events must adhere to","extends#Extends":"EventInterface<P, Promise<R>>","type-parameters#Type parameters":"• P = undefined• R = P","properties#Properties":"","expectsreturnof#expectsReturnOf":"expectsReturnOf: Promise<R>","inherited-from#Inherited from":"EventInterface.expectsReturnOf","source#Source":".tmp/repos/rockets/packages/nestjs-event/src/events/interfaces/event-expects-return-of.interface.ts:5","key#key":"key: string\nEvent key.","inherited-from-1#Inherited from":"EventInterface.key","source-1#Source":".tmp/repos/rockets/packages/nestjs-event/src/events/interfaces/event-key.interface.ts:8","payload#payload":"payload: P\nReturn the payload that should be emitted.","inherited-from-2#Inherited from":"EventInterface.payload","source-2#Source":".tmp/repos/rockets/packages/nestjs-event/src/events/interfaces/event.interface.ts:14"}},"/reference/rockets/nestjs-event/interfaces/EventClassInterface":{"title":"Interface: EventClassInterface<E>","data":{"":"@concepta/nestjs-event • DocsPackages Example / @concepta/nestjs-event / EventClassInterfaceInterface defining static signature of newable events.","extends#Extends":"EventKeyInterface","type-parameters#Type parameters":"• E","constructors#Constructors":"","new-eventclassinterface#new EventClassInterface()":"new EventClassInterface(payload?): E & EventInstance<E>","parameters#Parameters":"• payload?: E & EventInstance<E>[\"payload\"]","returns#Returns":"E & EventInstance<E>","inherited-from#Inherited from":"EventKeyInterface.constructor","source#Source":".tmp/repos/rockets/packages/nestjs-event/src/events/interfaces/event-class.interface.ts:11","properties#Properties":"","key#key":"key: string\nEvent key.","inherited-from-1#Inherited from":"EventKeyInterface.key","source-1#Source":".tmp/repos/rockets/packages/nestjs-event/src/events/interfaces/event-key.interface.ts:8"}},"/reference/rockets/nestjs-event/interfaces/EventInterface":{"title":"Interface: EventInterface<P, R>","data":{"":"@concepta/nestjs-event • DocsPackages Example / @concepta/nestjs-event / EventInterfaceThe interface that defines Event key and payload signatures.","extends#Extends":"EventKeyInterface.EventExpectsReturnOfInterface<R>","extended-by#Extended by":"EventSyncInterface\nEventAsyncInterface","type-parameters#Type parameters":"• P = undefined• R = P","properties#Properties":"","expectsreturnof#expectsReturnOf":"expectsReturnOf: R","inherited-from#Inherited from":"EventExpectsReturnOfInterface.expectsReturnOf","source#Source":".tmp/repos/rockets/packages/nestjs-event/src/events/interfaces/event-expects-return-of.interface.ts:5","key#key":"key: string\nEvent key.","inherited-from-1#Inherited from":"EventKeyInterface.key","source-1#Source":".tmp/repos/rockets/packages/nestjs-event/src/events/interfaces/event-key.interface.ts:8","payload#payload":"payload: P\nReturn the payload that should be emitted.","source-2#Source":".tmp/repos/rockets/packages/nestjs-event/src/events/interfaces/event.interface.ts:14"}},"/reference/rockets/nestjs-event/interfaces/EventListenOnInterface":{"title":"Interface: EventListenOnInterface<E>","data":{"":"@concepta/nestjs-event • DocsPackages Example / @concepta/nestjs-event / EventListenOnInterfaceThe interface that defines Event Listen On signature.","extends#Extends":"EventListenerInterface<E>","type-parameters#Type parameters":"• E","properties#Properties":"","options#options":"options: EventListenOnOptionsInterface\nOptions to be passed to Event Emitter 2 at the time of subscription.","source#Source":".tmp/repos/rockets/packages/nestjs-event/src/services/interfaces/event-listen-on.interface.ts:11","methods#Methods":"","listen#listen()":"listen(event): EventReturnType<E>\nListener handler.","parameters#Parameters":"• event: EventInstance<E>","returns#Returns":"EventReturnType<E>","inherited-from#Inherited from":"EventListenerInterface.listen","source-1#Source":".tmp/repos/rockets/packages/nestjs-event/src/listeners/interfaces/event-listener.interface.ts:11","remove#remove()":"remove(): void\nRemove the subscription.","returns-1#Returns":"void","inherited-from-1#Inherited from":"EventListenerInterface.remove","source-2#Source":".tmp/repos/rockets/packages/nestjs-event/src/listeners/interfaces/event-listener.interface.ts:23","subscription#subscription()":"subscription(emitterListener): void\nCalled after successful subscription.","parameters-1#Parameters":"• emitterListener: ListenerThe Listener object returned by EventEmitter2","returns-2#Returns":"void","inherited-from-2#Inherited from":"EventListenerInterface.subscription","source-3#Source":".tmp/repos/rockets/packages/nestjs-event/src/listeners/interfaces/event-listener.interface.ts:18"}},"/reference/rockets/nestjs-event/interfaces/EventListenOnOptionsInterface":{"title":"Interface: EventListenOnOptionsInterface","data":{"":"@concepta/nestjs-event • DocsPackages Example / @concepta/nestjs-event / EventListenOnOptionsInterfaceInterfaces defining public options object for \"listen on\" style events.","extends#Extends":"Partial<Pick<OnOptions, \"async\" | \"nextTick\">>","properties#Properties":"","async#async?":"optional async: boolean","inherited-from#Inherited from":"Partial.async","source#Source":".tmp/repos/rockets/node_modules/eventemitter2/eventemitter2.d.ts:108","nexttick#nextTick?":"optional nextTick: boolean","inherited-from-1#Inherited from":"Partial.nextTick","source-1#Source":".tmp/repos/rockets/node_modules/eventemitter2/eventemitter2.d.ts:110"}},"/reference/rockets/nestjs-event/interfaces/EventListenerInterface":{"title":"Interface: EventListenerInterface<E>","data":{"":"@concepta/nestjs-event • DocsPackages Example / @concepta/nestjs-event / EventListenerInterfaceThe interface that defines Event Listener signature.","extended-by#Extended by":"EventListenOnInterface","type-parameters#Type parameters":"• E","methods#Methods":"","listen#listen()":"listen(event): EventReturnType<E>\nListener handler.","parameters#Parameters":"• event: EventInstance<E>","returns#Returns":"EventReturnType<E>","source#Source":".tmp/repos/rockets/packages/nestjs-event/src/listeners/interfaces/event-listener.interface.ts:11","remove#remove()":"remove(): void\nRemove the subscription.","returns-1#Returns":"void","source-1#Source":".tmp/repos/rockets/packages/nestjs-event/src/listeners/interfaces/event-listener.interface.ts:23","subscription#subscription()":"subscription(emitterListener): void\nCalled after successful subscription.","parameters-1#Parameters":"• emitterListener: ListenerThe Listener object returned by EventEmitter2","returns-2#Returns":"void","source-2#Source":".tmp/repos/rockets/packages/nestjs-event/src/listeners/interfaces/event-listener.interface.ts:18"}},"/reference/rockets/nestjs-event/interfaces/EventOptionsInterface":{"title":"Interface: EventOptionsInterface","data":{"":"@concepta/nestjs-event • DocsPackages Example / @concepta/nestjs-event / EventOptionsInterfaceEvent module options interface","properties#Properties":"","settings#settings?":"optional settings: EventSettingsInterface","source#Source":".tmp/repos/rockets/packages/nestjs-event/src/interfaces/event-options.interface.ts:7"}},"/reference/rockets/nestjs-event/interfaces/EventSyncInterface":{"title":"Interface: EventSyncInterface<P>","data":{"":"@concepta/nestjs-event • DocsPackages Example / @concepta/nestjs-event / EventSyncInterfaceThe interface that all sync events must adhere to","extends#Extends":"EventInterface<P, void>","type-parameters#Type parameters":"• P = undefined","properties#Properties":"","expectsreturnof#expectsReturnOf":"expectsReturnOf: void","inherited-from#Inherited from":"EventInterface.expectsReturnOf","source#Source":".tmp/repos/rockets/packages/nestjs-event/src/events/interfaces/event-expects-return-of.interface.ts:5","key#key":"key: string\nEvent key.","inherited-from-1#Inherited from":"EventInterface.key","source-1#Source":".tmp/repos/rockets/packages/nestjs-event/src/events/interfaces/event-key.interface.ts:8","payload#payload":"payload: P\nReturn the payload that should be emitted.","inherited-from-2#Inherited from":"EventInterface.payload","source-2#Source":".tmp/repos/rockets/packages/nestjs-event/src/events/interfaces/event.interface.ts:14"}},"/reference/rockets/nestjs-event/variables/EVENT_MODULE_DEFAULT_EMITTER_SERVICE_SETTINGS_TOKEN":{"title":"Variable: EVENT_MODULE_DEFAULT_EMITTER_SERVICE_SETTINGS_TOKEN","data":{"":"@concepta/nestjs-event • DocsPackages Example / @concepta/nestjs-event / \nconst : \"\" = ''\nThis is the token into which the default event emitter settings are injected.","source#Source":".tmp/repos/rockets/packages/nestjs-event/src/event-constants.ts:15"}},"/reference/rockets/nestjs-event/variables/EVENT_MODULE_EMITTER_SERVICE_TOKEN":{"title":"Variable: EVENT_MODULE_EMITTER_SERVICE_TOKEN","data":{"":"@concepta/nestjs-event • DocsPackages Example / @concepta/nestjs-event / EVENT_MODULE_EMITTER_SERVICE_TOKEN\nconst EVENT_MODULE_EMITTER_SERVICE_TOKEN: \"EVENT_MODULE_EMITTER_SERVICE_TOKEN\" = 'EVENT_MODULE_EMITTER_SERVICE_TOKEN'\nThis is the token into which the event emitter service is injected.","source#Source":".tmp/repos/rockets/packages/nestjs-event/src/event-constants.ts:9"}},"/reference/rockets/nestjs-event/variables/EVENT_MODULE_EVENT_KEY_PREFIX":{"title":"Variable: EVENT_MODULE_EVENT_KEY_PREFIX","data":{"":"@concepta/nestjs-event • DocsPackages Example / @concepta/nestjs-event / EVENT_MODULE_EVENT_KEY_PREFIX\nconst EVENT_MODULE_EVENT_KEY_PREFIX: \"ROCKETS_EVENT_\" = 'ROCKETS_EVENT_'\nAll event keys will be automatically prefixed with this string","source#Source":".tmp/repos/rockets/packages/nestjs-event/src/event-constants.ts:21"}},"/reference/rockets/nestjs-event/variables/EVENT_MODULE_SETTINGS_TOKEN":{"title":"Variable: EVENT_MODULE_SETTINGS_TOKEN","data":{"":"@concepta/nestjs-event • DocsPackages Example / @concepta/nestjs-event / EVENT_MODULE_SETTINGS_TOKEN\nconst EVENT_MODULE_SETTINGS_TOKEN: \"EVENT_MODULE_SETTINGS_TOKEN\" = 'EVENT_MODULE_SETTINGS_TOKEN'\nThis is the token into which the event module settings are injected.","source#Source":".tmp/repos/rockets/packages/nestjs-event/src/event-constants.ts:4"}},"/reference/rockets/nestjs-exception/README":{"title":"Rockets NestJS Exception","data":{"":"@concepta/nestjs-exception • DocsPackages Example / @concepta/nestjs-exceptionProvide exception handling/normalization and error code mapping.For more details on the exception filters pattern, please refer to the official\nNestJS Exception Filters documentation.","project#Project":"","installation#Installation":"yarn add @concepta/nestjs-exception","binding-the-filer#Binding The Filer":"You can bind the filter to classes, methods and globally.","class-decorator#Class Decorator":"// ...\nimport { ExceptionsFilter } from '@concepta/nestjs-exception';\n@UseFilters(new ExceptionsFilter())\nexport class PhotoController {\n  // ...\n}","method-decorator#Method Decorator":"// ...\nimport { ExceptionsFilter } from '@concepta/nestjs-exception';\n@Post()\n@UseFilters(new ExceptionsFilter())\nasync create(@Body() createPhotoDto: CreatePhotoDto) {\n  throw new ForbiddenException();\n}","global-filter#Global Filter":"// ...\nimport { ExceptionsFilter } from '@concepta/nestjs-exception';\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  app.useGlobalFilters(new ExceptionsFilter());\n  await app.listen(3000);\n}\nbootstrap();","todo#TODO":"Define interface for exception filter response payload."}},"/reference/rockets/nestjs-exception/classes/ExceptionsFilter":{"title":"Class: ExceptionsFilter","data":{"":"@concepta/nestjs-exception • DocsPackages Example / @concepta/nestjs-exception / ExceptionsFilter","implements#Implements":"ExceptionsFilter","constructors#Constructors":"","new-exceptionsfilter#new ExceptionsFilter()":"new ExceptionsFilter(httpAdapterHost): ExceptionsFilter","parameters#Parameters":"• httpAdapterHost: HttpAdapterHost<AbstractHttpAdapter<any, any, any>>","returns#Returns":"ExceptionsFilter","source#Source":".tmp/repos/rockets/packages/nestjs-exception/src/filters/exceptions.filter.ts:11","properties#Properties":"","httpadapterhost#httpAdapterHost":"private readonly httpAdapterHost: HttpAdapterHost<AbstractHttpAdapter<any, any, any>>","implementation-of#Implementation of":"ExceptionsFilter.httpAdapterHost","source-1#Source":".tmp/repos/rockets/packages/nestjs-exception/src/filters/exceptions.filter.ts:11","methods#Methods":"","catch#catch()":"catch(exception, host): void","parameters-1#Parameters":"• exception: ExceptionInterface• host: ArgumentsHost","returns-1#Returns":"void","implementation-of-1#Implementation of":"ExceptionsFilter.catch","source-2#Source":".tmp/repos/rockets/packages/nestjs-exception/src/filters/exceptions.filter.ts:13"}},"/reference/rockets/nestjs-exception/globals":{"title":"@concepta/nestjs-exception","data":{"":"@concepta/nestjs-exception • DocsPackages Example / @concepta/nestjs-exception","classes#Classes":"ExceptionsFilter\nRuntimeException","interfaces#Interfaces":"RuntimeExceptionInterface\nRuntimeExceptionOptions","type-aliases#Type Aliases":"RuntimeExceptionContext"}},"/reference/rockets/nestjs-exception/type-aliases/RuntimeExceptionContext":{"title":"Type alias: RuntimeExceptionContext","data":{"":"@concepta/nestjs-exception • DocsPackages Example / @concepta/nestjs-exception / RuntimeExceptionContext\nRuntimeExceptionContext: ExceptionContext & object","type-declaration#Type declaration":"","originalerror#originalError?":"optional originalError: Error","source#Source":".tmp/repos/rockets/packages/nestjs-exception/src/exception.types.ts:3"}},"/reference/rockets/nestjs-federated/README":{"title":"Rockets NestJS Federated Authentication","data":{"":"@concepta/nestjs-federated • DocsPackages Example / @concepta/nestjs-federatedAuthenticate via federated login","project#Project":"","installation#Installation":"yarn add @concepta/nestjs-federated"}},"/reference/rockets/nestjs-federated/classes/FederatedCreateDto":{"title":"Class: FederatedCreateDto","data":{"":"@concepta/nestjs-federated • DocsPackages Example / @concepta/nestjs-federated / FederatedCreateDtoFederated Create DTO","extends#Extends":"Pick<FederatedDto, \"provider\" | \"subject\" | \"user\">","implements#Implements":"FederatedCreatableInterface","constructors#Constructors":"","new-federatedcreatedto#new FederatedCreateDto()":"new FederatedCreateDto(...args): FederatedCreateDto","parameters#Parameters":"• ...args: any[]","returns#Returns":"FederatedCreateDto","inherited-from#Inherited from":"PickType(FederatedDto, ['provider', 'subject', 'user'] as const).constructor","source#Source":".tmp/repos/rockets/node_modules/@nestjs/common/interfaces/type.interface.d.ts:2","properties#Properties":"","provider#provider":"provider: string = ''\nprovider","implementation-of#Implementation of":"FederatedCreatableInterface.provider","inherited-from-1#Inherited from":"PickType(FederatedDto, ['provider', 'subject', 'user'] as const).provider","source-1#Source":".tmp/repos/rockets/packages/nestjs-federated/src/dto/federated.dto.ts:25","subject#subject":"subject: string = ''\nsubject","implementation-of-1#Implementation of":"FederatedCreatableInterface.subject","inherited-from-2#Inherited from":"PickType(FederatedDto, ['provider', 'subject', 'user'] as const).subject","source-2#Source":".tmp/repos/rockets/packages/nestjs-federated/src/dto/federated.dto.ts:36","user#user":"user: ReferenceIdInterface<string>\nuserId","implementation-of-2#Implementation of":"FederatedCreatableInterface.user","inherited-from-3#Inherited from":"PickType(FederatedDto, ['provider', 'subject', 'user'] as const).user","source-3#Source":".tmp/repos/rockets/packages/nestjs-federated/src/dto/federated.dto.ts:48","arguments#arguments":"static arguments: any","inherited-from-4#Inherited from":"PickType(FederatedDto, ['provider', 'subject', 'user'] as const).arguments","source-4#Source":"node_modules/typescript/lib/lib.es5.d.ts:304","caller#caller":"static caller: Function","inherited-from-5#Inherited from":"PickType(FederatedDto, ['provider', 'subject', 'user'] as const).caller","source-5#Source":"node_modules/typescript/lib/lib.es5.d.ts:305","length#length":"static readonly length: number","inherited-from-6#Inherited from":"PickType(FederatedDto, ['provider', 'subject', 'user'] as const).length","source-6#Source":"node_modules/typescript/lib/lib.es5.d.ts:301","name#name":"static readonly name: string\nReturns the name of the function. Function names are read-only and can not be changed.","inherited-from-7#Inherited from":"PickType(FederatedDto, ['provider', 'subject', 'user'] as const).name","source-7#Source":"node_modules/typescript/lib/lib.es2015.core.d.ts:97","methods#Methods":"","hasinstance#[hasInstance]()":"static [hasInstance](value): boolean\nDetermines whether the given value inherits from this function if this function was used\r\nas a constructor function.A constructor function can control which objects are recognized as its instances by\r\n'instanceof' by overriding this method.","parameters-1#Parameters":"• value: any","returns-1#Returns":"boolean","inherited-from-8#Inherited from":"PickType(FederatedDto, ['provider', 'subject', 'user'] as const).[hasInstance]","source-8#Source":"node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts:162","apply#apply()":"static apply(this, thisArg, argArray?): any\nCalls the function, substituting the specified object for the this value of the function, and the specified array for the arguments of the function.","parameters-2#Parameters":"• this: Function• thisArg: anyThe object to be used as the this object.• argArray?: anyA set of arguments to be passed to the function.","returns-2#Returns":"any","inherited-from-9#Inherited from":"PickType(FederatedDto, ['provider', 'subject', 'user'] as const).apply","source-9#Source":"node_modules/typescript/lib/lib.es5.d.ts:280","bind#bind()":"static bind(this, thisArg, ...argArray): any\nFor a given function, creates a bound function that has the same body as the original function.\r\nThe this object of the bound function is associated with the specified object, and has the specified initial parameters.","parameters-3#Parameters":"• this: Function• thisArg: anyAn object to which the this keyword can refer inside the new function.• ...argArray: any[]A list of arguments to be passed to the new function.","returns-3#Returns":"any","inherited-from-10#Inherited from":"PickType(FederatedDto, ['provider', 'subject', 'user'] as const).bind","source-10#Source":"node_modules/typescript/lib/lib.es5.d.ts:295","call#call()":"static call(this, thisArg, ...argArray): any\nCalls a method of an object, substituting another object for the current object.","parameters-4#Parameters":"• this: Function• thisArg: anyThe object to be used as the current object.• ...argArray: any[]A list of arguments to be passed to the method.","returns-4#Returns":"any","inherited-from-11#Inherited from":"PickType(FederatedDto, ['provider', 'subject', 'user'] as const).call","source-11#Source":"node_modules/typescript/lib/lib.es5.d.ts:287","tostring#toString()":"static toString(): string\nReturns a string representation of a function.","returns-5#Returns":"string","inherited-from-12#Inherited from":"PickType(FederatedDto, ['provider', 'subject', 'user'] as const).toString","source-12#Source":"node_modules/typescript/lib/lib.es5.d.ts:298"}},"/reference/rockets/nestjs-federated/classes/FederatedModule":{"title":"Class: FederatedModule","data":{"":"@concepta/nestjs-federated • DocsPackages Example / @concepta/nestjs-federated / FederatedModule","extends#Extends":"FederatedModuleClass","constructors#Constructors":"","new-federatedmodule#new FederatedModule()":"new FederatedModule(): FederatedModule","returns#Returns":"FederatedModule","inherited-from#Inherited from":"FederatedModuleClass.constructor","source#Source":".tmp/repos/rockets/node_modules/@nestjs/common/module-utils/interfaces/configurable-module-cls.interface.d.ts:12","methods#Methods":"","forfeature#forFeature()":"static forFeature(options): DynamicModule","parameters#Parameters":"• options: FederatedOptions","returns-1#Returns":"DynamicModule","source-1#Source":".tmp/repos/rockets/packages/nestjs-federated/src/federated.module.ts:36","forroot#forRoot()":"static forRoot(options): DynamicModule","parameters-1#Parameters":"• options: FederatedOptions","returns-2#Returns":"DynamicModule","source-2#Source":".tmp/repos/rockets/packages/nestjs-federated/src/federated.module.ts:28","forrootasync#forRootAsync()":"static forRootAsync(options): DynamicModule","parameters-2#Parameters":"• options: FederatedAsyncOptions","returns-3#Returns":"DynamicModule","source-3#Source":".tmp/repos/rockets/packages/nestjs-federated/src/federated.module.ts:32","register#register()":"static register(options): DynamicModule","parameters-3#Parameters":"• options: FederatedOptions","returns-4#Returns":"DynamicModule","overrides#Overrides":"FederatedModuleClass.register","source-4#Source":".tmp/repos/rockets/packages/nestjs-federated/src/federated.module.ts:20","registerasync#registerAsync()":"static registerAsync(options): DynamicModule","parameters-4#Parameters":"• options: FederatedAsyncOptions","returns-5#Returns":"DynamicModule","overrides-1#Overrides":"FederatedModuleClass.registerAsync","source-5#Source":".tmp/repos/rockets/packages/nestjs-federated/src/federated.module.ts:24"}},"/reference/rockets/nestjs-federated/classes/FederatedDto":{"title":"Class: FederatedDto","data":{"":"@concepta/nestjs-federated • DocsPackages Example / @concepta/nestjs-federated / FederatedDtoFederated DTO","extends#Extends":"CommonEntityDto","implements#Implements":"FederatedInterface","constructors#Constructors":"","new-federateddto#new FederatedDto()":"new FederatedDto(): FederatedDto","returns#Returns":"FederatedDto","inherited-from#Inherited from":"CommonEntityDto.constructor","properties#Properties":"","datecreated#dateCreated":"dateCreated: Date\nDate created","implementation-of#Implementation of":"FederatedInterface.dateCreated","inherited-from-1#Inherited from":"CommonEntityDto.dateCreated","source#Source":".tmp/repos/rockets/packages/nestjs-common/dist/audit/dto/audit.dto.d.ts:3","datedeleted#dateDeleted":"dateDeleted: AuditDateDeleted\nDate deleted","implementation-of-1#Implementation of":"FederatedInterface.dateDeleted","inherited-from-2#Inherited from":"CommonEntityDto.dateDeleted","source-1#Source":".tmp/repos/rockets/packages/nestjs-common/dist/audit/dto/audit.dto.d.ts:5","dateupdated#dateUpdated":"dateUpdated: Date\nDate updated","implementation-of-2#Implementation of":"FederatedInterface.dateUpdated","inherited-from-3#Inherited from":"CommonEntityDto.dateUpdated","source-2#Source":".tmp/repos/rockets/packages/nestjs-common/dist/audit/dto/audit.dto.d.ts:4","id#id":"id: string","implementation-of-3#Implementation of":"FederatedInterface.id","inherited-from-4#Inherited from":"CommonEntityDto.id","source-3#Source":".tmp/repos/rockets/packages/nestjs-common/dist/common/common-entity.dto.d.ts:4","provider#provider":"provider: string = ''\nprovider","implementation-of-4#Implementation of":"FederatedInterface.provider","source-4#Source":".tmp/repos/rockets/packages/nestjs-federated/src/dto/federated.dto.ts:25","subject#subject":"subject: string = ''\nsubject","implementation-of-5#Implementation of":"FederatedInterface.subject","source-5#Source":".tmp/repos/rockets/packages/nestjs-federated/src/dto/federated.dto.ts:36","user#user":"user: ReferenceIdInterface<string>\nuserId","implementation-of-6#Implementation of":"FederatedInterface.user","source-6#Source":".tmp/repos/rockets/packages/nestjs-federated/src/dto/federated.dto.ts:48","version#version":"version: number\nVersion","implementation-of-7#Implementation of":"FederatedInterface.version","inherited-from-5#Inherited from":"CommonEntityDto.version","source-7#Source":".tmp/repos/rockets/packages/nestjs-common/dist/audit/dto/audit.dto.d.ts:6"}},"/reference/rockets/nestjs-federated/classes/FederatedOAuthService":{"title":"Class: FederatedOAuthService","data":{"":"@concepta/nestjs-federated • DocsPackages Example / @concepta/nestjs-federated / FederatedOAuthService","implements#Implements":"FederatedOAuthServiceInterface","constructors#Constructors":"","new-federatedoauthservice#new FederatedOAuthService()":"new FederatedOAuthService(userLookupService, userMutateService, federatedService, federatedMutateService): FederatedOAuthService","parameters#Parameters":"• userLookupService: FederatedUserLookupServiceInterface• userMutateService: FederatedUserMutateServiceInterface• federatedService: FederatedService• federatedMutateService: FederatedMutateService","returns#Returns":"FederatedOAuthService","source#Source":".tmp/repos/rockets/packages/nestjs-federated/src/services/federated-oauth.service.ts:24","properties#Properties":"","federatedmutateservice#federatedMutateService":"federatedMutateService: FederatedMutateService","source-1#Source":".tmp/repos/rockets/packages/nestjs-federated/src/services/federated-oauth.service.ts:30","federatedservice#federatedService":"federatedService: FederatedService","source-2#Source":".tmp/repos/rockets/packages/nestjs-federated/src/services/federated-oauth.service.ts:29","userlookupservice#userLookupService":"userLookupService: FederatedUserLookupServiceInterface","source-3#Source":".tmp/repos/rockets/packages/nestjs-federated/src/services/federated-oauth.service.ts:26","usermutateservice#userMutateService":"userMutateService: FederatedUserMutateServiceInterface","source-4#Source":".tmp/repos/rockets/packages/nestjs-federated/src/services/federated-oauth.service.ts:28","methods#Methods":"","createfederated#createFederated()":"private createFederated(provider, subject, user, queryOptions?): Promise<FederatedEntityInterface>\nCreate federated credentials","parameters-1#Parameters":"• provider: string• subject: string• user: ReferenceIdInterface<string>• queryOptions?: QueryOptionsInterface","returns-1#Returns":"Promise<FederatedEntityInterface>","source-5#Source":".tmp/repos/rockets/packages/nestjs-federated/src/services/federated-oauth.service.ts:141","createuser#createUser()":"private createUser(email, username, queryOptions?): Promise<FederatedCredentialsInterface>\nCreate a user","parameters-2#Parameters":"• email: string• username: string• queryOptions?: QueryOptionsInterface","returns-2#Returns":"Promise<FederatedCredentialsInterface>","source-6#Source":".tmp/repos/rockets/packages/nestjs-federated/src/services/federated-oauth.service.ts:106","createuserwithfederated#createUserWithFederated()":"private createUserWithFederated(provider, email, subject, queryOptions?): Promise<FederatedCredentialsInterface>\nLogic to create user and federated","parameters-3#Parameters":"• provider: string• email: string• subject: string• queryOptions?: QueryOptionsInterface","returns-3#Returns":"Promise<FederatedCredentialsInterface>","source-7#Source":".tmp/repos/rockets/packages/nestjs-federated/src/services/federated-oauth.service.ts:83","sign#sign()":"sign(provider, email, subject, queryOptions?): Promise<FederatedCredentialsInterface>\nSign in with federated creating a user if it doesn't exist","parameters-4#Parameters":"• provider: stringprovider name (github, facebook, google)• email: stringemail account• subject: stringsubject (user id/ profile id from provider)• queryOptions?: QueryOptionsInterface","returns-4#Returns":"Promise<FederatedCredentialsInterface>email - email of userFederatedCredentialsInterface - user information","implementation-of#Implementation of":"FederatedOAuthServiceInterface.sign","source-8#Source":".tmp/repos/rockets/packages/nestjs-federated/src/services/federated-oauth.service.ts:42"}},"/reference/rockets/nestjs-federated/classes/FederatedPostgresEntity":{"title":"Class: FederatedPostgresEntity","data":{"":"@concepta/nestjs-federated • DocsPackages Example / @concepta/nestjs-federated / FederatedPostgresEntityFederated Postgres Entity","extends#Extends":"CommonPostgresEntity","implements#Implements":"FederatedEntityInterface","constructors#Constructors":"","new-federatedpostgresentity#new FederatedPostgresEntity()":"new FederatedPostgresEntity(): FederatedPostgresEntity","returns#Returns":"FederatedPostgresEntity","inherited-from#Inherited from":"CommonPostgresEntity.constructor","properties#Properties":"","datecreated#dateCreated":"dateCreated: Date\nDate created.","implementation-of#Implementation of":"FederatedEntityInterface.dateCreated","inherited-from-1#Inherited from":"CommonPostgresEntity.dateCreated","source#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/audit/audit-postgres.entity.d.ts:3","datedeleted#dateDeleted":"dateDeleted: AuditDateDeleted\nDate deleted.","implementation-of-1#Implementation of":"FederatedEntityInterface.dateDeleted","inherited-from-2#Inherited from":"CommonPostgresEntity.dateDeleted","source-1#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/audit/audit-postgres.entity.d.ts:5","dateupdated#dateUpdated":"dateUpdated: Date\nDate updated.","implementation-of-2#Implementation of":"FederatedEntityInterface.dateUpdated","inherited-from-3#Inherited from":"CommonPostgresEntity.dateUpdated","source-2#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/audit/audit-postgres.entity.d.ts:4","id#id":"id: string","implementation-of-3#Implementation of":"FederatedEntityInterface.id","inherited-from-4#Inherited from":"CommonPostgresEntity.id","source-3#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/common/common-postgres.entity.d.ts:4","provider#provider":"provider: string\nprovider","implementation-of-4#Implementation of":"FederatedEntityInterface.provider","source-4#Source":".tmp/repos/rockets/packages/nestjs-federated/src/entities/federated-postgres.entity.ts:18","subject#subject":"subject: string\nsubject","implementation-of-5#Implementation of":"FederatedEntityInterface.subject","source-5#Source":".tmp/repos/rockets/packages/nestjs-federated/src/entities/federated-postgres.entity.ts:24","user#user":"user: ReferenceIdInterface<string>\nUser","implementation-of-6#Implementation of":"FederatedEntityInterface.user","source-6#Source":".tmp/repos/rockets/packages/nestjs-federated/src/entities/federated-postgres.entity.ts:29","version#version":"version: number\nVersion","implementation-of-7#Implementation of":"FederatedEntityInterface.version","inherited-from-5#Inherited from":"CommonPostgresEntity.version","source-7#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/audit/audit-postgres.entity.d.ts:6"}},"/reference/rockets/nestjs-federated/classes/FederatedService":{"title":"Class: FederatedService","data":{"":"@concepta/nestjs-federated • DocsPackages Example / @concepta/nestjs-federated / FederatedServiceAbstract service","extends#Extends":"BaseService<FederatedEntityInterface>","implements#Implements":"FederatedServiceInterface","constructors#Constructors":"","new-federatedservice#new FederatedService()":"new FederatedService(federatedRepo): FederatedService","parameters#Parameters":"• federatedRepo: Repository<FederatedEntityInterface>","returns#Returns":"FederatedService","overrides#Overrides":"BaseService.constructor","source#Source":".tmp/repos/rockets/packages/nestjs-federated/src/services/federated.service.ts:18","accessors#Accessors":"","metadata#metadata":"get protected metadata(): EntityMetadata","returns-1#Returns":"EntityMetadata","source-1#Source":".tmp/repos/rockets/packages/typeorm-common/dist/services/base.service.d.ts:13","methods#Methods":"","exists#exists()":"exists(provider, subject, queryOptions?): Promise<null | FederatedEntityInterface>","parameters-1#Parameters":"• provider: string• subject: string• queryOptions?: QueryOptionsInterface","returns-2#Returns":"Promise<null | FederatedEntityInterface>","implementation-of#Implementation of":"FederatedServiceInterface.exists","source-2#Source":".tmp/repos/rockets/packages/nestjs-federated/src/services/federated.service.ts:25","findone#findOne()":"findOne(findOneOptions, queryOptions?): Promise<null | FederatedEntityInterface>\nFind One wrapper.","parameters-2#Parameters":"• findOneOptions: FindOneOptions<FederatedEntityInterface>Find options• queryOptions?: QueryOptionsInterface","returns-3#Returns":"Promise<null | FederatedEntityInterface>","inherited-from#Inherited from":"BaseService.findOne","source-3#Source":".tmp/repos/rockets/packages/typeorm-common/dist/services/base.service.d.ts:10","repository#repository()":"repository(queryOptions?): Repository<FederatedEntityInterface>\nReturn the correct repository instance.","parameters-3#Parameters":"• queryOptions?: QueryOptionsInterfaceOptions","returns-4#Returns":"Repository<FederatedEntityInterface>","inherited-from-1#Inherited from":"BaseService.repository","source-4#Source":".tmp/repos/rockets/packages/typeorm-common/dist/services/base.service.d.ts:11","transaction#transaction()":"transaction(options?): TransactionProxy\nReturn a transaction instance.","parameters-4#Parameters":"• options?: SafeTransactionOptionsInterfaceOptions","returns-5#Returns":"TransactionProxy","inherited-from-2#Inherited from":"BaseService.transaction","source-5#Source":".tmp/repos/rockets/packages/typeorm-common/dist/services/base.service.d.ts:12"}},"/reference/rockets/nestjs-federated/classes/FederatedSqliteEntity":{"title":"Class: FederatedSqliteEntity","data":{"":"@concepta/nestjs-federated • DocsPackages Example / @concepta/nestjs-federated / FederatedSqliteEntityFederated Sqlite Entity","extends#Extends":"CommonSqliteEntity","implements#Implements":"FederatedEntityInterface","constructors#Constructors":"","new-federatedsqliteentity#new FederatedSqliteEntity()":"new FederatedSqliteEntity(): FederatedSqliteEntity","returns#Returns":"FederatedSqliteEntity","inherited-from#Inherited from":"CommonSqliteEntity.constructor","properties#Properties":"","datecreated#dateCreated":"dateCreated: Date\nDate created.","implementation-of#Implementation of":"FederatedEntityInterface.dateCreated","inherited-from-1#Inherited from":"CommonSqliteEntity.dateCreated","source#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/audit/audit-sqlite.entity.d.ts:3","datedeleted#dateDeleted":"dateDeleted: AuditDateDeleted\nDate deleted.","implementation-of-1#Implementation of":"FederatedEntityInterface.dateDeleted","inherited-from-2#Inherited from":"CommonSqliteEntity.dateDeleted","source-1#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/audit/audit-sqlite.entity.d.ts:5","dateupdated#dateUpdated":"dateUpdated: Date\nDate updated.","implementation-of-2#Implementation of":"FederatedEntityInterface.dateUpdated","inherited-from-3#Inherited from":"CommonSqliteEntity.dateUpdated","source-2#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/audit/audit-sqlite.entity.d.ts:4","id#id":"id: string","implementation-of-3#Implementation of":"FederatedEntityInterface.id","inherited-from-4#Inherited from":"CommonSqliteEntity.id","source-3#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/common/common-sqlite.entity.d.ts:4","provider#provider":"provider: string\nprovider","implementation-of-4#Implementation of":"FederatedEntityInterface.provider","source-4#Source":".tmp/repos/rockets/packages/nestjs-federated/src/entities/federated-sqlite.entity.ts:18","subject#subject":"subject: string\nsubject","implementation-of-5#Implementation of":"FederatedEntityInterface.subject","source-5#Source":".tmp/repos/rockets/packages/nestjs-federated/src/entities/federated-sqlite.entity.ts:24","user#user":"user: ReferenceIdInterface<string>\nUser","implementation-of-6#Implementation of":"FederatedEntityInterface.user","source-6#Source":".tmp/repos/rockets/packages/nestjs-federated/src/entities/federated-sqlite.entity.ts:29","version#version":"version: number\nVersion","implementation-of-7#Implementation of":"FederatedEntityInterface.version","inherited-from-5#Inherited from":"CommonSqliteEntity.version","source-7#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/audit/audit-sqlite.entity.d.ts:6"}},"/reference/rockets/nestjs-federated/globals":{"title":"@concepta/nestjs-federated","data":{"":"@concepta/nestjs-federated • DocsPackages Example / @concepta/nestjs-federated","classes#Classes":"FederatedCreateDto\nFederatedDto\nFederatedModule\nFederatedOAuthService\nFederatedPostgresEntity\nFederatedService\nFederatedSqliteEntity\nFederatedUpdateDto","interfaces#Interfaces":"FederatedCredentialsInterface\nFederatedEntityInterface\nFederatedUserLookupServiceInterface\nFederatedUserMutateServiceInterface"}},"/reference/rockets/nestjs-federated/classes/FederatedUpdateDto":{"title":"Class: FederatedUpdateDto","data":{"":"@concepta/nestjs-federated • DocsPackages Example / @concepta/nestjs-federated / FederatedUpdateDtoFederated Update DTO","extends#Extends":"Pick<FederatedDto, \"provider\" | \"subject\">","implements#Implements":"FederatedUpdatableInterface","constructors#Constructors":"","new-federatedupdatedto#new FederatedUpdateDto()":"new FederatedUpdateDto(...args): FederatedUpdateDto","parameters#Parameters":"• ...args: any[]","returns#Returns":"FederatedUpdateDto","inherited-from#Inherited from":"PickType(FederatedDto, ['provider', 'subject'] as const).constructor","source#Source":".tmp/repos/rockets/node_modules/@nestjs/common/interfaces/type.interface.d.ts:2","properties#Properties":"","provider#provider":"provider: string = ''\nprovider","implementation-of#Implementation of":"FederatedUpdatableInterface.provider","inherited-from-1#Inherited from":"PickType(FederatedDto, ['provider', 'subject'] as const).provider","source-1#Source":".tmp/repos/rockets/packages/nestjs-federated/src/dto/federated.dto.ts:25","subject#subject":"subject: string = ''\nsubject","implementation-of-1#Implementation of":"FederatedUpdatableInterface.subject","inherited-from-2#Inherited from":"PickType(FederatedDto, ['provider', 'subject'] as const).subject","source-2#Source":".tmp/repos/rockets/packages/nestjs-federated/src/dto/federated.dto.ts:36","arguments#arguments":"static arguments: any","inherited-from-3#Inherited from":"PickType(FederatedDto, ['provider', 'subject'] as const).arguments","source-3#Source":"node_modules/typescript/lib/lib.es5.d.ts:304","caller#caller":"static caller: Function","inherited-from-4#Inherited from":"PickType(FederatedDto, ['provider', 'subject'] as const).caller","source-4#Source":"node_modules/typescript/lib/lib.es5.d.ts:305","length#length":"static readonly length: number","inherited-from-5#Inherited from":"PickType(FederatedDto, ['provider', 'subject'] as const).length","source-5#Source":"node_modules/typescript/lib/lib.es5.d.ts:301","name#name":"static readonly name: string\nReturns the name of the function. Function names are read-only and can not be changed.","inherited-from-6#Inherited from":"PickType(FederatedDto, ['provider', 'subject'] as const).name","source-6#Source":"node_modules/typescript/lib/lib.es2015.core.d.ts:97","methods#Methods":"","hasinstance#[hasInstance]()":"static [hasInstance](value): boolean\nDetermines whether the given value inherits from this function if this function was used\r\nas a constructor function.A constructor function can control which objects are recognized as its instances by\r\n'instanceof' by overriding this method.","parameters-1#Parameters":"• value: any","returns-1#Returns":"boolean","inherited-from-7#Inherited from":"PickType(FederatedDto, ['provider', 'subject'] as const).[hasInstance]","source-7#Source":"node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts:162","apply#apply()":"static apply(this, thisArg, argArray?): any\nCalls the function, substituting the specified object for the this value of the function, and the specified array for the arguments of the function.","parameters-2#Parameters":"• this: Function• thisArg: anyThe object to be used as the this object.• argArray?: anyA set of arguments to be passed to the function.","returns-2#Returns":"any","inherited-from-8#Inherited from":"PickType(FederatedDto, ['provider', 'subject'] as const).apply","source-8#Source":"node_modules/typescript/lib/lib.es5.d.ts:280","bind#bind()":"static bind(this, thisArg, ...argArray): any\nFor a given function, creates a bound function that has the same body as the original function.\r\nThe this object of the bound function is associated with the specified object, and has the specified initial parameters.","parameters-3#Parameters":"• this: Function• thisArg: anyAn object to which the this keyword can refer inside the new function.• ...argArray: any[]A list of arguments to be passed to the new function.","returns-3#Returns":"any","inherited-from-9#Inherited from":"PickType(FederatedDto, ['provider', 'subject'] as const).bind","source-9#Source":"node_modules/typescript/lib/lib.es5.d.ts:295","call#call()":"static call(this, thisArg, ...argArray): any\nCalls a method of an object, substituting another object for the current object.","parameters-4#Parameters":"• this: Function• thisArg: anyThe object to be used as the current object.• ...argArray: any[]A list of arguments to be passed to the method.","returns-4#Returns":"any","inherited-from-10#Inherited from":"PickType(FederatedDto, ['provider', 'subject'] as const).call","source-10#Source":"node_modules/typescript/lib/lib.es5.d.ts:287","tostring#toString()":"static toString(): string\nReturns a string representation of a function.","returns-5#Returns":"string","inherited-from-11#Inherited from":"PickType(FederatedDto, ['provider', 'subject'] as const).toString","source-11#Source":"node_modules/typescript/lib/lib.es5.d.ts:298"}},"/reference/rockets/nestjs-federated/interfaces/FederatedEntityInterface":{"title":"Interface: FederatedEntityInterface","data":{"":"@concepta/nestjs-federated • DocsPackages Example / @concepta/nestjs-federated / FederatedEntityInterfaceIdentifiable by id.","see#See":"https://en.wikipedia.org/wiki/Reference_(computer_science)","extends#Extends":"FederatedInterface","properties#Properties":"","datecreated#dateCreated":"dateCreated: Date","inherited-from#Inherited from":"FederatedInterface.dateCreated","source#Source":".tmp/repos/rockets/packages/ts-core/dist/audit/interfaces/audit-date-created.interface.d.ts:3","datedeleted#dateDeleted":"dateDeleted: AuditDateDeleted","inherited-from-1#Inherited from":"FederatedInterface.dateDeleted","source-1#Source":".tmp/repos/rockets/packages/ts-core/dist/audit/interfaces/audit-date-deleted.interface.d.ts:3","dateupdated#dateUpdated":"dateUpdated: Date","inherited-from-2#Inherited from":"FederatedInterface.dateUpdated","source-2#Source":".tmp/repos/rockets/packages/ts-core/dist/audit/interfaces/audit-date-updated.interface.d.ts:3","id#id":"id: string","inherited-from-3#Inherited from":"FederatedInterface.id","source-3#Source":".tmp/repos/rockets/packages/ts-core/dist/references/interfaces/reference-id.interface.d.ts:3","provider#provider":"provider: string\nProvider name (github, facebook, etc)","inherited-from-4#Inherited from":"FederatedInterface.provider","source-4#Source":".tmp/repos/rockets/packages/ts-common/dist/federated/interfaces/federated.interface.d.ts:3","subject#subject":"subject: string\nThe reference identification for provider","todo#Todo":"rename to sub via ReferenceSubjectInterface","inherited-from-5#Inherited from":"FederatedInterface.subject","source-5#Source":".tmp/repos/rockets/packages/ts-common/dist/federated/interfaces/federated.interface.d.ts:4","user#user":"user: ReferenceIdInterface<string>\nThe user federated will be associated to","inherited-from-6#Inherited from":"FederatedInterface.user","source-6#Source":".tmp/repos/rockets/packages/ts-common/dist/federated/interfaces/federated.interface.d.ts:5","version#version":"version: number","inherited-from-7#Inherited from":"FederatedInterface.version","source-7#Source":".tmp/repos/rockets/packages/ts-core/dist/audit/interfaces/audit-version.interface.d.ts:3"}},"/reference/rockets/nestjs-federated/interfaces/FederatedCredentialsInterface":{"title":"Interface: FederatedCredentialsInterface","data":{"":"@concepta/nestjs-federated • DocsPackages Example / @concepta/nestjs-federated / FederatedCredentialsInterfaceCredentials Interface","extends#Extends":"ReferenceIdInterface.ReferenceUsernameInterface.ReferenceEmailInterface","properties#Properties":"","email#email":"email: string","inherited-from#Inherited from":"ReferenceEmailInterface.email","source#Source":".tmp/repos/rockets/packages/ts-core/dist/references/interfaces/reference-email.interface.d.ts:3","id#id":"id: string","inherited-from-1#Inherited from":"ReferenceIdInterface.id","source-1#Source":".tmp/repos/rockets/packages/ts-core/dist/references/interfaces/reference-id.interface.d.ts:3","username#username":"username: string","inherited-from-2#Inherited from":"ReferenceUsernameInterface.username","source-2#Source":".tmp/repos/rockets/packages/ts-core/dist/references/interfaces/reference-username.interface.d.ts:3"}},"/reference/rockets/nestjs-federated/interfaces/FederatedUserLookupServiceInterface":{"title":"Interface: FederatedUserLookupServiceInterface","data":{"":"@concepta/nestjs-federated • DocsPackages Example / @concepta/nestjs-federated / FederatedUserLookupServiceInterface","extends#Extends":"LookupIdInterface<ReferenceId, FederatedCredentialsInterface, QueryOptionsInterface>.LookupEmailInterface<ReferenceEmail, FederatedCredentialsInterface, QueryOptionsInterface>","properties#Properties":"","byemail#byEmail()":"byEmail: (email, options?) => Promise<null | FederatedCredentialsInterface>","parameters#Parameters":"• email: string• options?: QueryOptionsInterface","returns#Returns":"Promise<null | FederatedCredentialsInterface>","inherited-from#Inherited from":"LookupEmailInterface.byEmail","source#Source":".tmp/repos/rockets/packages/ts-core/dist/references/interfaces/lookup/lookup-email.interface.d.ts:5","byid#byId()":"byId: (id, options?) => Promise<null | FederatedCredentialsInterface>","parameters-1#Parameters":"• id: string• options?: QueryOptionsInterface","returns-1#Returns":"Promise<null | FederatedCredentialsInterface>","inherited-from-1#Inherited from":"LookupIdInterface.byId","source-1#Source":".tmp/repos/rockets/packages/ts-core/dist/references/interfaces/lookup/lookup-id.interface.d.ts:5"}},"/reference/rockets/nestjs-federated/interfaces/FederatedUserMutateServiceInterface":{"title":"Interface: FederatedUserMutateServiceInterface","data":{"":"@concepta/nestjs-federated • DocsPackages Example / @concepta/nestjs-federated / FederatedUserMutateServiceInterface","extends#Extends":"CreateOneInterface<FederatedUserMutateInterface, FederatedCredentialsInterface, QueryOptionsInterface>","properties#Properties":"","create#create()":"create: (object, options?) => Promise<FederatedCredentialsInterface>","parameters#Parameters":"• object: FederatedUserMutateInterface• options?: QueryOptionsInterface","returns#Returns":"Promise<FederatedCredentialsInterface>","inherited-from#Inherited from":"CreateOneInterface.create","source#Source":".tmp/repos/rockets/packages/ts-core/dist/references/interfaces/mutate/create-one.interface.d.ts:4"}},"/reference/rockets/nestjs-invitation/README":{"title":"Rockets NestJS Invitation","data":{"":"@concepta/nestjs-invitation • DocsPackages Example / @concepta/nestjs-invitationInvite user by email","project#Project":"","installation#Installation":"yarn add @concepta/nestjs-invitation"}},"/reference/rockets/nestjs-invitation/classes/InvitationAcceptedEventAsync":{"title":"Class: InvitationAcceptedEventAsync","data":{"":"@concepta/nestjs-invitation • DocsPackages Example / @concepta/nestjs-invitation / InvitationAcceptedEventAsyncAbstract async event class.To create a custom async event, extend the\nEventAsync class.You can override and customize the [payload]Event#payload getter\nif desired. Please read the documentation for the abstract Event class\nfor the complete documentation.For synchronous events, see the EventSync abstract class.","example#Example":"// event payload type\ntype MyPayloadType = {id: number, active: boolean};\n// event class\nclass MyEvent extends EventAsync<MyPayloadType> {}\n// create an event\nconst myEvent = new MyEvent({id: 1234, active: true});","extends#Extends":"EventAsync<InvitationAcceptedEventPayloadInterface, boolean>","constructors#Constructors":"","new-invitationacceptedeventasync#new InvitationAcceptedEventAsync()":"new InvitationAcceptedEventAsync(payload?): InvitationAcceptedEventAsync","parameters#Parameters":"• payload?: InvitationAcceptedEventPayloadInterface","returns#Returns":"InvitationAcceptedEventAsync","inherited-from#Inherited from":"EventAsync.constructor","source#Source":"packages/nestjs-event/dist/events/event.d.ts:8","properties#Properties":"","expectsreturnof#expectsReturnOf":"readonly expectsReturnOf: Promise<boolean>\nExpects return of payload","inherited-from-1#Inherited from":"EventAsync.expectsReturnOf","source-1#Source":"packages/nestjs-event/dist/events/event.d.ts:4","accessors#Accessors":"","key#key":"get key(): string\nEvent key.","returns-1#Returns":"stringThe event key string.","source-2#Source":"packages/nestjs-event/dist/events/event.d.ts:6","payload#payload":"get payload(): P\nReturns payload that was passed to the Event constructor.","returns-2#Returns":"PThe payload.","source-3#Source":"packages/nestjs-event/dist/events/event.d.ts:9","key-1#key":"get static key(): string\nEvent key.","returns-3#Returns":"stringThe event key string.","source-4#Source":"packages/nestjs-event/dist/events/event.d.ts:5"}},"/reference/rockets/nestjs-invitation/classes/InvitationController":{"title":"Class: InvitationController","data":{"":"@concepta/nestjs-invitation • DocsPackages Example / @concepta/nestjs-invitation / InvitationController","implements#Implements":"CrudControllerInterface<InvitationInterface, InvitationCreatableInterface, InvitationCreatableInterface>","constructors#Constructors":"","new-invitationcontroller#new InvitationController()":"new InvitationController(invitationSendService, invitationCrudService): InvitationController","parameters#Parameters":"• invitationSendService: InvitationSendService• invitationCrudService: InvitationCrudService","returns#Returns":"InvitationController","source#Source":"packages/nestjs-invitation/src/controllers/invitation.controller.ts:54","properties#Properties":"","invitationcrudservice#invitationCrudService":"private readonly invitationCrudService: InvitationCrudService","source-1#Source":"packages/nestjs-invitation/src/controllers/invitation.controller.ts:56","invitationsendservice#invitationSendService":"private readonly invitationSendService: InvitationSendService","source-2#Source":"packages/nestjs-invitation/src/controllers/invitation.controller.ts:55","methods#Methods":"","createonecustom#createOneCustom()":"createOneCustom(crudRequest, invitationCreateDto): Promise<undefined | InvitationEntityInterface>","parameters-1#Parameters":"• crudRequest: CrudRequestInterface• invitationCreateDto: InvitationCreateDto","returns-1#Returns":"Promise<undefined | InvitationEntityInterface>","source-3#Source":"packages/nestjs-invitation/src/controllers/invitation.controller.ts:82","deleteone#deleteOne()":"deleteOne(crudRequest): Promise<void | InvitationEntityInterface>","parameters-2#Parameters":"• crudRequest: CrudRequestInterface","returns-2#Returns":"Promise<void | InvitationEntityInterface>","implementation-of#Implementation of":"CrudControllerInterface.deleteOne","source-4#Source":"packages/nestjs-invitation/src/controllers/invitation.controller.ts:130","getmany#getMany()":"getMany(crudRequest): Promise<InvitationEntityInterface[] | CrudResultPaginatedInterface<InvitationEntityInterface>>","parameters-3#Parameters":"• crudRequest: CrudRequestInterface","returns-3#Returns":"Promise<InvitationEntityInterface[] | CrudResultPaginatedInterface<InvitationEntityInterface>>","implementation-of-1#Implementation of":"CrudControllerInterface.getMany","source-5#Source":"packages/nestjs-invitation/src/controllers/invitation.controller.ts:64","getone#getOne()":"getOne(crudRequest): Promise<InvitationEntityInterface>","parameters-4#Parameters":"• crudRequest: CrudRequestInterface","returns-4#Returns":"Promise<InvitationEntityInterface>","implementation-of-2#Implementation of":"CrudControllerInterface.getOne","source-6#Source":"packages/nestjs-invitation/src/controllers/invitation.controller.ts:73"}},"/reference/rockets/nestjs-invitation/classes/InvitationGetUserEventAsync":{"title":"Class: InvitationGetUserEventAsync","data":{"":"@concepta/nestjs-invitation • DocsPackages Example / @concepta/nestjs-invitation / InvitationGetUserEventAsyncAbstract async event class.To create a custom async event, extend the\nEventAsync class.You can override and customize the [payload]Event#payload getter\nif desired. Please read the documentation for the abstract Event class\nfor the complete documentation.For synchronous events, see the EventSync abstract class.","example#Example":"// event payload type\ntype MyPayloadType = {id: number, active: boolean};\n// event class\nclass MyEvent extends EventAsync<MyPayloadType> {}\n// create an event\nconst myEvent = new MyEvent({id: 1234, active: true});","extends#Extends":"EventAsync<InvitationGetUserEventPayloadInterface, InvitationGetUserEventResponseInterface>","constructors#Constructors":"","new-invitationgetusereventasync#new InvitationGetUserEventAsync()":"new InvitationGetUserEventAsync(payload?): InvitationGetUserEventAsync","parameters#Parameters":"• payload?: InvitationGetUserEventPayloadInterface","returns#Returns":"InvitationGetUserEventAsync","inherited-from#Inherited from":"EventAsync.constructor","source#Source":"packages/nestjs-event/dist/events/event.d.ts:8","properties#Properties":"","expectsreturnof#expectsReturnOf":"readonly expectsReturnOf: Promise<InvitationGetUserEventResponseInterface>\nExpects return of payload","inherited-from-1#Inherited from":"EventAsync.expectsReturnOf","source-1#Source":"packages/nestjs-event/dist/events/event.d.ts:4","accessors#Accessors":"","key#key":"get key(): string\nEvent key.","returns-1#Returns":"stringThe event key string.","source-2#Source":"packages/nestjs-event/dist/events/event.d.ts:6","payload#payload":"get payload(): P\nReturns payload that was passed to the Event constructor.","returns-2#Returns":"PThe payload.","source-3#Source":"packages/nestjs-event/dist/events/event.d.ts:9","key-1#key":"get static key(): string\nEvent key.","returns-3#Returns":"stringThe event key string.","source-4#Source":"packages/nestjs-event/dist/events/event.d.ts:5"}},"/reference/rockets/nestjs-invitation/classes/InvitationModule":{"title":"Class: InvitationModule","data":{"":"@concepta/nestjs-invitation • DocsPackages Example / @concepta/nestjs-invitation / InvitationModuleInvitation module","extends#Extends":"InvitationModuleClass","constructors#Constructors":"","new-invitationmodule#new InvitationModule()":"new InvitationModule(): InvitationModule","returns#Returns":"InvitationModule","inherited-from#Inherited from":"InvitationModuleClass.constructor","source#Source":"node_modules/@nestjs/common/module-utils/interfaces/configurable-module-cls.interface.d.ts:12","methods#Methods":"","forroot#forRoot()":"static forRoot(options): DynamicModule","parameters#Parameters":"• options: InvitationOptions","returns-1#Returns":"DynamicModule","source-1#Source":"packages/nestjs-invitation/src/invitation.module.ts:22","forrootasync#forRootAsync()":"static forRootAsync(options): DynamicModule","parameters-1#Parameters":"• options: InvitationAsyncOptions","returns-2#Returns":"DynamicModule","source-2#Source":"packages/nestjs-invitation/src/invitation.module.ts:26","register#register()":"static register(options): DynamicModule","parameters-2#Parameters":"• options: InvitationOptions","returns-3#Returns":"DynamicModule","overrides#Overrides":"InvitationModuleClass.register","source-3#Source":"packages/nestjs-invitation/src/invitation.module.ts:14","registerasync#registerAsync()":"static registerAsync(options): DynamicModule","parameters-3#Parameters":"• options: InvitationAsyncOptions","returns-4#Returns":"DynamicModule","overrides-1#Overrides":"InvitationModuleClass.registerAsync","source-4#Source":"packages/nestjs-invitation/src/invitation.module.ts:18"}},"/reference/rockets/nestjs-invitation/classes/InvitationPostgresEntity":{"title":"Class: abstract InvitationPostgresEntity","data":{"":"@concepta/nestjs-invitation • DocsPackages Example / @concepta/nestjs-invitation / InvitationPostgresEntityAudit Postgres Embed","extends#Extends":"CommonPostgresEntity","implements#Implements":"InvitationEntityInterface","constructors#Constructors":"","new-invitationpostgresentity#new InvitationPostgresEntity()":"new InvitationPostgresEntity(): InvitationPostgresEntity","returns#Returns":"InvitationPostgresEntity","inherited-from#Inherited from":"CommonPostgresEntity.constructor","properties#Properties":"","active#active":"active: boolean","implementation-of#Implementation of":"InvitationEntityInterface.active","source#Source":"packages/nestjs-invitation/src/entities/invitation-postgres.entity.ts:14","category#category":"category: string","implementation-of-1#Implementation of":"InvitationEntityInterface.category","source-1#Source":"packages/nestjs-invitation/src/entities/invitation-postgres.entity.ts:23","code#code":"code: string","implementation-of-2#Implementation of":"InvitationEntityInterface.code","source-2#Source":"packages/nestjs-invitation/src/entities/invitation-postgres.entity.ts:20","constraints#constraints?":"optional constraints: LiteralObject","implementation-of-3#Implementation of":"InvitationEntityInterface.constraints","source-3#Source":"packages/nestjs-invitation/src/entities/invitation-postgres.entity.ts:26","datecreated#dateCreated":"dateCreated: Date\nDate created.","implementation-of-4#Implementation of":"InvitationEntityInterface.dateCreated","inherited-from-1#Inherited from":"CommonPostgresEntity.dateCreated","source-4#Source":"packages/typeorm-common/dist/entities/audit/audit-postgres.entity.d.ts:3","datedeleted#dateDeleted":"dateDeleted: AuditDateDeleted\nDate deleted.","implementation-of-5#Implementation of":"InvitationEntityInterface.dateDeleted","inherited-from-2#Inherited from":"CommonPostgresEntity.dateDeleted","source-5#Source":"packages/typeorm-common/dist/entities/audit/audit-postgres.entity.d.ts:5","dateupdated#dateUpdated":"dateUpdated: Date\nDate updated.","implementation-of-6#Implementation of":"InvitationEntityInterface.dateUpdated","inherited-from-3#Inherited from":"CommonPostgresEntity.dateUpdated","source-6#Source":"packages/typeorm-common/dist/entities/audit/audit-postgres.entity.d.ts:4","email#email":"email: string","implementation-of-7#Implementation of":"InvitationEntityInterface.email","source-7#Source":"packages/nestjs-invitation/src/entities/invitation-postgres.entity.ts:17","id#id":"id: string","implementation-of-8#Implementation of":"InvitationEntityInterface.id","inherited-from-4#Inherited from":"CommonPostgresEntity.id","source-8#Source":"packages/typeorm-common/dist/entities/common/common-postgres.entity.d.ts:4","user#user":"user: ReferenceIdInterface<string>","implementation-of-9#Implementation of":"InvitationEntityInterface.user","source-9#Source":"packages/nestjs-invitation/src/entities/invitation-postgres.entity.ts:28","version#version":"version: number\nVersion","implementation-of-10#Implementation of":"InvitationEntityInterface.version","inherited-from-5#Inherited from":"CommonPostgresEntity.version","source-10#Source":"packages/typeorm-common/dist/entities/audit/audit-postgres.entity.d.ts:6"}},"/reference/rockets/nestjs-invitation/classes/InvitationSqliteEntity":{"title":"Class: abstract InvitationSqliteEntity","data":{"":"@concepta/nestjs-invitation • DocsPackages Example / @concepta/nestjs-invitation / InvitationSqliteEntityAudit SqlLite Embed","extends#Extends":"CommonSqliteEntity","implements#Implements":"InvitationEntityInterface","constructors#Constructors":"","new-invitationsqliteentity#new InvitationSqliteEntity()":"new InvitationSqliteEntity(): InvitationSqliteEntity","returns#Returns":"InvitationSqliteEntity","inherited-from#Inherited from":"CommonSqliteEntity.constructor","properties#Properties":"","active#active":"active: boolean","implementation-of#Implementation of":"InvitationEntityInterface.active","source#Source":"packages/nestjs-invitation/src/entities/invitation-sqlite.entity.ts:14","category#category":"category: string","implementation-of-1#Implementation of":"InvitationEntityInterface.category","source-1#Source":"packages/nestjs-invitation/src/entities/invitation-sqlite.entity.ts:23","code#code":"code: string","implementation-of-2#Implementation of":"InvitationEntityInterface.code","source-2#Source":"packages/nestjs-invitation/src/entities/invitation-sqlite.entity.ts:20","constraints#constraints?":"optional constraints: LiteralObject","implementation-of-3#Implementation of":"InvitationEntityInterface.constraints","source-3#Source":"packages/nestjs-invitation/src/entities/invitation-sqlite.entity.ts:26","datecreated#dateCreated":"dateCreated: Date\nDate created.","implementation-of-4#Implementation of":"InvitationEntityInterface.dateCreated","inherited-from-1#Inherited from":"CommonSqliteEntity.dateCreated","source-4#Source":"packages/typeorm-common/dist/entities/audit/audit-sqlite.entity.d.ts:3","datedeleted#dateDeleted":"dateDeleted: AuditDateDeleted\nDate deleted.","implementation-of-5#Implementation of":"InvitationEntityInterface.dateDeleted","inherited-from-2#Inherited from":"CommonSqliteEntity.dateDeleted","source-5#Source":"packages/typeorm-common/dist/entities/audit/audit-sqlite.entity.d.ts:5","dateupdated#dateUpdated":"dateUpdated: Date\nDate updated.","implementation-of-6#Implementation of":"InvitationEntityInterface.dateUpdated","inherited-from-3#Inherited from":"CommonSqliteEntity.dateUpdated","source-6#Source":"packages/typeorm-common/dist/entities/audit/audit-sqlite.entity.d.ts:4","email#email":"email: string","implementation-of-7#Implementation of":"InvitationEntityInterface.email","source-7#Source":"packages/nestjs-invitation/src/entities/invitation-sqlite.entity.ts:17","id#id":"id: string","implementation-of-8#Implementation of":"InvitationEntityInterface.id","inherited-from-4#Inherited from":"CommonSqliteEntity.id","source-8#Source":"packages/typeorm-common/dist/entities/common/common-sqlite.entity.d.ts:4","user#user":"user: ReferenceIdInterface<string>","implementation-of-9#Implementation of":"InvitationEntityInterface.user","source-9#Source":"packages/nestjs-invitation/src/entities/invitation-sqlite.entity.ts:28","version#version":"version: number\nVersion","implementation-of-10#Implementation of":"InvitationEntityInterface.version","inherited-from-5#Inherited from":"CommonSqliteEntity.version","source-10#Source":"packages/typeorm-common/dist/entities/audit/audit-sqlite.entity.d.ts:6"}},"/reference/rockets/nestjs-invitation/classes/InvitationService":{"title":"Class: InvitationService","data":{"":"@concepta/nestjs-invitation • DocsPackages Example / @concepta/nestjs-invitation / InvitationService","implements#Implements":"InvitationServiceInterface","constructors#Constructors":"","new-invitationservice#new InvitationService()":"new InvitationService(invitationSendService, invitationAcceptanceService, invitationRevocationService): InvitationService","parameters#Parameters":"• invitationSendService: InvitationSendService• invitationAcceptanceService: InvitationAcceptanceService• invitationRevocationService: InvitationRevocationService","returns#Returns":"InvitationService","source#Source":"packages/nestjs-invitation/src/services/invitation.service.ts:17","properties#Properties":"","invitationacceptanceservice#invitationAcceptanceService":"private readonly invitationAcceptanceService: InvitationAcceptanceService","source-1#Source":"packages/nestjs-invitation/src/services/invitation.service.ts:19","invitationrevocationservice#invitationRevocationService":"private readonly invitationRevocationService: InvitationRevocationService","source-2#Source":"packages/nestjs-invitation/src/services/invitation.service.ts:20","invitationsendservice#invitationSendService":"private readonly invitationSendService: InvitationSendService","source-3#Source":"packages/nestjs-invitation/src/services/invitation.service.ts:18","methods#Methods":"","accept#accept()":"accept(invitationDto, passcode, payload?, queryOptions?): Promise<boolean>\nActivate user's account by providing its OTP passcode and the new password.","parameters-1#Parameters":"• invitationDto: InvitationDto• passcode: string• payload?: LiteralObject<unknown>• queryOptions?: QueryOptionsInterface","returns-1#Returns":"Promise<boolean>","implementation-of#Implementation of":"InvitationServiceInterface.accept","source-4#Source":"packages/nestjs-invitation/src/services/invitation.service.ts:35","revokeall#revokeAll()":"revokeAll(email, category, queryOptions?): Promise<void>\nRevoke all invitations by email and category.","parameters-2#Parameters":"• email: stringuser email• category: string• queryOptions?: QueryOptionsInterface","returns-2#Returns":"Promise<void>","implementation-of-1#Implementation of":"InvitationServiceInterface.revokeAll","source-5#Source":"packages/nestjs-invitation/src/services/invitation.service.ts:55","send#send()":"send(user, code, category, queryOptions?): Promise<void>","parameters-3#Parameters":"• user: ReferenceIdInterface<string> & ReferenceEmailInterface<string>• code: string• category: string• queryOptions?: QueryOptionsInterface","returns-3#Returns":"Promise<void>","implementation-of-2#Implementation of":"InvitationServiceInterface.send","source-6#Source":"packages/nestjs-invitation/src/services/invitation.service.ts:23"}},"/reference/rockets/nestjs-invitation/globals":{"title":"@concepta/nestjs-invitation","data":{"":"@concepta/nestjs-invitation • DocsPackages Example / @concepta/nestjs-invitation","classes#Classes":"InvitationAcceptedEventAsync\nInvitationController\nInvitationGetUserEventAsync\nInvitationModule\nInvitationPostgresEntity\nInvitationService\nInvitationSqliteEntity"}},"/reference/rockets/nestjs-jwt/README":{"title":"Rockets NestJS JWT","data":{"":"@concepta/nestjs-jwt • DocsPackages Example / @concepta/nestjs-jwtA flexible JWT utilities module for signing and validating tokens.This module extends/wraps the @nestjs/jwt module.","project#Project":"","overview#Overview":"The module exports three services: JwtSignService, JwtIssueService, and JwtVerifyService.The JwtSignService maintains two separate JwtService instances from the @nestjs/jwt module,\none for managing access tokens and one for managing refresh tokens.\nEach one can be configured separately at registration time for maximum flexibility.The JwtIssueService and JwtVerifyService use the JwtSignService internally for generating\nand validating tokens.","installation#Installation":"yarn add @concepta/nestjs-jwt","configuration#Configuration":"ENV\nAdvanced","env#ENV":"Configurations available via environment.\nVariable\tType\tDefault\t\tJWT_MODULE_ACCESS_SECRET\t<string | Buffer>\trandomUUID() * see note\tAccess token secret\tJWT_MODULE_ACCESS_EXPIRES_IN\t<string | number>\t'1h'\tAccess token expiration length\tJWT_MODULE_REFRESH_SECRET\t<string | Buffer>\tcopied from access secret\tRefresh token secret\tJWT_MODULE_REFRESH_EXPIRES_IN\t<string | number>\t'1y'\tRefresh token expiration length\t\n* For security reasons, a random UUID will only be generated for the default secret when NODE_ENV !== 'production'.","advanced#Advanced":"It is possible to override all services at registration time with a custom service that\nmeets their respective interfaces."}},"/reference/rockets/nestjs-jwt/classes/JwtIssueService":{"title":"Class: JwtIssueService","data":{"":"@concepta/nestjs-jwt • DocsPackages Example / @concepta/nestjs-jwt / JwtIssueService","implements#Implements":"JwtIssueServiceInterface","constructors#Constructors":"","new-jwtissueservice#new JwtIssueService()":"new JwtIssueService(jwtSignService): JwtIssueService","parameters#Parameters":"• jwtSignService: JwtSignService","returns#Returns":"JwtIssueService","source#Source":"packages/nestjs-jwt/src/services/jwt-issue.service.ts:7","properties#Properties":"","jwtsignservice#jwtSignService":"protected readonly jwtSignService: JwtSignService","source-1#Source":"packages/nestjs-jwt/src/services/jwt-issue.service.ts:7","methods#Methods":"","accesstoken#accessToken()":"accessToken(...args): Promise<string>","parameters-1#Parameters":"• ...args: [string | object | Buffer, JwtSignOptions]","returns-1#Returns":"Promise<string>","implementation-of#Implementation of":"JwtIssueServiceInterface.accessToken","source-2#Source":"packages/nestjs-jwt/src/services/jwt-issue.service.ts:9","refreshtoken#refreshToken()":"refreshToken(...args): Promise<string>","parameters-2#Parameters":"• ...args: [string | object | Buffer, JwtSignOptions]","returns-2#Returns":"Promise<string>","implementation-of-1#Implementation of":"JwtIssueServiceInterface.refreshToken","source-3#Source":"packages/nestjs-jwt/src/services/jwt-issue.service.ts:15"}},"/reference/rockets/nestjs-jwt/classes/JwtModule":{"title":"Class: JwtModule","data":{"":"@concepta/nestjs-jwt • DocsPackages Example / @concepta/nestjs-jwt / JwtModule","extends#Extends":"JwtModuleClass","constructors#Constructors":"","new-jwtmodule#new JwtModule()":"new JwtModule(): JwtModule","returns#Returns":"JwtModule","inherited-from#Inherited from":"JwtModuleClass.constructor","source#Source":"node_modules/@nestjs/common/module-utils/interfaces/configurable-module-cls.interface.d.ts:12","methods#Methods":"","forfeature#forFeature()":"static forFeature(options): DynamicModule","parameters#Parameters":"• options: JwtOptions","returns-1#Returns":"DynamicModule","source-1#Source":"packages/nestjs-jwt/src/jwt.module.ts:30","forroot#forRoot()":"static forRoot(options): DynamicModule","parameters-1#Parameters":"• options: JwtOptions","returns-2#Returns":"DynamicModule","source-2#Source":"packages/nestjs-jwt/src/jwt.module.ts:22","forrootasync#forRootAsync()":"static forRootAsync(options): DynamicModule","parameters-2#Parameters":"• options: JwtAsyncOptions","returns-3#Returns":"DynamicModule","source-3#Source":"packages/nestjs-jwt/src/jwt.module.ts:26","register#register()":"static register(options): DynamicModule","parameters-3#Parameters":"• options: JwtOptions","returns-4#Returns":"DynamicModule","overrides#Overrides":"JwtModuleClass.register","source-4#Source":"packages/nestjs-jwt/src/jwt.module.ts:14","registerasync#registerAsync()":"static registerAsync(options): DynamicModule","parameters-4#Parameters":"• options: JwtAsyncOptions","returns-5#Returns":"DynamicModule","overrides-1#Overrides":"JwtModuleClass.registerAsync","source-5#Source":"packages/nestjs-jwt/src/jwt.module.ts:18"}},"/reference/rockets/nestjs-jwt/classes/JwtStrategy":{"title":"Class: JwtStrategy","data":{"":"@concepta/nestjs-jwt • DocsPackages Example / @concepta/nestjs-jwt / JwtStrategy","extends#Extends":"Strategy","extended-by#Extended by":"","constructors#Constructors":"","new-jwtstrategy#new JwtStrategy()":"new JwtStrategy(options, verify): JwtStrategy","parameters#Parameters":"• options: JwtStrategyOptionsInterface• verify: VerifyCallback","returns#Returns":"JwtStrategy","overrides#Overrides":"PassportStrategy.constructor","source#Source":"packages/nestjs-jwt/src/jwt.strategy.ts:7","properties#Properties":"","options#options":"private options: JwtStrategyOptionsInterface","source-1#Source":"packages/nestjs-jwt/src/jwt.strategy.ts:8","verify#verify":"private verify: VerifyCallback","source-2#Source":"packages/nestjs-jwt/src/jwt.strategy.ts:9","methods#Methods":"","authenticate#authenticate()":"authenticate(...args): void","parameters-1#Parameters":"• ...args: [Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>, any]","returns-1#Returns":"void","overrides-1#Overrides":"PassportStrategy.authenticate","source-3#Source":"packages/nestjs-jwt/src/jwt.strategy.ts:17","error#error()":"error(err): void\nInternal error while performing authentication.Strategies should call this function when an internal error occurs\nduring the process of performing authentication; for example, if the\nuser directory is not available.","parameters-2#Parameters":"• err: Error","returns-2#Returns":"void","inherited-from#Inherited from":"PassportStrategy.error","api#Api":"public","source-4#Source":"node_modules/@types/passport-strategy/index.d.ts:96","fail#fail()":"","failchallenge-status#fail(challenge, status)":"fail(challenge, status): void\nFail authentication, with optional challenge and status, defaulting\nto 401.Strategies should call this function to fail an authentication attempt.","parameters-3#Parameters":"• challenge: any(Can also be an object with 'message' and 'type' fields).• status: number","returns-3#Returns":"void","inherited-from-1#Inherited from":"PassportStrategy.fail","api-1#Api":"public","source-5#Source":"node_modules/@types/passport-strategy/index.d.ts:60","failstatus#fail(status)":"fail(status): void","parameters-4#Parameters":"• status: number","returns-4#Returns":"void","inherited-from-2#Inherited from":"PassportStrategy.fail","source-6#Source":"node_modules/@types/passport-strategy/index.d.ts:61","isverifiedcallback#isVerifiedCallback()":"private isVerifiedCallback(error, user, info): void","parameters-5#Parameters":"• error: null | Error• user: unknown• info: unknown","returns-5#Returns":"void","source-7#Source":"packages/nestjs-jwt/src/jwt.strategy.ts:52","pass#pass()":"pass(): void\nPass without making a success or fail decision.Under most circumstances, Strategies should not need to call this\nfunction.  It exists primarily to allow previous authentication state\nto be restored, for example from an HTTP session.","returns-6#Returns":"void","inherited-from-3#Inherited from":"PassportStrategy.pass","api-2#Api":"public","source-8#Source":"node_modules/@types/passport-strategy/index.d.ts:84","redirect#redirect()":"redirect(url, status?): void\nRedirect to url with optional status, defaulting to 302.Strategies should call this function to redirect the user (via their\nuser agent) to a third-party website for authentication.","parameters-6#Parameters":"• url: string• status?: number","returns-7#Returns":"void","inherited-from-4#Inherited from":"PassportStrategy.redirect","api-3#Api":"public","source-9#Source":"node_modules/@types/passport-strategy/index.d.ts:73","success#success()":"success(user, info?): void\nAuthenticate user, with optional info.Strategies should call this function to successfully authenticate a\nuser.  user should be an object supplied by the application after it\nhas been given an opportunity to verify credentials.  info is an\noptional argument containing additional user information.  This is\nuseful for third-party authentication strategies to pass profile\ndetails.","parameters-7#Parameters":"• user: any• info?: any","returns-8#Returns":"void","inherited-from-5#Inherited from":"PassportStrategy.success","api-4#Api":"public","source-10#Source":"node_modules/@types/passport-strategy/index.d.ts:48","verifytokencallback#verifyTokenCallback()":"private verifyTokenCallback(e?, decodedToken?): void","parameters-8#Parameters":"• e?: Error• decodedToken?: unknown","returns-9#Returns":"void","source-11#Source":"packages/nestjs-jwt/src/jwt.strategy.ts:37"}},"/reference/rockets/nestjs-jwt/classes/JwtSignService":{"title":"Class: JwtSignService","data":{"":"@concepta/nestjs-jwt • DocsPackages Example / @concepta/nestjs-jwt / JwtSignService","implements#Implements":"JwtSignServiceInterface","constructors#Constructors":"","new-jwtsignservice#new JwtSignService()":"new JwtSignService(jwtAccessService, jwtRefreshService): JwtSignService","parameters#Parameters":"• jwtAccessService: JwtService• jwtRefreshService: JwtService","returns#Returns":"JwtSignService","source#Source":"packages/nestjs-jwt/src/services/jwt-sign.service.ts:12","properties#Properties":"","jwtaccessservice#jwtAccessService":"protected readonly jwtAccessService: JwtService","source-1#Source":"packages/nestjs-jwt/src/services/jwt-sign.service.ts:14","jwtrefreshservice#jwtRefreshService":"protected readonly jwtRefreshService: JwtService","source-2#Source":"packages/nestjs-jwt/src/services/jwt-sign.service.ts:16","methods#Methods":"","decode#decode()":"decode(tokenType, ...rest): null | string | object","parameters-1#Parameters":"• tokenType: JwtTokenType• ...rest: [string, DecodeOptions]","returns-1#Returns":"null | string | object","implementation-of#Implementation of":"JwtSignServiceInterface.decode","source-3#Source":"packages/nestjs-jwt/src/services/jwt-sign.service.ts:33","service#service()":"private service(tokenType): JwtService","parameters-2#Parameters":"• tokenType: JwtTokenType","returns-2#Returns":"JwtService","source-4#Source":"packages/nestjs-jwt/src/services/jwt-sign.service.ts:37","signasync#signAsync()":"signAsync(tokenType, ...rest): Promise<string>","parameters-3#Parameters":"• tokenType: JwtTokenType• ...rest: [string | object | Buffer, JwtSignOptions]","returns-3#Returns":"Promise<string>","implementation-of-1#Implementation of":"JwtSignServiceInterface.signAsync","source-5#Source":"packages/nestjs-jwt/src/services/jwt-sign.service.ts:19","verifyasync#verifyAsync()":"verifyAsync(tokenType, ...rest): Promise<any>","parameters-4#Parameters":"• tokenType: JwtTokenType• ...rest: [string, JwtVerifyOptions]","returns-4#Returns":"Promise<any>","implementation-of-2#Implementation of":"JwtSignServiceInterface.verifyAsync","source-6#Source":"packages/nestjs-jwt/src/services/jwt-sign.service.ts:26"}},"/reference/rockets/nestjs-jwt/classes/JwtVerifyService":{"title":"Class: JwtVerifyService","data":{"":"@concepta/nestjs-jwt • DocsPackages Example / @concepta/nestjs-jwt / JwtVerifyService","implements#Implements":"JwtVerifyServiceInterface","constructors#Constructors":"","new-jwtverifyservice#new JwtVerifyService()":"new JwtVerifyService(jwtSignService): JwtVerifyService","parameters#Parameters":"• jwtSignService: JwtSignService","returns#Returns":"JwtVerifyService","source#Source":"packages/nestjs-jwt/src/services/jwt-verify.service.ts:7","properties#Properties":"","jwtsignservice#jwtSignService":"protected readonly jwtSignService: JwtSignService","source-1#Source":"packages/nestjs-jwt/src/services/jwt-verify.service.ts:7","methods#Methods":"","accesstoken#accessToken()":"accessToken(...args): Promise<any>","parameters-1#Parameters":"• ...args: [string, JwtVerifyOptions]","returns-1#Returns":"Promise<any>","implementation-of#Implementation of":"JwtVerifyServiceInterface.accessToken","source-2#Source":"packages/nestjs-jwt/src/services/jwt-verify.service.ts:9","refreshtoken#refreshToken()":"refreshToken(...args): Promise<any>","parameters-2#Parameters":"• ...args: [string, JwtVerifyOptions]","returns-2#Returns":"Promise<any>","implementation-of-1#Implementation of":"JwtVerifyServiceInterface.refreshToken","source-3#Source":"packages/nestjs-jwt/src/services/jwt-verify.service.ts:15"}},"/reference/rockets/nestjs-jwt/functions/createVerifyAccessTokenCallback":{"title":"Function: createVerifyAccessTokenCallback()","data":{"":"@concepta/nestjs-jwt • DocsPackages Example / @concepta/nestjs-jwt / createVerifyAccessTokenCallback\ncreateVerifyAccessTokenCallback(verifyTokenService): JwtVerifyTokenCallback<Error, unknown>","parameters#Parameters":"• verifyTokenService: JwtVerifyServiceInterface","returns#Returns":"JwtVerifyTokenCallback<Error, unknown>","source#Source":"packages/nestjs-jwt/src/utils/create-verify-access-token-callback.util.ts:4"}},"/reference/rockets/nestjs-jwt/functions/createVerifyRefreshTokenCallback":{"title":"Function: createVerifyRefreshTokenCallback()","data":{"":"@concepta/nestjs-jwt • DocsPackages Example / @concepta/nestjs-jwt / createVerifyRefreshTokenCallback\ncreateVerifyRefreshTokenCallback(verifyTokenService): JwtVerifyTokenCallback<Error, unknown>","parameters#Parameters":"• verifyTokenService: JwtVerifyServiceInterface","returns#Returns":"JwtVerifyTokenCallback<Error, unknown>","source#Source":"packages/nestjs-jwt/src/utils/create-verify-refresh-token-callback.util.ts:4"}},"/reference/rockets/nestjs-jwt/globals":{"title":"@concepta/nestjs-jwt","data":{"":"@concepta/nestjs-jwt • DocsPackages Example / @concepta/nestjs-jwt","namespaces#Namespaces":"ExtractJwt","classes#Classes":"JwtIssueService\nJwtModule\nJwtSignService\nJwtStrategy\nJwtVerifyService","interfaces#Interfaces":"JwtFromRequestFunction\nJwtIssueServiceInterface\nJwtStrategyOptionsInterface\nJwtVerifyServiceInterface","type-aliases#Type Aliases":"JwtTokenType\nJwtVerifyTokenCallback","functions#Functions":"createVerifyAccessTokenCallback\ncreateVerifyRefreshTokenCallback"}},"/reference/rockets/nestjs-jwt/interfaces/JwtFromRequestFunction":{"title":"Interface: JwtFromRequestFunction()","data":{"":"@concepta/nestjs-jwt • DocsPackages Example / @concepta/nestjs-jwt / JwtFromRequestFunction\nJwtFromRequestFunction(req): null | string","parameters#Parameters":"• req: Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>","returns#Returns":"null | string","source#Source":"node_modules/@types/passport-jwt/index.d.ts:47"}},"/reference/rockets/nestjs-jwt/interfaces/JwtIssueServiceInterface":{"title":"Interface: JwtIssueServiceInterface","data":{"":"@concepta/nestjs-jwt • DocsPackages Example / @concepta/nestjs-jwt / JwtIssueServiceInterface","extended-by#Extended by":"","methods#Methods":"","accesstoken#accessToken()":"accessToken(...args): Promise<string>","parameters#Parameters":"• ...args: [string | object | Buffer, JwtSignOptions]","returns#Returns":"Promise<string>","source#Source":"packages/nestjs-jwt/src/interfaces/jwt-issue-service.interface.ts:4","refreshtoken#refreshToken()":"refreshToken(...args): Promise<string>","parameters-1#Parameters":"• ...args: [string | object | Buffer, JwtSignOptions]","returns-1#Returns":"Promise<string>","source-1#Source":"packages/nestjs-jwt/src/interfaces/jwt-issue-service.interface.ts:8"}},"/reference/rockets/nestjs-jwt/interfaces/JwtStrategyOptionsInterface":{"title":"Interface: JwtStrategyOptionsInterface","data":{"":"@concepta/nestjs-jwt • DocsPackages Example / @concepta/nestjs-jwt / JwtStrategyOptionsInterface","extends#Extends":"Pick<StrategyOptions, \"jwtFromRequest\">","properties#Properties":"","jwtfromrequest#jwtFromRequest":"jwtFromRequest: JwtFromRequestFunction","inherited-from#Inherited from":"Pick.jwtFromRequest","source#Source":"node_modules/@types/passport-jwt/index.d.ts:25","verifytoken#verifyToken":"verifyToken: JwtVerifyTokenCallback<Error, unknown>","source-1#Source":"packages/nestjs-jwt/src/interfaces/jwt-strategy-options.interface.ts:6"}},"/reference/rockets/nestjs-jwt/interfaces/JwtVerifyServiceInterface":{"title":"Interface: JwtVerifyServiceInterface","data":{"":"@concepta/nestjs-jwt • DocsPackages Example / @concepta/nestjs-jwt / JwtVerifyServiceInterface","extended-by#Extended by":"","methods#Methods":"","accesstoken#accessToken()":"accessToken(...args): Promise<object>","parameters#Parameters":"• ...args: [string, JwtVerifyOptions]","returns#Returns":"Promise<object>","source#Source":"packages/nestjs-jwt/src/interfaces/jwt-verify-service.interface.ts:4","refreshtoken#refreshToken()":"refreshToken(...args): Promise<object>","parameters-1#Parameters":"• ...args: [string, JwtVerifyOptions]","returns-1#Returns":"Promise<object>","source-1#Source":"packages/nestjs-jwt/src/interfaces/jwt-verify-service.interface.ts:8"}},"/reference/rockets/nestjs-jwt/namespaces/ExtractJwt/README":{"title":"Namespace: ExtractJwt","data":{"":"@concepta/nestjs-jwt • DocsPackages Example / @concepta/nestjs-jwt / ExtractJwt","index#Index":"","functions#Functions":"fromAuthHeader\nfromAuthHeaderAsBearerToken\nfromAuthHeaderWithScheme\nfromBodyField\nfromExtractors\nfromHeader\nfromUrlQueryParameter"}},"/reference/rockets/nestjs-jwt/namespaces/ExtractJwt/functions/fromAuthHeader":{"title":"Function: fromAuthHeader()","data":{"":"@concepta/nestjs-jwt • DocsPackages Example / @concepta/nestjs-jwt / ExtractJwt / fromAuthHeader\nfromAuthHeader(): JwtFromRequestFunction","returns#Returns":"JwtFromRequestFunction","source#Source":"node_modules/@types/passport-jwt/index.d.ts:59"}},"/reference/rockets/nestjs-jwt/namespaces/ExtractJwt/functions/fromAuthHeaderAsBearerToken":{"title":"Function: fromAuthHeaderAsBearerToken()","data":{"":"@concepta/nestjs-jwt • DocsPackages Example / @concepta/nestjs-jwt / ExtractJwt / fromAuthHeaderAsBearerToken\nfromAuthHeaderAsBearerToken(): JwtFromRequestFunction","returns#Returns":"JwtFromRequestFunction","source#Source":"node_modules/@types/passport-jwt/index.d.ts:61"}},"/reference/rockets/nestjs-jwt/namespaces/ExtractJwt/functions/fromAuthHeaderWithScheme":{"title":"Function: fromAuthHeaderWithScheme()","data":{"":"@concepta/nestjs-jwt • DocsPackages Example / @concepta/nestjs-jwt / ExtractJwt / fromAuthHeaderWithScheme\nfromAuthHeaderWithScheme(auth_scheme): JwtFromRequestFunction","parameters#Parameters":"• auth_scheme: string","returns#Returns":"JwtFromRequestFunction","source#Source":"node_modules/@types/passport-jwt/index.d.ts:58"}},"/reference/rockets/nestjs-jwt/namespaces/ExtractJwt/functions/fromExtractors":{"title":"Function: fromExtractors()","data":{"":"@concepta/nestjs-jwt • DocsPackages Example / @concepta/nestjs-jwt / ExtractJwt / fromExtractors\nfromExtractors(extractors): JwtFromRequestFunction","parameters#Parameters":"• extractors: JwtFromRequestFunction[]","returns#Returns":"JwtFromRequestFunction","source#Source":"node_modules/@types/passport-jwt/index.d.ts:60"}},"/reference/rockets/nestjs-jwt/namespaces/ExtractJwt/functions/fromBodyField":{"title":"Function: fromBodyField()","data":{"":"@concepta/nestjs-jwt • DocsPackages Example / @concepta/nestjs-jwt / ExtractJwt / fromBodyField\nfromBodyField(field_name): JwtFromRequestFunction","parameters#Parameters":"• field_name: string","returns#Returns":"JwtFromRequestFunction","source#Source":"node_modules/@types/passport-jwt/index.d.ts:56"}},"/reference/rockets/nestjs-jwt/namespaces/ExtractJwt/functions/fromUrlQueryParameter":{"title":"Function: fromUrlQueryParameter()","data":{"":"@concepta/nestjs-jwt • DocsPackages Example / @concepta/nestjs-jwt / ExtractJwt / fromUrlQueryParameter\nfromUrlQueryParameter(param_name): JwtFromRequestFunction","parameters#Parameters":"• param_name: string","returns#Returns":"JwtFromRequestFunction","source#Source":"node_modules/@types/passport-jwt/index.d.ts:57"}},"/reference/rockets/nestjs-jwt/namespaces/ExtractJwt/functions/fromHeader":{"title":"Function: fromHeader()","data":{"":"@concepta/nestjs-jwt • DocsPackages Example / @concepta/nestjs-jwt / ExtractJwt / fromHeader\nfromHeader(header_name): JwtFromRequestFunction","parameters#Parameters":"• header_name: string","returns#Returns":"JwtFromRequestFunction","source#Source":"node_modules/@types/passport-jwt/index.d.ts:55"}},"/reference/rockets/nestjs-jwt/type-aliases/JwtTokenType":{"title":"Type alias: JwtTokenType","data":{"":"@concepta/nestjs-jwt • DocsPackages Example / @concepta/nestjs-jwt / JwtTokenType\nJwtTokenType: \"access\" | \"refresh\"","source#Source":"packages/nestjs-jwt/src/jwt.types.ts:1"}},"/reference/rockets/nestjs-jwt/type-aliases/JwtVerifyTokenCallback":{"title":"Type alias: JwtVerifyTokenCallback()<ErrorType, DecodedTokenType>","data":{"":"@concepta/nestjs-jwt • DocsPackages Example / @concepta/nestjs-jwt / JwtVerifyTokenCallback\nJwtVerifyTokenCallback<ErrorType, DecodedTokenType>: (token, done) => void","type-parameters#Type parameters":"• ErrorType extends Error = Error• DecodedTokenType extends unknown = unknown","parameters#Parameters":"• token: string• done","returns#Returns":"void","source#Source":"packages/nestjs-jwt/src/jwt.types.ts:3"}},"/reference/rockets/nestjs-logger/README":{"title":"Rockets NestJS Logger","data":{"":"@concepta/nestjs-logger • DocsPackages Example / @concepta/nestjs-loggerThis module is a drop-in replacement for the core NestJS logger that provides additonal support for pushing log data\nto one or multiple external log consumption providers.","project#Project":"","overview#Overview":"This module wraps/extends the core NestJS Logger and adds a powerful external transports plugin interface.\nSee the NestJS Logger documentation\nfor more details on how logging is implemented in NestJS.","installation#Installation":"yarn add @concepta/nestjs-logger","registering#Registering":"To start using the Logger Module, import the LoggerModule into your app.","defaults-env#Defaults (.env)":"To register using the default configuration:\n@Module({\n  imports: [\n    LoggerModule.register()\n  ]\n});\nexport class App {}\nTo use the default configuration, you need todefine the environments variables.\nOne of the ways you can do that is using .env file\n// .env file\nLOG_LEVEL=\"log,error\"\nTRANSPORT_LOG_LEVEL=\"error,warn\"\nSENTRY_DSN=\"{your_sentry_dsn}\"","synchronous-registration#Synchronous Registration":"To register by direct configuration:\n// ...\nimport { LoggerModule } from '@concepta/nestjs-logger';\n@Module({\n  imports: [\n    LoggerModule.register({\n      // ...\n    })\n  ]\n});\nexport class App {}","aynchronous-registration#Aynchronous Registration":"To register by direct configuration:\n// ...\nimport { LoggerModule } from '@concepta/nestjs-logger';\n@Module({\n  imports: [\n    LoggerModule.registerAsync({\n      imports: [ConfigModule.forFeature(myConfig)],\n      inject: [myConfig.KEY],\n      useFactory: async (\n        appConfig: MyAppOptionsInterface,\n      ): Promise<LoggerOptionsInterface> => appConfig.logger\n  ]\n});\nexport class App {}","transports#Transports":"If you define the transport to be used, it means that any method that you call from LoggerService\nwill also send the details of the log to the transport defined\n(at the moment we are only working with Sentry as external transport).You can easily create your own custom transports by developing a class that meets the interface.\n// ...\nimport { LoggerModule, LoggerSentryTransport } from '@concepta/nestjs-logger';\n@Module({\n  imports: [\n    LoggerModule.register({\n      transports: [LoggerSentryTransport],\n    })\n  ]\n});\nexport class App {}","using-loggerservice#Using LoggerService":"After importing the module with the proper configurations, you are all set to start using the LoggerService as an injected service.","setup-globally#Setup Globally":"It is a good practice to also inform nest to use the new Logger internally overwrite the default Logger in your bootstrap.\n// ...\nimport { LoggerService } from '@concepta/nestjs-logger';\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  // get reference of LoggerService From LoggerModule\n  const customLoggerService = app.get(LoggerService);\n  // this is to inform that this logger will be used globally\n  // and it will be used once you create a new Logger()\n  app.useLogger(customLoggerService);\n  await app.listen(3000);\n}\nbootstrap();\nNow any time you call a method from Logger class from @nestjs/common will be calling the same\nmethod from LoggerService from @concepta/nestjs-logger","injection#Injection":"You should be able to use the LoggerService by injecting the class, or creating a new instance of Logger.\nimport { Logger, Injectable, Inject } from '@nestjs/common';\nimport { LoggerService } from '@concepta/nestjs-logger';\n@Injectable()\nclass MyService {\n  constructor(@Inject(LoggerService) private loggerService: LoggerService) {}\n  doSomething() {\n    this.loggerService.log('Doing something...');\n  }\n}","manual-instantiation#Manual Instantiation":"import { Logger, Injectable } from '@nestjs/common';\n@Injectable()\nclass MyService {\n  private readonly logger = new Logger(MyService.name);\n  doSomething() {\n    this.logger.log('Doing something...');\n  }\n}"}},"/reference/rockets/nestjs-logger/classes/LoggerExceptionFilter":{"title":"Class: LoggerExceptionFilter","data":{"":"@concepta/nestjs-logger • DocsPackages Example / @concepta/nestjs-logger / LoggerExceptionFilterThe Logger Exception Filter ClassOut of the box, this action is performed by a built-in global exception\nfilter, which handles exceptions of type HttpException","extends#Extends":"BaseExceptionFilter","constructors#Constructors":"","new-loggerexceptionfilter#new LoggerExceptionFilter()":"new LoggerExceptionFilter(loggerService): LoggerExceptionFilter\nConstructor","parameters#Parameters":"• loggerService: LoggerService","returns#Returns":"LoggerExceptionFilter","overrides#Overrides":"BaseExceptionFilter.constructor","source#Source":"packages/nestjs-logger/src/logger-exception.filter.ts:23","properties#Properties":"","applicationref#applicationRef?":"protected optional readonly applicationRef: HttpServer<any, any>","inherited-from#Inherited from":"BaseExceptionFilter.applicationRef","source-1#Source":"node_modules/@nestjs/core/exceptions/base-exception-filter.d.ts:5","httpadapterhost#httpAdapterHost?":"protected optional readonly httpAdapterHost: HttpAdapterHost<AbstractHttpAdapter<any, any, any>>","inherited-from-1#Inherited from":"BaseExceptionFilter.httpAdapterHost","source-2#Source":"node_modules/@nestjs/core/exceptions/base-exception-filter.d.ts:7","loggerservice#loggerService":"private loggerService: LoggerService","source-3#Source":"packages/nestjs-logger/src/logger-exception.filter.ts:25","methods#Methods":"","catch#catch()":"catch(exception, host): void\nOverride catch to log before returning exception.","parameters-1#Parameters":"• exception: Error• host: ArgumentsHost","returns-1#Returns":"void","overrides-1#Overrides":"BaseExceptionFilter.catch","source-4#Source":"packages/nestjs-logger/src/logger-exception.filter.ts:36","handleunknownerror#handleUnknownError()":"handleUnknownError(exception, host, applicationRef): void","parameters-2#Parameters":"• exception: any• host: ArgumentsHost• applicationRef: HttpServer<any, any> | AbstractHttpAdapter<any, any, any>","returns-2#Returns":"void","inherited-from-2#Inherited from":"BaseExceptionFilter.handleUnknownError","source-5#Source":"node_modules/@nestjs/core/exceptions/base-exception-filter.d.ts:10","isexceptionobject#isExceptionObject()":"isExceptionObject(err): err is Error","parameters-3#Parameters":"• err: any","returns-3#Returns":"err is Error","inherited-from-3#Inherited from":"BaseExceptionFilter.isExceptionObject","source-6#Source":"node_modules/@nestjs/core/exceptions/base-exception-filter.d.ts:11","ishttperror#isHttpError()":"isHttpError(err): err is Object\nChecks if the thrown error comes from the \"http-errors\" library.","parameters-4#Parameters":"• err: anyerror object","returns-4#Returns":"err is Object","inherited-from-4#Inherited from":"BaseExceptionFilter.isHttpError","source-7#Source":"node_modules/@nestjs/core/exceptions/base-exception-filter.d.ts:16"}},"/reference/rockets/nestjs-core/globals":{"title":"@concepta/nestjs-core","data":{"":"@concepta/nestjs-core • DocsPackages Example / @concepta/nestjs-core","interfaces#Interfaces":"AsyncModuleConfig\nDeferExternalOptionsInterface\nModuleOptionsControllerInterface\nModuleOptionsSettingsInterface","functions#Functions":"createConfigurableDynamicRootModule\ndeferExternal\nnegotiateController"}},"/reference/rockets/nestjs-logger/classes/LoggerModule":{"title":"Class: LoggerModule","data":{"":"@concepta/nestjs-logger • DocsPackages Example / @concepta/nestjs-logger / LoggerModuleLogger Module imports all configuration needed for logger and sentry\nWith classes for request interceptor and Exceptions filters\nwhere will automatically log for any request or unhandled exceptions.","example#Example":"// app.module.ts\n@Module({\n  imports: [\n    LoggerModule.forRoot({logLevel: ['log', 'error']})\n  ]\n})\nexport class AppModule {}\n// main.ts\nasync function bootstrap() {\n  // create the app\n  const app = await NestFactory.create(AppModule);\n  // custom logger\n  const customLoggerService = app.get(LoggerService);\n  customLoggerService.addTransport(app.get(LoggerSentryTransport));\n  // inform app of the custom logger\n  app.useLogger(customLoggerService);\n}\n// test.class.ts\n@Injectable()\nclass TestClass {\n  // Inject Logger Service\n  constructor(@Inject(LoggerService) private loggerService: LoggerService) {}\n  doSomething() {\n    this.loggerService.log('Did something');\n  }\n}\n// my.util.ts\nfunction myHelper() {\n  const logger = new Logger(); // <-- using the global logger\n  logger.log('My helper ran'); // <-- LoggerService.log will be called\n}","extends#Extends":"LoggerModuleClass","constructors#Constructors":"","new-loggermodule#new LoggerModule()":"new LoggerModule(): LoggerModule","returns#Returns":"LoggerModule","inherited-from#Inherited from":"LoggerModuleClass.constructor","source#Source":"node_modules/@nestjs/common/module-utils/interfaces/configurable-module-cls.interface.d.ts:12","methods#Methods":"","forfeature#forFeature()":"static forFeature(options): DynamicModule","parameters#Parameters":"• options: LoggerOptions","returns-1#Returns":"DynamicModule","source-1#Source":"packages/nestjs-logger/src/logger.module.ts:76","forroot#forRoot()":"static forRoot(options): DynamicModule","parameters-1#Parameters":"• options: LoggerOptions","returns-2#Returns":"DynamicModule","source-2#Source":"packages/nestjs-logger/src/logger.module.ts:68","forrootasync#forRootAsync()":"static forRootAsync(options): DynamicModule","parameters-2#Parameters":"• options: LoggerAsyncOptions","returns-3#Returns":"DynamicModule","source-3#Source":"packages/nestjs-logger/src/logger.module.ts:72","register#register()":"static register(options): DynamicModule","parameters-3#Parameters":"• options: LoggerOptions","returns-4#Returns":"DynamicModule","overrides#Overrides":"LoggerModuleClass.register","source-4#Source":"packages/nestjs-logger/src/logger.module.ts:60","registerasync#registerAsync()":"static registerAsync(options): DynamicModule","parameters-4#Parameters":"• options: LoggerAsyncOptions","returns-5#Returns":"DynamicModule","overrides-1#Overrides":"LoggerModuleClass.registerAsync","source-5#Source":"packages/nestjs-logger/src/logger.module.ts:64"}},"/reference/rockets/nestjs-logger/classes/LoggerService":{"title":"Class: LoggerService","data":{"":"@concepta/nestjs-logger • DocsPackages Example / @concepta/nestjs-logger / LoggerServiceA service that extends the Logger class and implements LoggerServiceInterface.The LoggerService class contains the implementation of a custom Logger\nwhere it will call System logger and any third party transport log that was added.You will need to create a custom logger and we must ensure that at least one application module imports the LoggerService\nto trigger Nest to instantiate a singleton instance of our LoggerService class.","example#Example":"// Initialize a module that have the LoggerService imported\nconst app = await NestFactory.create(AppModule);\n// Get the singleton instance of LoggerService\nconst customLogger = app.get(LoggerService);\n// Get the transport instance\nconst sentry = app.get(LoggerSentryTransport);\n// Add the transports you want to use\ncustomLogger.addTransport(sentry);\n// Overwrite the the default Logger for a custom logger\n// This is to inform that this logger will new used internally\n// Or it will be used once yuo do a new Logger()\napp.useLogger(customLogger);\nawait app.listen(3000);","extends#Extends":"ConsoleLogger","implements#Implements":"LoggerServiceInterface","constructors#Constructors":"","new-loggerservice#new LoggerService()":"new LoggerService(transportService): LoggerService\nConstructor","parameters#Parameters":"• transportService: LoggerTransportServicetransport service","returns#Returns":"LoggerService","overrides#Overrides":"ConsoleLogger.constructor","source#Source":"packages/nestjs-logger/src/logger.service.ts:49","properties#Properties":"","context#context?":"protected optional context: string","inherited-from#Inherited from":"ConsoleLogger.context","source-1#Source":"node_modules/@nestjs/common/services/console-logger.service.d.ts:13","options#options":"protected options: ConsoleLoggerOptions","inherited-from-1#Inherited from":"ConsoleLogger.options","source-2#Source":"node_modules/@nestjs/common/services/console-logger.service.d.ts:14","transportservice#transportService":"protected readonly transportService: LoggerTransportService\ntransport service","source-3#Source":"packages/nestjs-logger/src/logger.service.ts:49","methods#Methods":"","addtransport#addTransport()":"addTransport(transport): void\nAdd a transport to be used for every log, it can be multiples","parameters-1#Parameters":"• transport: LoggerTransportInterfaceThe transport that will be used beside the system logger","returns-1#Returns":"void","implementation-of#Implementation of":"LoggerServiceInterface.addTransport","source-4#Source":"packages/nestjs-logger/src/logger.service.ts:58","colorize#colorize()":"protected colorize(message, logLevel): string","parameters-2#Parameters":"• message: string• logLevel: LogLevel","returns-2#Returns":"string","inherited-from-2#Inherited from":"ConsoleLogger.colorize","source-5#Source":"node_modules/@nestjs/common/services/console-logger.service.d.ts:72","debug#debug()":"debug(message, context?): void\nMethod to be used when a debug message should be logged.","parameters-3#Parameters":"• message: stringDebug Message• context?: stringContext of Message","returns-3#Returns":"void","implementation-of-1#Implementation of":"LoggerServiceInterface.debug","overrides-1#Overrides":"ConsoleLogger.debug","source-6#Source":"packages/nestjs-logger/src/logger.service.ts:144","error#error()":"error(message, trace?, context?): void\nMethod to be called when an error should be logged.","parameters-4#Parameters":"• message: stringError Message• trace?: stringStack trace error• context?: stringContext of current Message","returns-4#Returns":"void","implementation-of-2#Implementation of":"LoggerServiceInterface.error","overrides-2#Overrides":"ConsoleLogger.error","source-7#Source":"packages/nestjs-logger/src/logger.service.ts:108","exception#exception()":"exception(error, message?, context?): void\nMethod to log an exceptionIf the exception is between 400 and 500 status code\nit will be logged as a debug log level, otherwise it will be logged as an error.","parameters-5#Parameters":"• error: ErrorError to be registered• message?: stringError Message• context?: stringContext of current error","returns-5#Returns":"void","implementation-of-3#Implementation of":"LoggerServiceInterface.exception","source-8#Source":"packages/nestjs-logger/src/logger.service.ts:72","formatcontext#formatContext()":"protected formatContext(context): string","parameters-6#Parameters":"• context: string","returns-6#Returns":"string","inherited-from-3#Inherited from":"ConsoleLogger.formatContext","source-9#Source":"node_modules/@nestjs/common/services/console-logger.service.d.ts:69","formatmessage#formatMessage()":"protected formatMessage(logLevel, message, pidMessage, formattedLogLevel, contextMessage, timestampDiff): string","parameters-7#Parameters":"• logLevel: LogLevel• message: unknown• pidMessage: string• formattedLogLevel: string• contextMessage: string• timestampDiff: string","returns-7#Returns":"string","inherited-from-4#Inherited from":"ConsoleLogger.formatMessage","source-10#Source":"node_modules/@nestjs/common/services/console-logger.service.d.ts:70","formatpid#formatPid()":"protected formatPid(pid): string","parameters-8#Parameters":"• pid: number","returns-8#Returns":"string","inherited-from-5#Inherited from":"ConsoleLogger.formatPid","source-11#Source":"node_modules/@nestjs/common/services/console-logger.service.d.ts:68","formattimestampdiff#formatTimestampDiff()":"protected formatTimestampDiff(timestampDiff): string","parameters-9#Parameters":"• timestampDiff: number","returns-9#Returns":"string","inherited-from-6#Inherited from":"ConsoleLogger.formatTimestampDiff","source-12#Source":"node_modules/@nestjs/common/services/console-logger.service.d.ts:75","getcontext#getContext()":"private getContext(context?): string","parameters-10#Parameters":"• context?: string","returns-10#Returns":"string","source-13#Source":"packages/nestjs-logger/src/logger.service.ts:171","gettimestamp#getTimestamp()":"protected getTimestamp(): string","returns-11#Returns":"string","inherited-from-7#Inherited from":"ConsoleLogger.getTimestamp","source-14#Source":"node_modules/@nestjs/common/services/console-logger.service.d.ts:66","islevelenabled#isLevelEnabled()":"isLevelEnabled(level): boolean","parameters-11#Parameters":"• level: LogLevel","returns-12#Returns":"boolean","inherited-from-8#Inherited from":"ConsoleLogger.isLevelEnabled","source-15#Source":"node_modules/@nestjs/common/services/console-logger.service.d.ts:65","log#log()":"log(message, context?): void\nMethod to be used when a simple log message should be logged.","parameters-12#Parameters":"• message: stringLog message• context?: stringContext of Message","returns-13#Returns":"void","implementation-of-4#Implementation of":"LoggerServiceInterface.log","overrides-3#Overrides":"ConsoleLogger.log","source-16#Source":"packages/nestjs-logger/src/logger.service.ts:155","printmessages#printMessages()":"protected printMessages(messages, context?, logLevel?, writeStreamType?): void","parameters-13#Parameters":"• messages: unknown[]• context?: string• logLevel?: LogLevel• writeStreamType?: \"stdout\" | \"stderr\"","returns-14#Returns":"void","inherited-from-9#Inherited from":"ConsoleLogger.printMessages","source-17#Source":"node_modules/@nestjs/common/services/console-logger.service.d.ts:67","printstacktrace#printStackTrace()":"protected printStackTrace(stack): void","parameters-14#Parameters":"• stack: string","returns-15#Returns":"void","inherited-from-10#Inherited from":"ConsoleLogger.printStackTrace","source-18#Source":"node_modules/@nestjs/common/services/console-logger.service.d.ts:73","resetcontext#resetContext()":"resetContext(): void\nResets the logger context to the value that was passed in the constructor.","returns-16#Returns":"void","inherited-from-11#Inherited from":"ConsoleLogger.resetContext","source-19#Source":"node_modules/@nestjs/common/services/console-logger.service.d.ts:64","setcontext#setContext()":"setContext(context): void\nSet logger context","parameters-15#Parameters":"• context: stringcontext","returns-17#Returns":"void","inherited-from-12#Inherited from":"ConsoleLogger.setContext","source-20#Source":"node_modules/@nestjs/common/services/console-logger.service.d.ts:60","setloglevels#setLogLevels()":"setLogLevels(levels): void\nSet log levels","parameters-16#Parameters":"• levels: LogLevel[]log levels","returns-18#Returns":"void","inherited-from-13#Inherited from":"ConsoleLogger.setLogLevels","source-21#Source":"node_modules/@nestjs/common/services/console-logger.service.d.ts:55","stringifymessage#stringifyMessage()":"protected stringifyMessage(message, logLevel): any","parameters-17#Parameters":"• message: unknown• logLevel: LogLevel","returns-19#Returns":"any","inherited-from-14#Inherited from":"ConsoleLogger.stringifyMessage","source-22#Source":"node_modules/@nestjs/common/services/console-logger.service.d.ts:71","updateandgettimestampdiff#updateAndGetTimestampDiff()":"protected updateAndGetTimestampDiff(): string","returns-20#Returns":"string","inherited-from-15#Inherited from":"ConsoleLogger.updateAndGetTimestampDiff","source-23#Source":"node_modules/@nestjs/common/services/console-logger.service.d.ts:74","verbose#verbose()":"verbose(message, context?): void\nMethod to be used when a verbose message should be logged.","parameters-18#Parameters":"• message: stringVerbose Message• context?: stringContext Message","returns-21#Returns":"void","implementation-of-5#Implementation of":"LoggerServiceInterface.verbose","overrides-4#Overrides":"ConsoleLogger.verbose","source-24#Source":"packages/nestjs-logger/src/logger.service.ts:166","warn#warn()":"warn(message, context?): void\nMethod to be used when a warn message should be logged.","parameters-19#Parameters":"• message: stringWarn Message• context?: stringContext of Message","returns-22#Returns":"void","implementation-of-6#Implementation of":"LoggerServiceInterface.warn","overrides-5#Overrides":"ConsoleLogger.warn","source-25#Source":"packages/nestjs-logger/src/logger.service.ts:133"}},"/reference/rockets/nestjs-logger/classes/LoggerTransportService":{"title":"Class: LoggerTransportService","data":{"":"@concepta/nestjs-logger • DocsPackages Example / @concepta/nestjs-logger / LoggerTransportServiceA transport service that will load all third party transport\nthat will be used to log messages to external","example#Example":"class TestTransport implements LoggerTransportInterface {\n    log(): void {\n      // forward message to transport\n    }\n}\nconst app = await NestFactory.create(AppModule, {\n  logger: loggerConfig().logLevel,\n});\nconst customLoggerService = app.get(LoggerService);\nconst testTransport = new TestTransport();\ncustomLoggerService.addTransport(testTransport);","constructors#Constructors":"","new-loggertransportservice#new LoggerTransportService()":"new LoggerTransportService(config): LoggerTransportService\nConstructor","parameters#Parameters":"• config: LoggerSettingsInterface","returns#Returns":"LoggerTransportService","source#Source":"packages/nestjs-logger/src/logger-transport.service.ts:47","properties#Properties":"","config#config":"protected readonly config: LoggerSettingsInterface","source-1#Source":"packages/nestjs-logger/src/logger-transport.service.ts:49","loglevels#logLevels":"private readonly logLevels: LogLevel[]\nLog level definitions","source-2#Source":"packages/nestjs-logger/src/logger-transport.service.ts:35","loggertransports#loggerTransports":"private readonly loggerTransports: LoggerTransportInterface[] = []\nExternal Logger transports","source-3#Source":"packages/nestjs-logger/src/logger-transport.service.ts:40","methods#Methods":"","addtransport#addTransport()":"addTransport(transport): void\nMethod to add the transport that will be used","parameters-1#Parameters":"• transport: LoggerTransportInterface","returns-1#Returns":"void","source-4#Source":"packages/nestjs-logger/src/logger-transport.service.ts:61","log#log()":"log(message, logLevel, error?): void\nMethod to log message to the transport based on the log level","parameters-2#Parameters":"• message: string• logLevel: LogLevel• error?: Error","returns-2#Returns":"void","source-5#Source":"packages/nestjs-logger/src/logger-transport.service.ts:72"}},"/reference/rockets/nestjs-logger/globals":{"title":"@concepta/nestjs-logger","data":{"":"@concepta/nestjs-logger • DocsPackages Example / @concepta/nestjs-logger","classes#Classes":"LoggerExceptionFilter\nLoggerModule\nLoggerRequestInterceptor\nLoggerSentryTransport\nLoggerService\nLoggerTransportService","interfaces#Interfaces":"LoggerSentryConfigInterface\nLoggerSettingsInterface"}},"/reference/rockets/nestjs-logger/interfaces/LoggerSentryConfigInterface":{"title":"Interface: LoggerSentryConfigInterface","data":{"":"@concepta/nestjs-logger • DocsPackages Example / @concepta/nestjs-logger / LoggerSentryConfigInterfaceInterface for Sentry configuration to define the log level\nmapping to be used on Sentry transport.","extends#Extends":"NodeOptions","properties#Properties":"","_experiments#_experiments?":"optional _experiments: object\nOptions which are in beta, or otherwise not guaranteed to be stable.","index-signature#Index signature":"[key: string]: any","inherited-from#Inherited from":"SentryNodeOptions._experiments","source#Source":"node_modules/@sentry/types/types/options.d.ts:136","_metadata#_metadata?":"optional _metadata: SdkMetadata\nSet of metadata about the SDK that can be internally used to enhance envelopes and events,\nand provide additional data about every request.","inherited-from-1#Inherited from":"SentryNodeOptions._metadata","source-1#Source":"node_modules/@sentry/types/types/options.d.ts:132","attachstacktrace#attachStacktrace?":"optional attachStacktrace: boolean\nAttaches stacktraces to pure capture message / log integrations","inherited-from-2#Inherited from":"SentryNodeOptions.attachStacktrace","source-2#Source":"node_modules/@sentry/types/types/options.d.ts:73","autosessiontracking#autoSessionTracking?":"optional autoSessionTracking: boolean\nA flag enabling Sessions Tracking feature.\nBy default, Sessions Tracking is enabled.","inherited-from-3#Inherited from":"SentryNodeOptions.autoSessionTracking","source-3#Source":"node_modules/@sentry/types/types/options.d.ts:118","beforebreadcrumb#beforeBreadcrumb()?":"optional beforeBreadcrumb: (breadcrumb, hint?) => null | Breadcrumb\nA callback invoked when adding a breadcrumb, allowing to optionally modify\nit before adding it to future events.Note that you must return a valid breadcrumb from this callback. If you do\nnot wish to modify the breadcrumb, simply return it at the end.\nReturning null will cause the breadcrumb to be dropped.","parameters#Parameters":"• breadcrumb: BreadcrumbThe breadcrumb as created by the SDK.• hint?: BreadcrumbHint","returns#Returns":"null | Breadcrumb","inherited-from-4#Inherited from":"SentryNodeOptions.beforeBreadcrumb","source-4#Source":"node_modules/@sentry/types/types/options.d.ts:176","beforesend#beforeSend()?":"optional beforeSend: (event, hint?) => null | Event | PromiseLike<null | Event>\nA callback invoked during event submission, allowing to optionally modify\nthe event before it is sent to Sentry.Note that you must return a valid event from this callback. If you do not\nwish to modify the event, simply return it at the end.\nReturning null will cause the event to be dropped.","parameters-1#Parameters":"• event: EventThe error or message event generated by the SDK.• hint?: EventHintMay contain additional information about the original exception.","returns-1#Returns":"null | Event | PromiseLike<null | Event>","inherited-from-5#Inherited from":"SentryNodeOptions.beforeSend","source-5#Source":"node_modules/@sentry/types/types/options.d.ts:164","cacerts#caCerts?":"optional caCerts: string\nHTTPS proxy certificates path","inherited-from-6#Inherited from":"SentryNodeOptions.caCerts","source-6#Source":"node_modules/@sentry/node/types/types.d.ts:16","debug#debug?":"optional debug: boolean\nEnable debug functionality in the SDK itself","inherited-from-7#Inherited from":"SentryNodeOptions.debug","source-7#Source":"node_modules/@sentry/types/types/options.d.ts:13","defaultintegrations#defaultIntegrations?":"optional defaultIntegrations: false | Integration[]\nIf this is set to false, default integrations will not be added, otherwise this will internally be set to the\nrecommended default integrations.\nTODO: We should consider changing this to boolean | Integration[]","inherited-from-8#Inherited from":"SentryNodeOptions.defaultIntegrations","source-8#Source":"node_modules/@sentry/types/types/options.d.ts:29","dist#dist?":"optional dist: string\nSets the distribution for all events","inherited-from-9#Inherited from":"SentryNodeOptions.dist","source-9#Source":"node_modules/@sentry/types/types/options.d.ts:64","dsn#dsn?":"optional dsn: string\nThe Dsn used to connect to Sentry and identify the project. If omitted, the\nSDK will not send any data to Sentry.","inherited-from-10#Inherited from":"SentryNodeOptions.dsn","source-10#Source":"node_modules/@sentry/types/types/options.d.ts:23","enabled#enabled?":"optional enabled: boolean\nSpecifies whether this SDK should send events to Sentry.\nDefaults to true.","inherited-from-11#Inherited from":"SentryNodeOptions.enabled","source-11#Source":"node_modules/@sentry/types/types/options.d.ts:18","environment#environment?":"optional environment: string\nThe current environment of your application (e.g. \"production\").","inherited-from-12#Inherited from":"SentryNodeOptions.environment","source-12#Source":"node_modules/@sentry/types/types/options.d.ts:62","framecontextlines#frameContextLines?":"optional frameContextLines: number\nSets the number of context lines for each frame when loading a file.","deprecated#Deprecated":"Context lines configuration has moved to the ContextLines integration, and can be used like this:\ninit({\n  dsn: '__DSN__',\n  integrations: [new ContextLines({ frameContextLines: 10 })]\n})","inherited-from-13#Inherited from":"SentryNodeOptions.frameContextLines","source-13#Source":"node_modules/@sentry/node/types/types.d.ts:30","httpproxy#httpProxy?":"optional httpProxy: string\nSet a HTTP proxy that should be used for outbound requests.","inherited-from-14#Inherited from":"SentryNodeOptions.httpProxy","source-14#Source":"node_modules/@sentry/node/types/types.d.ts:12","httpsproxy#httpsProxy?":"optional httpsProxy: string\nSet a HTTPS proxy that should be used for outbound requests.","inherited-from-15#Inherited from":"SentryNodeOptions.httpsProxy","source-15#Source":"node_modules/@sentry/node/types/types.d.ts:14","ignoreerrors#ignoreErrors?":"optional ignoreErrors: (string | RegExp)[]\nA pattern for error messages which should not be sent to Sentry.\nBy default, all errors will be sent.","inherited-from-16#Inherited from":"SentryNodeOptions.ignoreErrors","source-16#Source":"node_modules/@sentry/types/types/options.d.ts:40","initialscope#initialScope?":"optional initialScope: CaptureContext\nInitial data to populate scope.","inherited-from-17#Inherited from":"SentryNodeOptions.initialScope","source-17#Source":"node_modules/@sentry/types/types/options.d.ts:127","integrations#integrations?":"optional integrations: Integration[] | (integrations) => Integration[]\nList of integrations that should be installed after SDK was initialized.\nAccepts either a list of integrations or a function that receives\ndefault integrations and returns a new, updated list.","inherited-from-18#Inherited from":"SentryNodeOptions.integrations","source-18#Source":"node_modules/@sentry/types/types/options.d.ts:35","loglevelmap#logLevelMap()":"logLevelMap: (logLevel) => Severity\nMethod to map the log level from the config with sentry log levels","parameters-2#Parameters":"• logLevel: LogLevel","returns-2#Returns":"Severity","source-19#Source":"packages/nestjs-logger/src/interfaces/logger-sentry-config.interface.ts:13","maxbreadcrumbs#maxBreadcrumbs?":"optional maxBreadcrumbs: number\nThe maximum number of breadcrumbs sent with events. Defaults to 100.\nValues over 100 will be ignored and 100 used instead.","inherited-from-19#Inherited from":"SentryNodeOptions.maxBreadcrumbs","source-20#Source":"node_modules/@sentry/types/types/options.d.ts:69","maxvaluelength#maxValueLength?":"optional maxValueLength: number\nMaximum number of chars a single value can have before it will be truncated.","inherited-from-20#Inherited from":"SentryNodeOptions.maxValueLength","source-21#Source":"node_modules/@sentry/types/types/options.d.ts:75","normalizedepth#normalizeDepth?":"optional normalizeDepth: number\nMaximum number of levels that normalization algorithm will traverse in objects and arrays.\nUsed when normalizing an event before sending, on all of the listed attributes:\nbreadcrumbs.data\nuser\ncontexts\nextra\nDefaults to 3. Set to 0 to disable.","inherited-from-21#Inherited from":"SentryNodeOptions.normalizeDepth","source-22#Source":"node_modules/@sentry/types/types/options.d.ts:85","normalizemaxbreadth#normalizeMaxBreadth?":"optional normalizeMaxBreadth: number\nMaximum number of properties or elements that the normalization algorithm will output in any single array or object included in the normalized event.\nUsed when normalizing an event before sending, on all of the listed attributes:\nbreadcrumbs.data\nuser\ncontexts\nextra\nDefaults to 1000","inherited-from-22#Inherited from":"SentryNodeOptions.normalizeMaxBreadth","source-23#Source":"node_modules/@sentry/types/types/options.d.ts:95","release#release?":"optional release: string\nThe release identifier used when uploading respective source maps. Specify\nthis value to allow Sentry to resolve the correct source maps when\nprocessing events.","inherited-from-23#Inherited from":"SentryNodeOptions.release","source-24#Source":"node_modules/@sentry/types/types/options.d.ts:60","samplerate#sampleRate?":"optional sampleRate: number\nA global sample rate to apply to all events (0 - 1).","inherited-from-24#Inherited from":"SentryNodeOptions.sampleRate","source-25#Source":"node_modules/@sentry/types/types/options.d.ts:71","sendclientreports#sendClientReports?":"optional sendClientReports: boolean\nSend SDK Client Reports.\nBy default, Client Reports are enabled.","inherited-from-25#Inherited from":"SentryNodeOptions.sendClientReports","source-26#Source":"node_modules/@sentry/types/types/options.d.ts:123","servername#serverName?":"optional serverName: string\nSets an optional server name (device name)","inherited-from-26#Inherited from":"SentryNodeOptions.serverName","source-27#Source":"node_modules/@sentry/node/types/types.d.ts:8","shutdowntimeout#shutdownTimeout?":"optional shutdownTimeout: number\nMaximum time in milliseconds to wait to drain the request queue, before the process is allowed to exit.","inherited-from-27#Inherited from":"SentryNodeOptions.shutdownTimeout","source-28#Source":"node_modules/@sentry/node/types/types.d.ts:10","tracessamplerate#tracesSampleRate?":"optional tracesSampleRate: number\nSample rate to determine trace sampling.0.0 = 0% chance of a given trace being sent (send no traces) 1.0 = 100% chance of a given trace being sent (send\nall traces)Tracing is enabled if either this or tracesSampler is defined. If both are defined, tracesSampleRate is\nignored.","inherited-from-28#Inherited from":"SentryNodeOptions.tracesSampleRate","source-29#Source":"node_modules/@sentry/types/types/options.d.ts:113","tracessampler#tracesSampler()?":"optional tracesSampler: (samplingContext) => number | boolean\nFunction to compute tracing sample rate dynamically and filter unwanted traces.Tracing is enabled if either this or tracesSampleRate is defined. If both are defined, tracesSampleRate is\nignored.Will automatically be passed a context object of default and optional custom data. See\nTransaction.samplingContext and Hub.startTransaction.","parameters-3#Parameters":"• samplingContext: SamplingContext","returns-3#Returns":"number | boolean","inherited-from-29#Inherited from":"SentryNodeOptions.tracesSampler","source-30#Source":"node_modules/@sentry/types/types/options.d.ts:151","transport#transport?":"optional transport: TransportClass<Transport>\nTransport object that should be used to send events to Sentry","inherited-from-30#Inherited from":"SentryNodeOptions.transport","source-31#Source":"node_modules/@sentry/types/types/options.d.ts:44","transportoptions#transportOptions?":"optional transportOptions: TransportOptions\nOptions for the default transport that the SDK uses.","inherited-from-31#Inherited from":"SentryNodeOptions.transportOptions","source-32#Source":"node_modules/@sentry/types/types/options.d.ts:48","tunnel#tunnel?":"optional tunnel: string\nA URL to an envelope tunnel endpoint. An envelope tunnel is an HTTP endpoint\nthat accepts Sentry envelopes for forwarding. This can be used to force data\nthrough a custom server independent of the type of data.","inherited-from-32#Inherited from":"SentryNodeOptions.tunnel","source-33#Source":"node_modules/@sentry/types/types/options.d.ts:54","methods#Methods":"","onfatalerror#onFatalError()?":"optional onFatalError(error): void\nCallback that is executed when a fatal global error occurs.","parameters-4#Parameters":"• error: Error","returns-4#Returns":"void","inherited-from-33#Inherited from":"SentryNodeOptions.onFatalError","source-34#Source":"node_modules/@sentry/node/types/types.d.ts:32"}},"/reference/rockets/nestjs-logger/interfaces/LoggerSettingsInterface":{"title":"Interface: LoggerSettingsInterface","data":{"":"@concepta/nestjs-logger • DocsPackages Example / @concepta/nestjs-logger / LoggerSettingsInterfaceLogger options interface.","properties#Properties":"","loglevel#logLevel?":"optional logLevel: LogLevel[]\nlist of log levels allowed","source#Source":"packages/nestjs-logger/src/interfaces/logger-settings.interface.ts:11","transportloglevel#transportLogLevel?":"optional transportLogLevel: LogLevel[]\nList of transport log level allowed","source-1#Source":"packages/nestjs-logger/src/interfaces/logger-settings.interface.ts:16","transportsentryconfig#transportSentryConfig?":"optional transportSentryConfig: LoggerSentryConfigInterface\nConfiguration for Sentry","source-2#Source":"packages/nestjs-logger/src/interfaces/logger-settings.interface.ts:21"}},"/reference/rockets/nestjs-org/README":{"title":"Rockets NestJS Org","data":{"":"@concepta/nestjs-org • DocsPackages Example / @concepta/nestjs-orgA module for managing a basic Org entity, including controller with full CRUD, DTOs, sample data factory and seeder.","project#Project":"","installation#Installation":"yarn add @concepta/nestjs-org","usage#Usage":"// ...\nimport { TypeOrmExtModule } from '@concepta/nestjs-typeorm-ext';\nimport { CrudModule } from '@concepta/nestjs-crud';\nimport { OrgModule } from '@concepta/nestjs-org';\n@Module({\n  imports: [\n    TypeOrmExtModule.forRoot({\n      type: 'postgres',\n      url: 'postgres://user:pass@localhost:5432/postgres',\n    }),\n    CrudModule.forRoot({}),\n    OrgModule.forRoot({}),\n  ],\n})\nexport class AppModule {}","configuration#Configuration":"Seeding\nENV","seeding#Seeding":"Configurations specific to (optional) database seeding.","env#ENV":"Configurations available via environment.\nVariable\tType\tDefault\t\tORG_MODULE_SEEDER_AMOUNT\t<number>\t50\tnumber of additional users to create"}},"/reference/rockets/nestjs-org/classes/OrgController":{"title":"Class: OrgController","data":{"":"@concepta/nestjs-org • DocsPackages Example / @concepta/nestjs-org / OrgControllerOrg controller.","implements#Implements":"CrudControllerInterface<OrgEntityInterface, OrgCreatableInterface, OrgUpdatableInterface>","constructors#Constructors":"","new-orgcontroller#new OrgController()":"new OrgController(orgCrudService): OrgController\nConstructor.","parameters#Parameters":"• orgCrudService: OrgCrudServiceinstance of the Org crud service","returns#Returns":"OrgController","source#Source":".tmp/repos/rockets/packages/nestjs-org/src/org.controller.ts:62","properties#Properties":"","orgcrudservice#orgCrudService":"private orgCrudService: OrgCrudService\ninstance of the Org crud service","source-1#Source":".tmp/repos/rockets/packages/nestjs-org/src/org.controller.ts:62","methods#Methods":"","createmany#createMany()":"createMany(crudRequest, orgCreateManyDto): Promise<OrgEntityInterface[]>\nCreate many","parameters-1#Parameters":"• crudRequest: CrudRequestInterfacethe CRUD request object• orgCreateManyDto: OrgCreateManyDtoorg create many dto","returns-1#Returns":"Promise<OrgEntityInterface[]>","implementation-of#Implementation of":"CrudControllerInterface.createMany","source-2#Source":".tmp/repos/rockets/packages/nestjs-org/src/org.controller.ts:94","createone#createOne()":"createOne(crudRequest, orgCreateDto): Promise<OrgEntityInterface>\nCreate one","parameters-2#Parameters":"• crudRequest: CrudRequestInterfacethe CRUD request object• orgCreateDto: OrgCreateDtoorg create dto","returns-2#Returns":"Promise<OrgEntityInterface>","implementation-of-1#Implementation of":"CrudControllerInterface.createOne","source-3#Source":".tmp/repos/rockets/packages/nestjs-org/src/org.controller.ts:110","deleteone#deleteOne()":"deleteOne(crudRequest): Promise<void | OrgEntityInterface>\nDelete one","parameters-3#Parameters":"• crudRequest: CrudRequestInterfacethe CRUD request object","returns-3#Returns":"Promise<void | OrgEntityInterface>","implementation-of-2#Implementation of":"CrudControllerInterface.deleteOne","source-4#Source":".tmp/repos/rockets/packages/nestjs-org/src/org.controller.ts:140","getmany#getMany()":"getMany(crudRequest): Promise<OrgEntityInterface[] | CrudResultPaginatedInterface<OrgEntityInterface>>\nGet many","parameters-4#Parameters":"• crudRequest: CrudRequestInterfacethe CRUD request object","returns-4#Returns":"Promise<OrgEntityInterface[] | CrudResultPaginatedInterface<OrgEntityInterface>>","implementation-of-3#Implementation of":"CrudControllerInterface.getMany","source-5#Source":".tmp/repos/rockets/packages/nestjs-org/src/org.controller.ts:71","getone#getOne()":"getOne(crudRequest): Promise<OrgEntityInterface>\nGet one","parameters-5#Parameters":"• crudRequest: CrudRequestInterfacethe CRUD request object","returns-5#Returns":"Promise<OrgEntityInterface>","implementation-of-4#Implementation of":"CrudControllerInterface.getOne","source-6#Source":".tmp/repos/rockets/packages/nestjs-org/src/org.controller.ts:82","recoverone#recoverOne()":"recoverOne(crudRequest): Promise<OrgEntityInterface>\nRecover one","parameters-6#Parameters":"• crudRequest: CrudRequestInterfacethe CRUD request object","returns-6#Returns":"Promise<OrgEntityInterface>","implementation-of-5#Implementation of":"CrudControllerInterface.recoverOne","source-7#Source":".tmp/repos/rockets/packages/nestjs-org/src/org.controller.ts:151","updateone#updateOne()":"updateOne(crudRequest, orgUpdateDto): Promise<OrgEntityInterface>\nUpdate one","parameters-7#Parameters":"• crudRequest: CrudRequestInterfacethe CRUD request object• orgUpdateDto: OrgUpdateDtoorg update dto","returns-7#Returns":"Promise<OrgEntityInterface>","implementation-of-6#Implementation of":"CrudControllerInterface.updateOne","source-8#Source":".tmp/repos/rockets/packages/nestjs-org/src/org.controller.ts:126"}},"/reference/rockets/nestjs-org/classes/OrgCreateDto":{"title":"Class: OrgCreateDto","data":{"":"@concepta/nestjs-org • DocsPackages Example / @concepta/nestjs-org / OrgCreateDtoOrg Create DTO","extends#Extends":"Pick<OrgDto, \"name\" | \"owner\"> & Partial<Pick<OrgDto, \"active\">>","implements#Implements":"OrgCreatableInterface","constructors#Constructors":"","new-orgcreatedto#new OrgCreateDto()":"new OrgCreateDto(...args): OrgCreateDto","parameters#Parameters":"• ...args: any[]","returns#Returns":"OrgCreateDto","inherited-from#Inherited from":"IntersectionType( PickType(OrgDto, ['name', 'owner'] as const), PartialType(PickType(OrgDto, ['active'] as const)), ).constructor","source#Source":".tmp/repos/rockets/node_modules/@nestjs/common/interfaces/type.interface.d.ts:2","properties#Properties":"","active#active?":"optional active: boolean = true\nActive","implementation-of#Implementation of":"OrgCreatableInterface.active","inherited-from-1#Inherited from":"IntersectionType( PickType(OrgDto, ['name', 'owner'] as const), PartialType(PickType(OrgDto, ['active'] as const)), ).active","source-1#Source":".tmp/repos/rockets/packages/nestjs-org/src/dto/org.dto.ts:39","name#name":"name: string = ''\nName","implementation-of-1#Implementation of":"OrgCreatableInterface.name","inherited-from-2#Inherited from":"IntersectionType( PickType(OrgDto, ['name', 'owner'] as const), PartialType(PickType(OrgDto, ['active'] as const)), ).name","source-2#Source":".tmp/repos/rockets/packages/nestjs-org/src/dto/org.dto.ts:27","owner#owner":"owner: ReferenceIdInterface<string>\nOwner","implementation-of-2#Implementation of":"OrgCreatableInterface.owner","inherited-from-3#Inherited from":"IntersectionType( PickType(OrgDto, ['name', 'owner'] as const), PartialType(PickType(OrgDto, ['active'] as const)), ).owner","source-3#Source":".tmp/repos/rockets/packages/nestjs-org/src/dto/org.dto.ts:51","arguments#arguments":"static arguments: any","inherited-from-4#Inherited from":"IntersectionType( PickType(OrgDto, ['name', 'owner'] as const), PartialType(PickType(OrgDto, ['active'] as const)), ).arguments","source-4#Source":"node_modules/typescript/lib/lib.es5.d.ts:304","caller#caller":"static caller: Function","inherited-from-5#Inherited from":"IntersectionType( PickType(OrgDto, ['name', 'owner'] as const), PartialType(PickType(OrgDto, ['active'] as const)), ).caller","source-5#Source":"node_modules/typescript/lib/lib.es5.d.ts:305","length#length":"static readonly length: number","inherited-from-6#Inherited from":"IntersectionType( PickType(OrgDto, ['name', 'owner'] as const), PartialType(PickType(OrgDto, ['active'] as const)), ).length","source-6#Source":"node_modules/typescript/lib/lib.es5.d.ts:301","name-1#name":"static readonly name: string\nReturns the name of the function. Function names are read-only and can not be changed.","inherited-from-7#Inherited from":"IntersectionType( PickType(OrgDto, ['name', 'owner'] as const), PartialType(PickType(OrgDto, ['active'] as const)), ).name","source-7#Source":"node_modules/typescript/lib/lib.es2015.core.d.ts:97","methods#Methods":"","hasinstance#[hasInstance]()":"static [hasInstance](value): boolean\nDetermines whether the given value inherits from this function if this function was used\r\nas a constructor function.A constructor function can control which objects are recognized as its instances by\r\n'instanceof' by overriding this method.","parameters-1#Parameters":"• value: any","returns-1#Returns":"boolean","inherited-from-8#Inherited from":"IntersectionType( PickType(OrgDto, ['name', 'owner'] as const), PartialType(PickType(OrgDto, ['active'] as const)), ).[hasInstance]","source-8#Source":"node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts:162","apply#apply()":"static apply(this, thisArg, argArray?): any\nCalls the function, substituting the specified object for the this value of the function, and the specified array for the arguments of the function.","parameters-2#Parameters":"• this: Function• thisArg: anyThe object to be used as the this object.• argArray?: anyA set of arguments to be passed to the function.","returns-2#Returns":"any","inherited-from-9#Inherited from":"IntersectionType( PickType(OrgDto, ['name', 'owner'] as const), PartialType(PickType(OrgDto, ['active'] as const)), ).apply","source-9#Source":"node_modules/typescript/lib/lib.es5.d.ts:280","bind#bind()":"static bind(this, thisArg, ...argArray): any\nFor a given function, creates a bound function that has the same body as the original function.\r\nThe this object of the bound function is associated with the specified object, and has the specified initial parameters.","parameters-3#Parameters":"• this: Function• thisArg: anyAn object to which the this keyword can refer inside the new function.• ...argArray: any[]A list of arguments to be passed to the new function.","returns-3#Returns":"any","inherited-from-10#Inherited from":"IntersectionType( PickType(OrgDto, ['name', 'owner'] as const), PartialType(PickType(OrgDto, ['active'] as const)), ).bind","source-10#Source":"node_modules/typescript/lib/lib.es5.d.ts:295","call#call()":"static call(this, thisArg, ...argArray): any\nCalls a method of an object, substituting another object for the current object.","parameters-4#Parameters":"• this: Function• thisArg: anyThe object to be used as the current object.• ...argArray: any[]A list of arguments to be passed to the method.","returns-4#Returns":"any","inherited-from-11#Inherited from":"IntersectionType( PickType(OrgDto, ['name', 'owner'] as const), PartialType(PickType(OrgDto, ['active'] as const)), ).call","source-11#Source":"node_modules/typescript/lib/lib.es5.d.ts:287","tostring#toString()":"static toString(): string\nReturns a string representation of a function.","returns-5#Returns":"string","inherited-from-12#Inherited from":"IntersectionType( PickType(OrgDto, ['name', 'owner'] as const), PartialType(PickType(OrgDto, ['active'] as const)), ).toString","source-12#Source":"node_modules/typescript/lib/lib.es5.d.ts:298"}},"/reference/rockets/nestjs-org/classes/OrgCreateManyDto":{"title":"Class: OrgCreateManyDto","data":{"":"@concepta/nestjs-org • DocsPackages Example / @concepta/nestjs-org / OrgCreateManyDtoOrg DTO","extends#Extends":"CrudCreateManyDto<OrgCreatableInterface>","constructors#Constructors":"","new-orgcreatemanydto#new OrgCreateManyDto()":"new OrgCreateManyDto(): OrgCreateManyDto","returns#Returns":"OrgCreateManyDto","inherited-from#Inherited from":"CrudCreateManyDto.constructor","properties#Properties":"","bulk#bulk":"bulk: OrgCreateDto[] = []","overrides#Overrides":"CrudCreateManyDto.bulk","source#Source":".tmp/repos/rockets/packages/nestjs-org/src/dto/org-create-many.dto.ts:22"}},"/reference/rockets/nestjs-org/classes/OrgCrudService":{"title":"Class: OrgCrudService","data":{"":"@concepta/nestjs-org • DocsPackages Example / @concepta/nestjs-org / OrgCrudServiceOrg CRUD service","extends#Extends":"TypeOrmCrudService<OrgEntityInterface>","constructors#Constructors":"","new-orgcrudservice#new OrgCrudService()":"new OrgCrudService(orgRepo): OrgCrudService\nConstructor","parameters#Parameters":"• orgRepo: Repository<OrgEntityInterface>instance of the org repository.","returns#Returns":"OrgCrudService","overrides#Overrides":"TypeOrmCrudService.constructor","source#Source":".tmp/repos/rockets/packages/nestjs-org/src/services/org-crud.service.ts:18","properties#Properties":"","alias#alias":"protected readonly alias: string","inherited-from#Inherited from":"TypeOrmCrudService.alias","source-1#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:28","count#count()":"readonly count: (options?) => Promise<number>\nCounts entities that match given options.\nUseful for pagination.","parameters-1#Parameters":"• options?: FindManyOptions<OrgEntityInterface>","returns-1#Returns":"Promise<number>","inherited-from-1#Inherited from":"TypeOrmCrudService.count","source-2#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:26","crudqueryhelper#crudQueryHelper":"protected readonly crudQueryHelper: CrudQueryHelper","inherited-from-2#Inherited from":"TypeOrmCrudService.crudQueryHelper","source-3#Source":".tmp/repos/rockets/packages/nestjs-crud/dist/services/typeorm-crud.service.d.ts:12","dbname#dbName":"protected dbName: \"mysql\" | \"mariadb\" | \"postgres\" | \"cockroachdb\" | \"sqlite\" | \"mssql\" | \"sap\" | \"oracle\" | \"cordova\" | \"nativescript\" | \"react-native\" | \"sqljs\" | \"mongodb\" | \"aurora-mysql\" | \"aurora-postgres\" | \"expo\" | \"better-sqlite3\" | \"capacitor\" | \"spanner\"","inherited-from-3#Inherited from":"TypeOrmCrudService.dbName","source-4#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:16","entitycolumns#entityColumns":"protected entityColumns: string[]","inherited-from-4#Inherited from":"TypeOrmCrudService.entityColumns","source-5#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:17","entitycolumnshash#entityColumnsHash":"protected entityColumnsHash: ObjectLiteral","inherited-from-5#Inherited from":"TypeOrmCrudService.entityColumnsHash","source-6#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:20","entityhasdeletecolumn#entityHasDeleteColumn":"protected entityHasDeleteColumn: boolean","inherited-from-6#Inherited from":"TypeOrmCrudService.entityHasDeleteColumn","source-7#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:19","entityprimarycolumns#entityPrimaryColumns":"protected entityPrimaryColumns: string[]","inherited-from-7#Inherited from":"TypeOrmCrudService.entityPrimaryColumns","source-8#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:18","entityrelationshash#entityRelationsHash":"protected entityRelationsHash: Map<string, IAllowedRelation>","inherited-from-8#Inherited from":"TypeOrmCrudService.entityRelationsHash","source-9#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:21","entitytype#entityType":"protected readonly entityType: ClassType<OrgEntityInterface>","inherited-from-9#Inherited from":"TypeOrmCrudService.entityType","source-10#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:27","find#find()":"readonly find: (options?) => Promise<OrgEntityInterface[]>\nFinds entities that match given find options.","parameters-2#Parameters":"• options?: FindManyOptions<OrgEntityInterface>","returns-2#Returns":"Promise<OrgEntityInterface[]>","inherited-from-10#Inherited from":"TypeOrmCrudService.find","source-11#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:25","findone#findOne()":"readonly findOne: (options) => Promise<null | OrgEntityInterface>\nFinds first entity by a given find options.\nIf entity was not found in the database - returns null.","parameters-3#Parameters":"• options: FindOneOptions<OrgEntityInterface>","returns-3#Returns":"Promise<null | OrgEntityInterface>","inherited-from-11#Inherited from":"TypeOrmCrudService.findOne","source-12#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:24","repo#repo":"protected repo: Repository<OrgEntityInterface>","inherited-from-12#Inherited from":"TypeOrmCrudService.repo","source-13#Source":".tmp/repos/rockets/packages/nestjs-crud/dist/services/typeorm-crud.service.d.ts:10","sqlinjectionregex#sqlInjectionRegEx":"protected sqlInjectionRegEx: RegExp[]","inherited-from-13#Inherited from":"TypeOrmCrudService.sqlInjectionRegEx","source-14#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:22","methods#Methods":"","builderaddbrackets#builderAddBrackets()":"protected builderAddBrackets(builder, condition, brackets): void","parameters-4#Parameters":"• builder: SelectQueryBuilder<OrgEntityInterface>• condition: SConditionKey• brackets: Brackets","returns-4#Returns":"void","inherited-from-14#Inherited from":"TypeOrmCrudService.builderAddBrackets","source-15#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:53","buildersetwhere#builderSetWhere()":"protected builderSetWhere(builder, condition, field, value, operator?): void","parameters-5#Parameters":"• builder: SelectQueryBuilder<OrgEntityInterface>• condition: SConditionKey• field: string• value: any• operator?: ComparisonOperator","returns-5#Returns":"void","inherited-from-15#Inherited from":"TypeOrmCrudService.builderSetWhere","source-16#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:54","createbuilder#createBuilder()":"createBuilder(parsed, options, many?, withDeleted?): Promise<SelectQueryBuilder<OrgEntityInterface>>","parameters-6#Parameters":"• parsed: ParsedRequestParams• options: CrudRequestOptions• many?: boolean• withDeleted?: boolean","returns-6#Returns":"Promise<SelectQueryBuilder<OrgEntityInterface>>","inherited-from-16#Inherited from":"TypeOrmCrudService.createBuilder","source-17#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:38","createmany#createMany()":"createMany(req, dto, queryOptions?): Promise<OrgEntityInterface[]>","parameters-7#Parameters":"• req: CrudRequest• dto: CreateManyDto<DeepPartial<OrgEntityInterface>>• queryOptions?: CrudQueryOptionsInterface","returns-7#Returns":"Promise<OrgEntityInterface[]>","inherited-from-17#Inherited from":"TypeOrmCrudService.createMany","source-18#Source":".tmp/repos/rockets/packages/nestjs-crud/dist/services/typeorm-crud.service.d.ts:15","createone#createOne()":"createOne(req, dto, queryOptions?): Promise<OrgEntityInterface>","parameters-8#Parameters":"• req: CrudRequest• dto: DeepPartial<OrgEntityInterface>• queryOptions?: CrudQueryOptionsInterface","returns-8#Returns":"Promise<OrgEntityInterface>","inherited-from-18#Inherited from":"TypeOrmCrudService.createOne","source-19#Source":".tmp/repos/rockets/packages/nestjs-crud/dist/services/typeorm-crud.service.d.ts:16","createpageinfo#createPageInfo()":"createPageInfo(data, total, limit, offset): GetManyDefaultResponse<OrgEntityInterface>","parameters-9#Parameters":"• data: OrgEntityInterface[]• total: number• limit: number• offset: number","returns-9#Returns":"GetManyDefaultResponse<OrgEntityInterface>","inherited-from-19#Inherited from":"TypeOrmCrudService.createPageInfo","source-20#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud/lib/services/crud-service.abstract.d.ts:15","decidepagination#decidePagination()":"decidePagination(parsed, options): boolean","parameters-10#Parameters":"• parsed: ParsedRequestParams• options: CrudRequestOptions","returns-10#Returns":"boolean","inherited-from-20#Inherited from":"TypeOrmCrudService.decidePagination","source-21#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud/lib/services/crud-service.abstract.d.ts:16","deleteone#deleteOne()":"deleteOne(req, queryOptions?): Promise<void | OrgEntityInterface>","parameters-11#Parameters":"• req: CrudRequest• queryOptions?: CrudQueryOptionsInterface","returns-11#Returns":"Promise<void | OrgEntityInterface>","inherited-from-21#Inherited from":"TypeOrmCrudService.deleteOne","source-22#Source":".tmp/repos/rockets/packages/nestjs-crud/dist/services/typeorm-crud.service.d.ts:19","dogetmany#doGetMany()":"protected doGetMany(builder, query, options): Promise<OrgEntityInterface[] | GetManyDefaultResponse<OrgEntityInterface>>","parameters-12#Parameters":"• builder: SelectQueryBuilder<OrgEntityInterface>• query: ParsedRequestParams• options: CrudRequestOptions","returns-12#Returns":"Promise<OrgEntityInterface[] | GetManyDefaultResponse<OrgEntityInterface>>","inherited-from-22#Inherited from":"TypeOrmCrudService.doGetMany","source-23#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:39","getallowedcolumns#getAllowedColumns()":"protected getAllowedColumns(columns, options): string[]","parameters-13#Parameters":"• columns: string[]• options: QueryOptions","returns-13#Returns":"string[]","inherited-from-23#Inherited from":"TypeOrmCrudService.getAllowedColumns","source-24#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:43","getentitycolumns#getEntityColumns()":"protected getEntityColumns(entityMetadata): object","parameters-14#Parameters":"• entityMetadata: EntityMetadata","returns-14#Returns":"object","columns#columns":"columns: string[]","primarycolumns#primaryColumns":"primaryColumns: string[]","inherited-from-24#Inherited from":"TypeOrmCrudService.getEntityColumns","source-25#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:44","getfieldwithalias#getFieldWithAlias()":"protected getFieldWithAlias(field, sort?): string","parameters-15#Parameters":"• field: string• sort?: boolean","returns-15#Returns":"string","inherited-from-25#Inherited from":"TypeOrmCrudService.getFieldWithAlias","source-26#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:58","getmany#getMany()":"getMany(req, queryOptions?): Promise<OrgEntityInterface[] | CrudResultPaginatedInterface<OrgEntityInterface>>","parameters-16#Parameters":"• req: CrudRequest• queryOptions?: CrudQueryOptionsInterface","returns-16#Returns":"Promise<OrgEntityInterface[] | CrudResultPaginatedInterface<OrgEntityInterface>>","inherited-from-26#Inherited from":"TypeOrmCrudService.getMany","source-27#Source":".tmp/repos/rockets/packages/nestjs-crud/dist/services/typeorm-crud.service.d.ts:13","getone#getOne()":"getOne(req, queryOptions?): Promise<OrgEntityInterface>","parameters-17#Parameters":"• req: CrudRequest• queryOptions?: CrudQueryOptionsInterface","returns-17#Returns":"Promise<OrgEntityInterface>","inherited-from-27#Inherited from":"TypeOrmCrudService.getOne","source-28#Source":".tmp/repos/rockets/packages/nestjs-crud/dist/services/typeorm-crud.service.d.ts:14","getoneorfail#getOneOrFail()":"protected getOneOrFail(req, shallow?, withDeleted?): Promise<OrgEntityInterface>","parameters-18#Parameters":"• req: CrudRequest• shallow?: boolean• withDeleted?: boolean","returns-18#Returns":"Promise<OrgEntityInterface>","inherited-from-28#Inherited from":"TypeOrmCrudService.getOneOrFail","source-29#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:41","getparamfilters#getParamFilters()":"getParamFilters(parsed): ObjectLiteral","parameters-19#Parameters":"• parsed: ParsedRequestParams","returns-19#Returns":"ObjectLiteral","inherited-from-29#Inherited from":"TypeOrmCrudService.getParamFilters","source-30#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:37","getprimaryparams#getPrimaryParams()":"getPrimaryParams(options): string[]","parameters-20#Parameters":"• options: CrudRequestOptions","returns-20#Returns":"string[]","inherited-from-30#Inherited from":"TypeOrmCrudService.getPrimaryParams","source-31#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud/lib/services/crud-service.abstract.d.ts:19","getrelationmetadata#getRelationMetadata()":"protected getRelationMetadata(field, options): IAllowedRelation","parameters-21#Parameters":"• field: string• options: JoinOption","returns-21#Returns":"IAllowedRelation","inherited-from-31#Inherited from":"TypeOrmCrudService.getRelationMetadata","source-32#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:48","getselect#getSelect()":"protected getSelect(query, options): string[]","parameters-22#Parameters":"• query: ParsedRequestParams• options: QueryOptions","returns-22#Returns":"string[]","inherited-from-32#Inherited from":"TypeOrmCrudService.getSelect","source-33#Source":".tmp/repos/rockets/packages/nestjs-crud/dist/services/typeorm-crud.service.d.ts:23","getskip#getSkip()":"getSkip(query, take): null | number","parameters-23#Parameters":"• query: ParsedRequestParams• take: number","returns-23#Returns":"null | number","inherited-from-33#Inherited from":"TypeOrmCrudService.getSkip","source-34#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud/lib/services/crud-service.abstract.d.ts:18","getsort#getSort()":"protected getSort(query, options): ObjectLiteral","parameters-24#Parameters":"• query: ParsedRequestParams• options: QueryOptions","returns-24#Returns":"ObjectLiteral","inherited-from-34#Inherited from":"TypeOrmCrudService.getSort","source-35#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:57","gettake#getTake()":"getTake(query, options): null | number","parameters-25#Parameters":"• query: ParsedRequestParams• options: QueryOptions","returns-25#Returns":"null | number","inherited-from-35#Inherited from":"TypeOrmCrudService.getTake","source-36#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud/lib/services/crud-service.abstract.d.ts:17","mapoperatorstoquery#mapOperatorsToQuery()":"protected mapOperatorsToQuery(cond, param): object","parameters-26#Parameters":"• cond: QueryFilter• param: any","returns-26#Returns":"object","params#params":"params: ObjectLiteral","str#str":"str: string","inherited-from-36#Inherited from":"TypeOrmCrudService.mapOperatorsToQuery","source-37#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:60","mapsort#mapSort()":"protected mapSort(sort): ObjectLiteral","parameters-27#Parameters":"• sort: QuerySort[]","returns-27#Returns":"ObjectLiteral","inherited-from-37#Inherited from":"TypeOrmCrudService.mapSort","source-38#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:59","oninitmapentitycolumns#onInitMapEntityColumns()":"protected onInitMapEntityColumns(): void","returns-28#Returns":"void","inherited-from-38#Inherited from":"TypeOrmCrudService.onInitMapEntityColumns","source-39#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:40","prepareentitybeforesave#prepareEntityBeforeSave()":"protected prepareEntityBeforeSave(dto, parsed): OrgEntityInterface","parameters-28#Parameters":"• dto: DeepPartial<OrgEntityInterface>• parsed: ParsedRequestParams","returns-29#Returns":"OrgEntityInterface","inherited-from-39#Inherited from":"TypeOrmCrudService.prepareEntityBeforeSave","source-40#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:42","recoverone#recoverOne()":"recoverOne(req, queryOptions?): Promise<OrgEntityInterface>","parameters-29#Parameters":"• req: CrudRequest• queryOptions?: CrudQueryOptionsInterface","returns-30#Returns":"Promise<OrgEntityInterface>","inherited-from-40#Inherited from":"TypeOrmCrudService.recoverOne","source-41#Source":".tmp/repos/rockets/packages/nestjs-crud/dist/services/typeorm-crud.service.d.ts:20","replaceone#replaceOne()":"replaceOne(req, dto, queryOptions?): Promise<OrgEntityInterface>","parameters-30#Parameters":"• req: CrudRequest• dto: DeepPartial<OrgEntityInterface>• queryOptions?: CrudQueryOptionsInterface","returns-31#Returns":"Promise<OrgEntityInterface>","inherited-from-41#Inherited from":"TypeOrmCrudService.replaceOne","source-42#Source":".tmp/repos/rockets/packages/nestjs-crud/dist/services/typeorm-crud.service.d.ts:18","setandwhere#setAndWhere()":"protected setAndWhere(cond, i, builder): void","parameters-31#Parameters":"• cond: QueryFilter• i: any• builder: SelectQueryBuilder<OrgEntityInterface> | WhereExpression","returns-32#Returns":"void","inherited-from-42#Inherited from":"TypeOrmCrudService.setAndWhere","source-43#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:50","setjoin#setJoin()":"protected setJoin(cond, joinOptions, builder): boolean","parameters-32#Parameters":"• cond: QueryJoin• joinOptions: JoinOptions• builder: SelectQueryBuilder<OrgEntityInterface>","returns-33#Returns":"boolean","inherited-from-43#Inherited from":"TypeOrmCrudService.setJoin","source-44#Source":".tmp/repos/rockets/packages/nestjs-crud/dist/services/typeorm-crud.service.d.ts:22","setorwhere#setOrWhere()":"protected setOrWhere(cond, i, builder): void","parameters-33#Parameters":"• cond: QueryFilter• i: any• builder: SelectQueryBuilder<OrgEntityInterface> | WhereExpression","returns-34#Returns":"void","inherited-from-44#Inherited from":"TypeOrmCrudService.setOrWhere","source-45#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:51","setsearchcondition#setSearchCondition()":"protected setSearchCondition(builder, search, condition?): void","parameters-34#Parameters":"• builder: SelectQueryBuilder<OrgEntityInterface>• search: SCondition• condition?: SConditionKey","returns-35#Returns":"void","inherited-from-45#Inherited from":"TypeOrmCrudService.setSearchCondition","source-46#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:52","setsearchfieldobjectcondition#setSearchFieldObjectCondition()":"protected setSearchFieldObjectCondition(builder, condition, field, object): void","parameters-35#Parameters":"• builder: SelectQueryBuilder<OrgEntityInterface>• condition: SConditionKey• field: string• object: any","returns-36#Returns":"void","inherited-from-46#Inherited from":"TypeOrmCrudService.setSearchFieldObjectCondition","source-47#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:55","throwbadrequestexception#throwBadRequestException()":"throwBadRequestException(msg?): BadRequestException","parameters-36#Parameters":"• msg?: any","returns-37#Returns":"BadRequestException","inherited-from-47#Inherited from":"TypeOrmCrudService.throwBadRequestException","source-48#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud/lib/services/crud-service.abstract.d.ts:13","thrownotfoundexception#throwNotFoundException()":"throwNotFoundException(name): NotFoundException","parameters-37#Parameters":"• name: string","returns-38#Returns":"NotFoundException","inherited-from-48#Inherited from":"TypeOrmCrudService.throwNotFoundException","source-49#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud/lib/services/crud-service.abstract.d.ts:14","transaction#transaction()":"transaction(options?): TransactionProxy","parameters-38#Parameters":"• options?: SafeTransactionOptionsInterface","returns-39#Returns":"TransactionProxy","inherited-from-49#Inherited from":"TypeOrmCrudService.transaction","source-50#Source":".tmp/repos/rockets/packages/nestjs-crud/dist/services/typeorm-crud.service.d.ts:21","updateone#updateOne()":"updateOne(req, dto, queryOptions?): Promise<OrgEntityInterface>","parameters-39#Parameters":"• req: CrudRequest• dto: DeepPartial<OrgEntityInterface>• queryOptions?: CrudQueryOptionsInterface","returns-40#Returns":"Promise<OrgEntityInterface>","inherited-from-50#Inherited from":"TypeOrmCrudService.updateOne","source-51#Source":".tmp/repos/rockets/packages/nestjs-crud/dist/services/typeorm-crud.service.d.ts:17"}},"/reference/rockets/nestjs-org/classes/OrgDto":{"title":"Class: OrgDto","data":{"":"@concepta/nestjs-org • DocsPackages Example / @concepta/nestjs-org / OrgDtoOrg DTO","extends#Extends":"CommonEntityDto","implements#Implements":"OrgInterface","constructors#Constructors":"","new-orgdto#new OrgDto()":"new OrgDto(): OrgDto","returns#Returns":"OrgDto","inherited-from#Inherited from":"CommonEntityDto.constructor","properties#Properties":"","active#active":"active: boolean = true\nActive","implementation-of#Implementation of":"OrgInterface.active","source#Source":".tmp/repos/rockets/packages/nestjs-org/src/dto/org.dto.ts:39","datecreated#dateCreated":"dateCreated: Date\nDate created","implementation-of-1#Implementation of":"OrgInterface.dateCreated","inherited-from-1#Inherited from":"CommonEntityDto.dateCreated","source-1#Source":".tmp/repos/rockets/packages/nestjs-common/dist/audit/dto/audit.dto.d.ts:3","datedeleted#dateDeleted":"dateDeleted: AuditDateDeleted\nDate deleted","implementation-of-2#Implementation of":"OrgInterface.dateDeleted","inherited-from-2#Inherited from":"CommonEntityDto.dateDeleted","source-2#Source":".tmp/repos/rockets/packages/nestjs-common/dist/audit/dto/audit.dto.d.ts:5","dateupdated#dateUpdated":"dateUpdated: Date\nDate updated","implementation-of-3#Implementation of":"OrgInterface.dateUpdated","inherited-from-3#Inherited from":"CommonEntityDto.dateUpdated","source-3#Source":".tmp/repos/rockets/packages/nestjs-common/dist/audit/dto/audit.dto.d.ts:4","id#id":"id: string","implementation-of-4#Implementation of":"OrgInterface.id","inherited-from-4#Inherited from":"CommonEntityDto.id","source-4#Source":".tmp/repos/rockets/packages/nestjs-common/dist/common/common-entity.dto.d.ts:4","name#name":"name: string = ''\nName","implementation-of-5#Implementation of":"OrgInterface.name","source-5#Source":".tmp/repos/rockets/packages/nestjs-org/src/dto/org.dto.ts:27","owner#owner":"owner: ReferenceIdInterface<string>\nOwner","implementation-of-6#Implementation of":"OrgInterface.owner","source-6#Source":".tmp/repos/rockets/packages/nestjs-org/src/dto/org.dto.ts:51","version#version":"version: number\nVersion","implementation-of-7#Implementation of":"OrgInterface.version","inherited-from-5#Inherited from":"CommonEntityDto.version","source-7#Source":".tmp/repos/rockets/packages/nestjs-common/dist/audit/dto/audit.dto.d.ts:6"}},"/reference/rockets/nestjs-org/classes/OrgLookupService":{"title":"Class: OrgLookupService","data":{"":"@concepta/nestjs-org • DocsPackages Example / @concepta/nestjs-org / OrgLookupServiceOrg lookup service","extends#Extends":"LookupService<OrgEntityInterface>","implements#Implements":"OrgLookupServiceInterface","constructors#Constructors":"","new-orglookupservice#new OrgLookupService()":"new OrgLookupService(repo, ownerLookupService): OrgLookupService\nConstructor","parameters#Parameters":"• repo: Repository<OrgEntityInterface>instance of the org repo• ownerLookupService: OrgOwnerLookupServiceInterface","returns#Returns":"OrgLookupService","overrides#Overrides":"LookupService.constructor","source#Source":".tmp/repos/rockets/packages/nestjs-org/src/services/org-lookup.service.ts:29","properties#Properties":"","ownerlookupservice#ownerLookupService":"protected readonly ownerLookupService: OrgOwnerLookupServiceInterface","source-1#Source":".tmp/repos/rockets/packages/nestjs-org/src/services/org-lookup.service.ts:33","accessors#Accessors":"","metadata#metadata":"get protected metadata(): EntityMetadata","returns-1#Returns":"EntityMetadata","source-2#Source":".tmp/repos/rockets/packages/typeorm-common/dist/services/base.service.d.ts:13","methods#Methods":"","byid#byId()":"byId(id, queryOptions?): Promise<null | OrgEntityInterface>\nGet entity for the given id.","parameters-1#Parameters":"• id: stringthe id• queryOptions?: QueryOptionsInterface","returns-2#Returns":"Promise<null | OrgEntityInterface>","implementation-of#Implementation of":"OrgLookupServiceInterface.byId","inherited-from#Inherited from":"LookupService.byId","source-3#Source":".tmp/repos/rockets/packages/typeorm-common/dist/services/lookup.service.d.ts:7","findone#findOne()":"findOne(findOneOptions, queryOptions?): Promise<null | OrgEntityInterface>\nFind One wrapper.","parameters-2#Parameters":"• findOneOptions: FindOneOptions<OrgEntityInterface>Find options• queryOptions?: QueryOptionsInterface","returns-3#Returns":"Promise<null | OrgEntityInterface>","inherited-from-1#Inherited from":"LookupService.findOne","source-4#Source":".tmp/repos/rockets/packages/typeorm-common/dist/services/base.service.d.ts:10","getowner#getOwner()":"getOwner(org, queryOptions?): Promise<null | ReferenceIdInterface<string>>\nGet owner for the given org.","parameters-3#Parameters":"• org: OrgOwnerInterfaceThe org of which owner to retrieve.• queryOptions?: QueryOptionsInterface","returns-4#Returns":"Promise<null | ReferenceIdInterface<string>>","implementation-of-1#Implementation of":"OrgLookupServiceInterface.getOwner","source-5#Source":".tmp/repos/rockets/packages/nestjs-org/src/services/org-lookup.service.ts:43","repository#repository()":"repository(queryOptions?): Repository<OrgEntityInterface>\nReturn the correct repository instance.","parameters-4#Parameters":"• queryOptions?: QueryOptionsInterfaceOptions","returns-5#Returns":"Repository<OrgEntityInterface>","inherited-from-2#Inherited from":"LookupService.repository","source-6#Source":".tmp/repos/rockets/packages/typeorm-common/dist/services/base.service.d.ts:11","transaction#transaction()":"transaction(options?): TransactionProxy\nReturn a transaction instance.","parameters-5#Parameters":"• options?: SafeTransactionOptionsInterfaceOptions","returns-6#Returns":"TransactionProxy","inherited-from-3#Inherited from":"LookupService.transaction","source-7#Source":".tmp/repos/rockets/packages/typeorm-common/dist/services/base.service.d.ts:12"}},"/reference/rockets/nestjs-org/classes/OrgMemberPostgresEntity":{"title":"Class: abstract OrgMemberPostgresEntity","data":{"":"@concepta/nestjs-org • DocsPackages Example / @concepta/nestjs-org / OrgMemberPostgresEntityAudit Postgres Embed","extends#Extends":"CommonPostgresEntity","implements#Implements":"OrgMemberEntityInterface","constructors#Constructors":"","new-orgmemberpostgresentity#new OrgMemberPostgresEntity()":"new OrgMemberPostgresEntity(): OrgMemberPostgresEntity","returns#Returns":"OrgMemberPostgresEntity","inherited-from#Inherited from":"CommonPostgresEntity.constructor","properties#Properties":"","active#active":"active: boolean = true","implementation-of#Implementation of":"OrgMemberEntityInterface.active","source#Source":".tmp/repos/rockets/packages/nestjs-org/src/entities/org-member-postgres.entity.ts:13","datecreated#dateCreated":"dateCreated: Date\nDate created.","implementation-of-1#Implementation of":"OrgMemberEntityInterface.dateCreated","inherited-from-1#Inherited from":"CommonPostgresEntity.dateCreated","source-1#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/audit/audit-postgres.entity.d.ts:3","datedeleted#dateDeleted":"dateDeleted: AuditDateDeleted\nDate deleted.","implementation-of-2#Implementation of":"OrgMemberEntityInterface.dateDeleted","inherited-from-2#Inherited from":"CommonPostgresEntity.dateDeleted","source-2#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/audit/audit-postgres.entity.d.ts:5","dateupdated#dateUpdated":"dateUpdated: Date\nDate updated.","implementation-of-3#Implementation of":"OrgMemberEntityInterface.dateUpdated","inherited-from-3#Inherited from":"CommonPostgresEntity.dateUpdated","source-3#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/audit/audit-postgres.entity.d.ts:4","id#id":"id: string","implementation-of-4#Implementation of":"OrgMemberEntityInterface.id","inherited-from-4#Inherited from":"CommonPostgresEntity.id","source-4#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/common/common-postgres.entity.d.ts:4","org#org":"org: ReferenceIdInterface<string>","source-5#Source":".tmp/repos/rockets/packages/nestjs-org/src/entities/org-member-postgres.entity.ts:23","orgid#orgId":"orgId: string","implementation-of-5#Implementation of":"OrgMemberEntityInterface.orgId","source-6#Source":".tmp/repos/rockets/packages/nestjs-org/src/entities/org-member-postgres.entity.ts:19","user#user":"user: ReferenceIdInterface<string>","source-7#Source":".tmp/repos/rockets/packages/nestjs-org/src/entities/org-member-postgres.entity.ts:21","userid#userId":"userId: string","implementation-of-6#Implementation of":"OrgMemberEntityInterface.userId","source-8#Source":".tmp/repos/rockets/packages/nestjs-org/src/entities/org-member-postgres.entity.ts:16","version#version":"version: number\nVersion","implementation-of-7#Implementation of":"OrgMemberEntityInterface.version","inherited-from-5#Inherited from":"CommonPostgresEntity.version","source-9#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/audit/audit-postgres.entity.d.ts:6"}},"/reference/rockets/nestjs-org/classes/OrgMemberSqliteEntity":{"title":"Class: abstract OrgMemberSqliteEntity","data":{"":"@concepta/nestjs-org • DocsPackages Example / @concepta/nestjs-org / OrgMemberSqliteEntityAudit SqlLite Embed","extends#Extends":"CommonSqliteEntity","implements#Implements":"OrgMemberEntityInterface","constructors#Constructors":"","new-orgmembersqliteentity#new OrgMemberSqliteEntity()":"new OrgMemberSqliteEntity(): OrgMemberSqliteEntity","returns#Returns":"OrgMemberSqliteEntity","inherited-from#Inherited from":"CommonSqliteEntity.constructor","properties#Properties":"","active#active":"active: boolean = true","implementation-of#Implementation of":"OrgMemberEntityInterface.active","source#Source":".tmp/repos/rockets/packages/nestjs-org/src/entities/org-member-sqlite.entity.ts:13","datecreated#dateCreated":"dateCreated: Date\nDate created.","implementation-of-1#Implementation of":"OrgMemberEntityInterface.dateCreated","inherited-from-1#Inherited from":"CommonSqliteEntity.dateCreated","source-1#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/audit/audit-sqlite.entity.d.ts:3","datedeleted#dateDeleted":"dateDeleted: AuditDateDeleted\nDate deleted.","implementation-of-2#Implementation of":"OrgMemberEntityInterface.dateDeleted","inherited-from-2#Inherited from":"CommonSqliteEntity.dateDeleted","source-2#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/audit/audit-sqlite.entity.d.ts:5","dateupdated#dateUpdated":"dateUpdated: Date\nDate updated.","implementation-of-3#Implementation of":"OrgMemberEntityInterface.dateUpdated","inherited-from-3#Inherited from":"CommonSqliteEntity.dateUpdated","source-3#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/audit/audit-sqlite.entity.d.ts:4","id#id":"id: string","implementation-of-4#Implementation of":"OrgMemberEntityInterface.id","inherited-from-4#Inherited from":"CommonSqliteEntity.id","source-4#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/common/common-sqlite.entity.d.ts:4","org#org":"org: ReferenceIdInterface<string>","source-5#Source":".tmp/repos/rockets/packages/nestjs-org/src/entities/org-member-sqlite.entity.ts:23","orgid#orgId":"orgId: string","implementation-of-5#Implementation of":"OrgMemberEntityInterface.orgId","source-6#Source":".tmp/repos/rockets/packages/nestjs-org/src/entities/org-member-sqlite.entity.ts:19","user#user":"user: ReferenceIdInterface<string>","source-7#Source":".tmp/repos/rockets/packages/nestjs-org/src/entities/org-member-sqlite.entity.ts:21","userid#userId":"userId: string","implementation-of-6#Implementation of":"OrgMemberEntityInterface.userId","source-8#Source":".tmp/repos/rockets/packages/nestjs-org/src/entities/org-member-sqlite.entity.ts:16","version#version":"version: number\nVersion","implementation-of-7#Implementation of":"OrgMemberEntityInterface.version","inherited-from-5#Inherited from":"CommonSqliteEntity.version","source-9#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/audit/audit-sqlite.entity.d.ts:6"}},"/reference/rockets/nestjs-org/classes/OrgModule":{"title":"Class: OrgModule","data":{"":"@concepta/nestjs-org • DocsPackages Example / @concepta/nestjs-org / OrgModuleOrg Module","extends#Extends":"OrgModuleClass","constructors#Constructors":"","new-orgmodule#new OrgModule()":"new OrgModule(): OrgModule","returns#Returns":"OrgModule","inherited-from#Inherited from":"OrgModuleClass.constructor","source#Source":".tmp/repos/rockets/node_modules/@nestjs/common/module-utils/interfaces/configurable-module-cls.interface.d.ts:12","methods#Methods":"","forfeature#forFeature()":"static forFeature(options): DynamicModule","parameters#Parameters":"• options: OrgOptions","returns-1#Returns":"DynamicModule","source-1#Source":".tmp/repos/rockets/packages/nestjs-org/src/org.module.ts:34","forroot#forRoot()":"static forRoot(options): DynamicModule","parameters-1#Parameters":"• options: OrgOptions","returns-2#Returns":"DynamicModule","source-2#Source":".tmp/repos/rockets/packages/nestjs-org/src/org.module.ts:26","forrootasync#forRootAsync()":"static forRootAsync(options): DynamicModule","parameters-2#Parameters":"• options: OrgAsyncOptions","returns-3#Returns":"DynamicModule","source-3#Source":".tmp/repos/rockets/packages/nestjs-org/src/org.module.ts:30","register#register()":"static register(options): DynamicModule","parameters-3#Parameters":"• options: OrgOptions","returns-4#Returns":"DynamicModule","overrides#Overrides":"OrgModuleClass.register","source-4#Source":".tmp/repos/rockets/packages/nestjs-org/src/org.module.ts:18","registerasync#registerAsync()":"static registerAsync(options): DynamicModule","parameters-4#Parameters":"• options: OrgAsyncOptions","returns-5#Returns":"DynamicModule","overrides-1#Overrides":"OrgModuleClass.registerAsync","source-5#Source":".tmp/repos/rockets/packages/nestjs-org/src/org.module.ts:22"}},"/reference/rockets/nestjs-org/classes/OrgMutateService":{"title":"Class: OrgMutateService","data":{"":"@concepta/nestjs-org • DocsPackages Example / @concepta/nestjs-org / OrgMutateServiceOrg mutate service","extends#Extends":"MutateService<OrgEntityInterface, OrgCreatableInterface, OrgUpdatableInterface>","implements#Implements":"OrgMutateServiceInterface","constructors#Constructors":"","new-orgmutateservice#new OrgMutateService()":"new OrgMutateService(repo): OrgMutateService\nConstructor","parameters#Parameters":"• repo: Repository<OrgEntityInterface>instance of the org repo","returns#Returns":"OrgMutateService","overrides#Overrides":"MutateService.constructor","source#Source":".tmp/repos/rockets/packages/nestjs-org/src/services/org-mutate.service.ts:35","properties#Properties":"","createdto#createDto":"protected createDto: typeof OrgCreateDto = OrgCreateDto","overrides-1#Overrides":"MutateService.createDto","source-1#Source":".tmp/repos/rockets/packages/nestjs-org/src/services/org-mutate.service.ts:27","updatedto#updateDto":"protected updateDto: typeof OrgUpdateDto = OrgUpdateDto","overrides-2#Overrides":"MutateService.updateDto","source-2#Source":".tmp/repos/rockets/packages/nestjs-org/src/services/org-mutate.service.ts:28","accessors#Accessors":"","metadata#metadata":"get protected metadata(): EntityMetadata","returns-1#Returns":"EntityMetadata","source-3#Source":".tmp/repos/rockets/packages/typeorm-common/dist/services/base.service.d.ts:13","methods#Methods":"","create#create()":"create(data, queryOptions?): Promise<OrgEntityInterface>\nCreate one","parameters-1#Parameters":"• data: OrgCreatableInterfacethe reference to create• queryOptions?: QueryOptionsInterface","returns-2#Returns":"Promise<OrgEntityInterface>the created reference","implementation-of#Implementation of":"OrgMutateServiceInterface.create","inherited-from#Inherited from":"MutateService.create","source-4#Source":".tmp/repos/rockets/packages/typeorm-common/dist/services/mutate.service.d.ts:9","findbyid#findById()":"protected findById(id, queryOptions?): Promise<OrgEntityInterface>","parameters-2#Parameters":"• id: string• queryOptions?: QueryOptionsInterface","returns-3#Returns":"Promise<OrgEntityInterface>","inherited-from-1#Inherited from":"MutateService.findById","source-5#Source":".tmp/repos/rockets/packages/typeorm-common/dist/services/mutate.service.d.ts:17","findone#findOne()":"findOne(findOneOptions, queryOptions?): Promise<null | OrgEntityInterface>\nFind One wrapper.","parameters-3#Parameters":"• findOneOptions: FindOneOptions<OrgEntityInterface>Find options• queryOptions?: QueryOptionsInterface","returns-4#Returns":"Promise<null | OrgEntityInterface>","inherited-from-2#Inherited from":"MutateService.findOne","source-6#Source":".tmp/repos/rockets/packages/typeorm-common/dist/services/base.service.d.ts:10","remove#remove()":"remove(data, queryOptions?): Promise<OrgEntityInterface>\nRemove one","parameters-4#Parameters":"• data: DeepPartial<OrgEntityInterface> & ReferenceIdInterface<string>the reference data to remove• queryOptions?: QueryOptionsInterfacequery options","returns-5#Returns":"Promise<OrgEntityInterface>the removed reference","implementation-of-1#Implementation of":"OrgMutateServiceInterface.remove","inherited-from-3#Inherited from":"MutateService.remove","source-7#Source":".tmp/repos/rockets/packages/typeorm-common/dist/services/mutate.service.d.ts:12","replace#replace()":"replace(data, queryOptions?): Promise<OrgEntityInterface>\nReplace one","parameters-5#Parameters":"• data: OrgCreatableInterface & ReferenceIdInterface<string>the reference data to replace• queryOptions?: QueryOptionsInterface","returns-6#Returns":"Promise<OrgEntityInterface>the replaced reference","implementation-of-2#Implementation of":"OrgMutateServiceInterface.replace","inherited-from-4#Inherited from":"MutateService.replace","source-8#Source":".tmp/repos/rockets/packages/typeorm-common/dist/services/mutate.service.d.ts:11","repository#repository()":"repository(queryOptions?): Repository<OrgEntityInterface>\nReturn the correct repository instance.","parameters-6#Parameters":"• queryOptions?: QueryOptionsInterfaceOptions","returns-7#Returns":"Repository<OrgEntityInterface>","inherited-from-5#Inherited from":"MutateService.repository","source-9#Source":".tmp/repos/rockets/packages/typeorm-common/dist/services/base.service.d.ts:11","transaction#transaction()":"transaction(options?): TransactionProxy\nReturn a transaction instance.","parameters-7#Parameters":"• options?: SafeTransactionOptionsInterfaceOptions","returns-8#Returns":"TransactionProxy","inherited-from-6#Inherited from":"MutateService.transaction","source-10#Source":".tmp/repos/rockets/packages/typeorm-common/dist/services/base.service.d.ts:12","transform#transform()":"protected transform(data, _queryOptions?): Promise<DeepPartial<OrgEntityInterface>>","parameters-8#Parameters":"• data: DeepPartial<OrgEntityInterface>• _queryOptions?: QueryOptionsInterface","returns-9#Returns":"Promise<DeepPartial<OrgEntityInterface>>","inherited-from-7#Inherited from":"MutateService.transform","source-11#Source":".tmp/repos/rockets/packages/typeorm-common/dist/services/mutate.service.d.ts:16","update#update()":"update(data, queryOptions?): Promise<OrgEntityInterface>\nUpdate one","parameters-9#Parameters":"• data: OrgUpdatableInterface & ReferenceIdInterface<string>the reference data to update• queryOptions?: QueryOptionsInterface","returns-10#Returns":"Promise<OrgEntityInterface>the updated reference","implementation-of-3#Implementation of":"OrgMutateServiceInterface.update","inherited-from-8#Inherited from":"MutateService.update","source-12#Source":".tmp/repos/rockets/packages/typeorm-common/dist/services/mutate.service.d.ts:10","validate#validate()":"protected validate<T>(type, data): Promise<T>","type-parameters#Type parameters":"• T extends DeepPartial<OrgEntityInterface>","parameters-10#Parameters":"• type: Type<T>• data: T","returns-11#Returns":"Promise<T>","inherited-from-9#Inherited from":"MutateService.validate","source-13#Source":".tmp/repos/rockets/packages/typeorm-common/dist/services/mutate.service.d.ts:15"}},"/reference/rockets/nestjs-org/classes/OrgPaginatedDto":{"title":"Class: OrgPaginatedDto","data":{"":"@concepta/nestjs-org • DocsPackages Example / @concepta/nestjs-org / OrgPaginatedDtoOrg paginated DTO","extends#Extends":"CrudResponsePaginatedDto<OrgInterface>","constructors#Constructors":"","new-orgpaginateddto#new OrgPaginatedDto()":"new OrgPaginatedDto(): OrgPaginatedDto","returns#Returns":"OrgPaginatedDto","inherited-from#Inherited from":"CrudResponsePaginatedDto.constructor","properties#Properties":"","count#count":"count: number","inherited-from-1#Inherited from":"CrudResponsePaginatedDto.count","source#Source":".tmp/repos/rockets/packages/nestjs-crud/dist/dto/crud-response-paginated.dto.d.ts:4","data#data":"data: OrgDto[] = []","overrides#Overrides":"CrudResponsePaginatedDto.data","source-1#Source":".tmp/repos/rockets/packages/nestjs-org/src/dto/org-paginated.dto.ts:19","page#page":"page: number","inherited-from-2#Inherited from":"CrudResponsePaginatedDto.page","source-2#Source":".tmp/repos/rockets/packages/nestjs-crud/dist/dto/crud-response-paginated.dto.d.ts:6","pagecount#pageCount":"pageCount: number","inherited-from-3#Inherited from":"CrudResponsePaginatedDto.pageCount","source-3#Source":".tmp/repos/rockets/packages/nestjs-crud/dist/dto/crud-response-paginated.dto.d.ts:7","total#total":"total: number","inherited-from-4#Inherited from":"CrudResponsePaginatedDto.total","source-4#Source":".tmp/repos/rockets/packages/nestjs-crud/dist/dto/crud-response-paginated.dto.d.ts:5"}},"/reference/rockets/nestjs-org/classes/OrgSqliteEntity":{"title":"Class: abstract OrgSqliteEntity","data":{"":"@concepta/nestjs-org • DocsPackages Example / @concepta/nestjs-org / OrgSqliteEntityOrg Sqlite Entity","extends#Extends":"CommonSqliteEntity","implements#Implements":"OrgEntityInterface","constructors#Constructors":"","new-orgsqliteentity#new OrgSqliteEntity()":"new OrgSqliteEntity(): OrgSqliteEntity","returns#Returns":"OrgSqliteEntity","inherited-from#Inherited from":"CommonSqliteEntity.constructor","properties#Properties":"","active#active":"active: boolean = true","implementation-of#Implementation of":"OrgEntityInterface.active","source#Source":".tmp/repos/rockets/packages/nestjs-org/src/entities/org-sqlite.entity.ts:17","datecreated#dateCreated":"dateCreated: Date\nDate created.","implementation-of-1#Implementation of":"OrgEntityInterface.dateCreated","inherited-from-1#Inherited from":"CommonSqliteEntity.dateCreated","source-1#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/audit/audit-sqlite.entity.d.ts:3","datedeleted#dateDeleted":"dateDeleted: AuditDateDeleted\nDate deleted.","implementation-of-2#Implementation of":"OrgEntityInterface.dateDeleted","inherited-from-2#Inherited from":"CommonSqliteEntity.dateDeleted","source-2#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/audit/audit-sqlite.entity.d.ts:5","dateupdated#dateUpdated":"dateUpdated: Date\nDate updated.","implementation-of-3#Implementation of":"OrgEntityInterface.dateUpdated","inherited-from-3#Inherited from":"CommonSqliteEntity.dateUpdated","source-3#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/audit/audit-sqlite.entity.d.ts:4","id#id":"id: string","implementation-of-4#Implementation of":"OrgEntityInterface.id","inherited-from-4#Inherited from":"CommonSqliteEntity.id","source-4#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/common/common-sqlite.entity.d.ts:4","name#name":"name: string\nName","implementation-of-5#Implementation of":"OrgEntityInterface.name","source-5#Source":".tmp/repos/rockets/packages/nestjs-org/src/entities/org-sqlite.entity.ts:14","owner#owner":"owner: ReferenceIdInterface<string>\nOrg Owner","implementation-of-6#Implementation of":"OrgEntityInterface.owner","source-6#Source":".tmp/repos/rockets/packages/nestjs-org/src/entities/org-sqlite.entity.ts:19","version#version":"version: number\nVersion","implementation-of-7#Implementation of":"OrgEntityInterface.version","inherited-from-5#Inherited from":"CommonSqliteEntity.version","source-7#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/audit/audit-sqlite.entity.d.ts:6"}},"/reference/rockets/nestjs-org/classes/OrgUpdateDto":{"title":"Class: OrgUpdateDto","data":{"":"@concepta/nestjs-org • DocsPackages Example / @concepta/nestjs-org / OrgUpdateDtoOrg Update DTO","extends#Extends":"Pick<OrgDto, \"name\" | \"active\" | \"owner\">","implements#Implements":"OrgUpdatableInterface","constructors#Constructors":"","new-orgupdatedto#new OrgUpdateDto()":"new OrgUpdateDto(...args): OrgUpdateDto","parameters#Parameters":"• ...args: any[]","returns#Returns":"OrgUpdateDto","inherited-from#Inherited from":"PickType(OrgDto, ['name', 'active', 'owner'] as const).constructor","source#Source":".tmp/repos/rockets/node_modules/@nestjs/common/interfaces/type.interface.d.ts:2","properties#Properties":"","active#active":"active: boolean = true\nActive","implementation-of#Implementation of":"OrgUpdatableInterface.active","inherited-from-1#Inherited from":"PickType(OrgDto, ['name', 'active', 'owner'] as const).active","source-1#Source":".tmp/repos/rockets/packages/nestjs-org/src/dto/org.dto.ts:39","name#name":"name: string = ''\nName","implementation-of-1#Implementation of":"OrgUpdatableInterface.name","inherited-from-2#Inherited from":"PickType(OrgDto, ['name', 'active', 'owner'] as const).name","source-2#Source":".tmp/repos/rockets/packages/nestjs-org/src/dto/org.dto.ts:27","owner#owner":"owner: ReferenceIdInterface<string>\nOwner","implementation-of-2#Implementation of":"OrgUpdatableInterface.owner","inherited-from-3#Inherited from":"PickType(OrgDto, ['name', 'active', 'owner'] as const).owner","source-3#Source":".tmp/repos/rockets/packages/nestjs-org/src/dto/org.dto.ts:51","arguments#arguments":"static arguments: any","inherited-from-4#Inherited from":"PickType(OrgDto, ['name', 'active', 'owner'] as const).arguments","source-4#Source":"node_modules/typescript/lib/lib.es5.d.ts:304","caller#caller":"static caller: Function","inherited-from-5#Inherited from":"PickType(OrgDto, ['name', 'active', 'owner'] as const).caller","source-5#Source":"node_modules/typescript/lib/lib.es5.d.ts:305","length#length":"static readonly length: number","inherited-from-6#Inherited from":"PickType(OrgDto, ['name', 'active', 'owner'] as const).length","source-6#Source":"node_modules/typescript/lib/lib.es5.d.ts:301","name-1#name":"static readonly name: string\nReturns the name of the function. Function names are read-only and can not be changed.","inherited-from-7#Inherited from":"PickType(OrgDto, ['name', 'active', 'owner'] as const).name","source-7#Source":"node_modules/typescript/lib/lib.es2015.core.d.ts:97","methods#Methods":"","hasinstance#[hasInstance]()":"static [hasInstance](value): boolean\nDetermines whether the given value inherits from this function if this function was used\r\nas a constructor function.A constructor function can control which objects are recognized as its instances by\r\n'instanceof' by overriding this method.","parameters-1#Parameters":"• value: any","returns-1#Returns":"boolean","inherited-from-8#Inherited from":"PickType(OrgDto, ['name', 'active', 'owner'] as const).[hasInstance]","source-8#Source":"node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts:162","apply#apply()":"static apply(this, thisArg, argArray?): any\nCalls the function, substituting the specified object for the this value of the function, and the specified array for the arguments of the function.","parameters-2#Parameters":"• this: Function• thisArg: anyThe object to be used as the this object.• argArray?: anyA set of arguments to be passed to the function.","returns-2#Returns":"any","inherited-from-9#Inherited from":"PickType(OrgDto, ['name', 'active', 'owner'] as const).apply","source-9#Source":"node_modules/typescript/lib/lib.es5.d.ts:280","bind#bind()":"static bind(this, thisArg, ...argArray): any\nFor a given function, creates a bound function that has the same body as the original function.\r\nThe this object of the bound function is associated with the specified object, and has the specified initial parameters.","parameters-3#Parameters":"• this: Function• thisArg: anyAn object to which the this keyword can refer inside the new function.• ...argArray: any[]A list of arguments to be passed to the new function.","returns-3#Returns":"any","inherited-from-10#Inherited from":"PickType(OrgDto, ['name', 'active', 'owner'] as const).bind","source-10#Source":"node_modules/typescript/lib/lib.es5.d.ts:295","call#call()":"static call(this, thisArg, ...argArray): any\nCalls a method of an object, substituting another object for the current object.","parameters-4#Parameters":"• this: Function• thisArg: anyThe object to be used as the current object.• ...argArray: any[]A list of arguments to be passed to the method.","returns-4#Returns":"any","inherited-from-11#Inherited from":"PickType(OrgDto, ['name', 'active', 'owner'] as const).call","source-11#Source":"node_modules/typescript/lib/lib.es5.d.ts:287","tostring#toString()":"static toString(): string\nReturns a string representation of a function.","returns-5#Returns":"string","inherited-from-12#Inherited from":"PickType(OrgDto, ['name', 'active', 'owner'] as const).toString","source-12#Source":"node_modules/typescript/lib/lib.es5.d.ts:298"}},"/reference/rockets/nestjs-org/classes/OrgPostgresEntity":{"title":"Class: abstract OrgPostgresEntity","data":{"":"@concepta/nestjs-org • DocsPackages Example / @concepta/nestjs-org / OrgPostgresEntityOrg Postgres Entity","extends#Extends":"CommonPostgresEntity","implements#Implements":"OrgEntityInterface","constructors#Constructors":"","new-orgpostgresentity#new OrgPostgresEntity()":"new OrgPostgresEntity(): OrgPostgresEntity","returns#Returns":"OrgPostgresEntity","inherited-from#Inherited from":"CommonPostgresEntity.constructor","properties#Properties":"","active#active":"active: boolean = true\nFlag to determine if the org is active or not","implementation-of#Implementation of":"OrgEntityInterface.active","source#Source":".tmp/repos/rockets/packages/nestjs-org/src/entities/org-postgres.entity.ts:23","datecreated#dateCreated":"dateCreated: Date\nDate created.","implementation-of-1#Implementation of":"OrgEntityInterface.dateCreated","inherited-from-1#Inherited from":"CommonPostgresEntity.dateCreated","source-1#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/audit/audit-postgres.entity.d.ts:3","datedeleted#dateDeleted":"dateDeleted: AuditDateDeleted\nDate deleted.","implementation-of-2#Implementation of":"OrgEntityInterface.dateDeleted","inherited-from-2#Inherited from":"CommonPostgresEntity.dateDeleted","source-2#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/audit/audit-postgres.entity.d.ts:5","dateupdated#dateUpdated":"dateUpdated: Date\nDate updated.","implementation-of-3#Implementation of":"OrgEntityInterface.dateUpdated","inherited-from-3#Inherited from":"CommonPostgresEntity.dateUpdated","source-3#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/audit/audit-postgres.entity.d.ts:4","id#id":"id: string","implementation-of-4#Implementation of":"OrgEntityInterface.id","inherited-from-4#Inherited from":"CommonPostgresEntity.id","source-4#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/common/common-postgres.entity.d.ts:4","name#name":"name: string\nName","implementation-of-5#Implementation of":"OrgEntityInterface.name","source-5#Source":".tmp/repos/rockets/packages/nestjs-org/src/entities/org-postgres.entity.ts:17","owner#owner":"owner: ReferenceIdInterface<string>\nOwner","implementation-of-6#Implementation of":"OrgEntityInterface.owner","source-6#Source":".tmp/repos/rockets/packages/nestjs-org/src/entities/org-postgres.entity.ts:28","version#version":"version: number\nVersion","implementation-of-7#Implementation of":"OrgEntityInterface.version","inherited-from-5#Inherited from":"CommonPostgresEntity.version","source-7#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/audit/audit-postgres.entity.d.ts:6"}},"/reference/rockets/nestjs-org/enumerations/OrgResource":{"title":"Enumeration: OrgResource","data":{"":"@concepta/nestjs-org • DocsPackages Example / @concepta/nestjs-org / OrgResource","enumeration-members#Enumeration Members":"","many#Many":"Many: \"org-list\"","source#Source":".tmp/repos/rockets/packages/nestjs-org/src/org.types.ts:3","one#One":"One: \"org\"","source-1#Source":".tmp/repos/rockets/packages/nestjs-org/src/org.types.ts:2"}},"/reference/rockets/nestjs-org/globals":{"title":"@concepta/nestjs-org","data":{"":"@concepta/nestjs-org • DocsPackages Example / @concepta/nestjs-org","enumerations#Enumerations":"OrgResource","classes#Classes":"OrgController\nOrgCreateDto\nOrgCreateManyDto\nOrgCrudService\nOrgDto\nOrgLookupService\nOrgMemberPostgresEntity\nOrgMemberSqliteEntity\nOrgModule\nOrgMutateService\nOrgPaginatedDto\nOrgPostgresEntity\nOrgSqliteEntity\nOrgUpdateDto","interfaces#Interfaces":"OrgEntityInterface\nOrgLookupServiceInterface\nOrgMutateServiceInterface"}},"/reference/rockets/nestjs-org/interfaces/OrgEntityInterface":{"title":"Interface: OrgEntityInterface","data":{"":"@concepta/nestjs-org • DocsPackages Example / @concepta/nestjs-org / OrgEntityInterfaceIdentifiable by id.","see#See":"https://en.wikipedia.org/wiki/Reference_(computer_science)","extends#Extends":"OrgInterface","properties#Properties":"","active#active":"active: boolean","inherited-from#Inherited from":"OrgInterface.active","source#Source":".tmp/repos/rockets/packages/ts-core/dist/references/interfaces/reference-active.interface.d.ts:3","datecreated#dateCreated":"dateCreated: Date","inherited-from-1#Inherited from":"OrgInterface.dateCreated","source-1#Source":".tmp/repos/rockets/packages/ts-core/dist/audit/interfaces/audit-date-created.interface.d.ts:3","datedeleted#dateDeleted":"dateDeleted: AuditDateDeleted","inherited-from-2#Inherited from":"OrgInterface.dateDeleted","source-2#Source":".tmp/repos/rockets/packages/ts-core/dist/audit/interfaces/audit-date-deleted.interface.d.ts:3","dateupdated#dateUpdated":"dateUpdated: Date","inherited-from-3#Inherited from":"OrgInterface.dateUpdated","source-3#Source":".tmp/repos/rockets/packages/ts-core/dist/audit/interfaces/audit-date-updated.interface.d.ts:3","id#id":"id: string","inherited-from-4#Inherited from":"OrgInterface.id","source-4#Source":".tmp/repos/rockets/packages/ts-core/dist/references/interfaces/reference-id.interface.d.ts:3","members#members?":"optional members: OrgMemberInterface","inherited-from-5#Inherited from":"OrgInterface.members","source-5#Source":".tmp/repos/rockets/packages/ts-common/dist/org/interfaces/org.interface.d.ts:6","name#name":"name: string\nName","inherited-from-6#Inherited from":"OrgInterface.name","source-6#Source":".tmp/repos/rockets/packages/ts-common/dist/org/interfaces/org.interface.d.ts:5","owner#owner":"owner: ReferenceIdInterface<string>\nOrg Owner","inherited-from-7#Inherited from":"OrgInterface.owner","source-7#Source":".tmp/repos/rockets/packages/ts-common/dist/org/interfaces/org-owner.interface.d.ts:3","version#version":"version: number","inherited-from-8#Inherited from":"OrgInterface.version","source-8#Source":".tmp/repos/rockets/packages/ts-core/dist/audit/interfaces/audit-version.interface.d.ts:3"}},"/reference/rockets/nestjs-org/interfaces/OrgLookupServiceInterface":{"title":"Interface: OrgLookupServiceInterface","data":{"":"@concepta/nestjs-org • DocsPackages Example / @concepta/nestjs-org / OrgLookupServiceInterface","extends#Extends":"LookupIdInterface<ReferenceId, ReferenceIdInterface, QueryOptionsInterface>","properties#Properties":"","byid#byId()":"byId: (id, options?) => Promise<null | ReferenceIdInterface<string>>","parameters#Parameters":"• id: string• options?: QueryOptionsInterface","returns#Returns":"Promise<null | ReferenceIdInterface<string>>","inherited-from#Inherited from":"LookupIdInterface.byId","source#Source":".tmp/repos/rockets/packages/ts-core/dist/references/interfaces/lookup/lookup-id.interface.d.ts:5","methods#Methods":"","getowner#getOwner()":"getOwner(org, queryOptions?): Promise<null | ReferenceIdInterface<string>>","parameters-1#Parameters":"• org: OrgOwnerInterface• queryOptions?: QueryOptionsInterface","returns-1#Returns":"Promise<null | ReferenceIdInterface<string>>","source-1#Source":".tmp/repos/rockets/packages/nestjs-org/src/interfaces/org-lookup-service.interface.ts:15"}},"/reference/rockets/nestjs-org/interfaces/OrgMutateServiceInterface":{"title":"Interface: OrgMutateServiceInterface","data":{"":"@concepta/nestjs-org • DocsPackages Example / @concepta/nestjs-org / OrgMutateServiceInterface","extends#Extends":"CreateOneInterface<OrgCreatableInterface, OrgEntityInterface>.UpdateOneInterface<OrgUpdatableInterface & ReferenceIdInterface, OrgEntityInterface, QueryOptionsInterface>.ReplaceOneInterface<OrgCreatableInterface & ReferenceIdInterface, OrgEntityInterface, QueryOptionsInterface>.RemoveOneInterface<OrgEntityInterface, OrgEntityInterface, QueryOptionsInterface>","properties#Properties":"","create#create()":"create: (object, options?) => Promise<OrgEntityInterface>","parameters#Parameters":"• object: OrgCreatableInterface• options?: ReferenceQueryOptionsInterface","returns#Returns":"Promise<OrgEntityInterface>","inherited-from#Inherited from":"CreateOneInterface.create","source#Source":".tmp/repos/rockets/packages/ts-core/dist/references/interfaces/mutate/create-one.interface.d.ts:4","remove#remove()":"remove: (object, options?) => Promise<OrgEntityInterface>","parameters-1#Parameters":"• object: OrgEntityInterface• options?: QueryOptionsInterface","returns-1#Returns":"Promise<OrgEntityInterface>","inherited-from-1#Inherited from":"RemoveOneInterface.remove","source-1#Source":".tmp/repos/rockets/packages/ts-core/dist/references/interfaces/mutate/remove-one.interface.d.ts:4","replace#replace()":"replace: (object, options?) => Promise<OrgEntityInterface>","parameters-2#Parameters":"• object: OrgCreatableInterface & ReferenceIdInterface<string>• options?: QueryOptionsInterface","returns-2#Returns":"Promise<OrgEntityInterface>","inherited-from-2#Inherited from":"ReplaceOneInterface.replace","source-2#Source":".tmp/repos/rockets/packages/ts-core/dist/references/interfaces/mutate/replace-one.interface.d.ts:4","update#update()":"update: (object, options?) => Promise<OrgEntityInterface>","parameters-3#Parameters":"• object: OrgUpdatableInterface & ReferenceIdInterface<string>• options?: QueryOptionsInterface","returns-3#Returns":"Promise<OrgEntityInterface>","inherited-from-3#Inherited from":"UpdateOneInterface.update","source-3#Source":".tmp/repos/rockets/packages/ts-core/dist/references/interfaces/mutate/update-one.interface.d.ts:4"}},"/reference/rockets/nestjs-otp/README":{"title":"Rockets NestJS Otp","data":{"":"@concepta/nestjs-otp • DocsPackages Example / @concepta/nestjs-otpA module for managing a basic Otp entity, including controller with full CRUD, DTOs, sample data factory and seeder.","project#Project":"","installation#Installation":"yarn add @concepta/nestjs-otp","usage#Usage":"// ...\nimport { TypeOrmExtModule } from '@concepta/nestjs-typeorm-ext';\nimport { OtpModule } from '@concepta/nestjs-user';\nimport { CrudModule } from '@concepta/nestjs-crud';\n@Module({\n  imports: [\n    TypeOrmExtModule.forRoot({\n      type: 'postgres',\n      url: 'postgres://user:pass@localhost:5432/postgres',\n    }),\n    CrudModule.forRoot({}),\n    OtpModule.forRoot({}),\n  ],\n})\nexport class AppModule {}","configuration#Configuration":"Seeding\nENV","seeding#Seeding":"Configurations specific to (optional) database seeding.","env#ENV":"Configurations available via environment.\nVariable\tType\tDefault\t\tORG_MODULE_SEEDER_AMOUNT\t<number>\t50\tnumber of additional users to create"}},"/reference/rockets/nestjs-otp/classes/OtpCreateDto":{"title":"Class: OtpCreateDto","data":{"":"@concepta/nestjs-otp • DocsPackages Example / @concepta/nestjs-otp / OtpCreateDtoOtp Create DTO","implements#Implements":"OtpCreatableInterface","constructors#Constructors":"","new-otpcreatedto#new OtpCreateDto()":"new OtpCreateDto(): OtpCreateDto","returns#Returns":"OtpCreateDto","properties#Properties":"","assignee#assignee":"assignee: ReferenceIdInterface<string>\nAssignee","implementation-of#Implementation of":"OtpCreatableInterface.assignee","source#Source":"packages/nestjs-otp/src/dto/otp-create.dto.ts:41","category#category":"category: string = ''\ncategory","implementation-of-1#Implementation of":"OtpCreatableInterface.category","source-1#Source":"packages/nestjs-otp/src/dto/otp-create.dto.ts:17","expiresin#expiresIn":"expiresIn: string = ''\nExpressed in seconds or a string describing a time span zeit/ms.Eg: 60, \"2 days\", \"10h\", \"7d\"","implementation-of-2#Implementation of":"OtpCreatableInterface.expiresIn","source-2#Source":"packages/nestjs-otp/src/dto/otp-create.dto.ts:33","type#type":"type: string = ''\ntype","implementation-of-3#Implementation of":"OtpCreatableInterface.type","source-3#Source":"packages/nestjs-otp/src/dto/otp-create.dto.ts:24"}},"/reference/rockets/nestjs-otp/classes/OtpModule":{"title":"Class: OtpModule","data":{"":"@concepta/nestjs-otp • DocsPackages Example / @concepta/nestjs-otp / OtpModuleOtp Module","extends#Extends":"OtpModuleClass","constructors#Constructors":"","new-otpmodule#new OtpModule()":"new OtpModule(): OtpModule","returns#Returns":"OtpModule","inherited-from#Inherited from":"OtpModuleClass.constructor","source#Source":"node_modules/@nestjs/common/module-utils/interfaces/configurable-module-cls.interface.d.ts:12","methods#Methods":"","forfeature#forFeature()":"static forFeature(options): DynamicModule","parameters#Parameters":"• options: OtpOptions","returns-1#Returns":"DynamicModule","source-1#Source":"packages/nestjs-otp/src/otp.module.ts:33","forroot#forRoot()":"static forRoot(options): DynamicModule","parameters-1#Parameters":"• options: OtpOptions","returns-2#Returns":"DynamicModule","source-2#Source":"packages/nestjs-otp/src/otp.module.ts:25","forrootasync#forRootAsync()":"static forRootAsync(options): DynamicModule","parameters-2#Parameters":"• options: OtpAsyncOptions","returns-3#Returns":"DynamicModule","source-3#Source":"packages/nestjs-otp/src/otp.module.ts:29","register#register()":"static register(options): DynamicModule","parameters-3#Parameters":"• options: OtpOptions","returns-4#Returns":"DynamicModule","overrides#Overrides":"OtpModuleClass.register","source-4#Source":"packages/nestjs-otp/src/otp.module.ts:17","registerasync#registerAsync()":"static registerAsync(options): DynamicModule","parameters-4#Parameters":"• options: OtpAsyncOptions","returns-5#Returns":"DynamicModule","overrides-1#Overrides":"OtpModuleClass.registerAsync","source-5#Source":"packages/nestjs-otp/src/otp.module.ts:21"}},"/reference/rockets/nestjs-otp/classes/OtpPostgresEntity":{"title":"Class: abstract OtpPostgresEntity","data":{"":"@concepta/nestjs-otp • DocsPackages Example / @concepta/nestjs-otp / OtpPostgresEntityOtp Postgres Entity","extends#Extends":"CommonPostgresEntity","implements#Implements":"OtpInterface","constructors#Constructors":"","new-otppostgresentity#new OtpPostgresEntity()":"new OtpPostgresEntity(): OtpPostgresEntity","returns#Returns":"OtpPostgresEntity","inherited-from#Inherited from":"CommonPostgresEntity.constructor","properties#Properties":"","assignee#assignee":"assignee: ReferenceIdInterface<string>\nShould be overwrite by the table it will be assigned to","implementation-of#Implementation of":"OtpInterface.assignee","source#Source":"packages/nestjs-otp/src/entities/otp-postgres.entity.ts:28","category#category":"category: string\nName","implementation-of-1#Implementation of":"OtpInterface.category","source-1#Source":"packages/nestjs-otp/src/entities/otp-postgres.entity.ts:14","datecreated#dateCreated":"dateCreated: Date\nDate created.","implementation-of-2#Implementation of":"OtpInterface.dateCreated","inherited-from-1#Inherited from":"CommonPostgresEntity.dateCreated","source-2#Source":"packages/typeorm-common/dist/entities/audit/audit-postgres.entity.d.ts:3","datedeleted#dateDeleted":"dateDeleted: AuditDateDeleted\nDate deleted.","implementation-of-3#Implementation of":"OtpInterface.dateDeleted","inherited-from-2#Inherited from":"CommonPostgresEntity.dateDeleted","source-3#Source":"packages/typeorm-common/dist/entities/audit/audit-postgres.entity.d.ts:5","dateupdated#dateUpdated":"dateUpdated: Date\nDate updated.","implementation-of-4#Implementation of":"OtpInterface.dateUpdated","inherited-from-3#Inherited from":"CommonPostgresEntity.dateUpdated","source-4#Source":"packages/typeorm-common/dist/entities/audit/audit-postgres.entity.d.ts:4","expirationdate#expirationDate":"expirationDate: Date\nDate it will expire","implementation-of-5#Implementation of":"OtpInterface.expirationDate","source-5#Source":"packages/nestjs-otp/src/entities/otp-postgres.entity.ts:23","id#id":"id: string","implementation-of-6#Implementation of":"OtpInterface.id","inherited-from-4#Inherited from":"CommonPostgresEntity.id","source-6#Source":"packages/typeorm-common/dist/entities/common/common-postgres.entity.d.ts:4","passcode#passcode":"passcode: string\nPasscode","implementation-of-7#Implementation of":"OtpInterface.passcode","source-7#Source":"packages/nestjs-otp/src/entities/otp-postgres.entity.ts:20","type#type":"type: string\nType of the passcode","implementation-of-8#Implementation of":"OtpInterface.type","source-8#Source":"packages/nestjs-otp/src/entities/otp-postgres.entity.ts:17","version#version":"version: number\nVersion","implementation-of-9#Implementation of":"OtpInterface.version","inherited-from-5#Inherited from":"CommonPostgresEntity.version","source-9#Source":"packages/typeorm-common/dist/entities/audit/audit-postgres.entity.d.ts:6"}},"/reference/rockets/nestjs-otp/classes/OtpService":{"title":"Class: OtpService","data":{"":"@concepta/nestjs-otp • DocsPackages Example / @concepta/nestjs-otp / OtpService","implements#Implements":"OtpServiceInterface","constructors#Constructors":"","new-otpservice#new OtpService()":"new OtpService(allOtpRepos, settings): OtpService","parameters#Parameters":"• allOtpRepos: Record<string, Repository<OtpInterface>>• settings: OtpSettingsInterface","returns#Returns":"OtpService","source#Source":"packages/nestjs-otp/src/services/otp.service.ts:31","properties#Properties":"","allotprepos#allOtpRepos":"private allOtpRepos: Record<string, Repository<OtpInterface>>","source-1#Source":"packages/nestjs-otp/src/services/otp.service.ts:33","settings#settings":"protected readonly settings: OtpSettingsInterface","source-2#Source":"packages/nestjs-otp/src/services/otp.service.ts:35","methods#Methods":"","clear#clear()":"clear(assignment, otp, queryOptions?): Promise<void>\nClear all otps for assign in given category.","parameters-1#Parameters":"• assignment: stringThe assignment of the repository• otp: Pick<OtpInterface, \"category\" | \"assignee\">The otp to clear• queryOptions?: QueryOptionsInterface","returns-1#Returns":"Promise<void>","implementation-of#Implementation of":"OtpServiceInterface.clear","source-3#Source":"packages/nestjs-otp/src/services/otp.service.ts:141","create#create()":"create(assignment, otp, queryOptions?): Promise<OtpInterface>\nCreate a otp with a for the given assignee.","parameters-2#Parameters":"• assignment: stringThe otp assignment• otp: OtpCreatableInterfaceThe data to create• queryOptions?: QueryOptionsInterface","returns-2#Returns":"Promise<OtpInterface>","implementation-of-1#Implementation of":"OtpServiceInterface.create","source-4#Source":"packages/nestjs-otp/src/services/otp.service.ts:44","delete#delete()":"delete(assignment, otp, queryOptions?): Promise<void>\nDelete a otp based on params","parameters-3#Parameters":"• assignment: stringThe otp assignment• otp: Pick<OtpInterface, \"category\" | \"assignee\" | \"passcode\">The otp to delete• queryOptions?: QueryOptionsInterface","returns-3#Returns":"Promise<void>","implementation-of-2#Implementation of":"OtpServiceInterface.delete","source-5#Source":"packages/nestjs-otp/src/services/otp.service.ts:122","deleteotp#deleteOtp()":"private deleteOtp(assignment, id, queryOptions?): Promise<void>\nDelete OTP based on assignment","parameters-4#Parameters":"• assignment: stringThe assignment to delete id from• id: string | string[]The id or ids to delete• queryOptions?: QueryOptionsInterface","returns-4#Returns":"Promise<void>","source-6#Source":"packages/nestjs-otp/src/services/otp.service.ts:167","getassignedotps#getAssignedOtps()":"protected getAssignedOtps(assignment, otp, queryOptions?): Promise<OtpInterface[]>\nGet all OTPs for assignee.","parameters-5#Parameters":"• assignment: stringThe assignment of the check• otp: Pick<OtpInterface, \"category\" | \"assignee\">The otp to get assignments• queryOptions?: QueryOptionsInterface","returns-5#Returns":"Promise<OtpInterface[]>","source-7#Source":"packages/nestjs-otp/src/services/otp.service.ts:191","getassignmentrepo#getAssignmentRepo()":"private getAssignmentRepo(assignment): Repository<OtpInterface>\nGet the assignment repo for the given assignment.","parameters-6#Parameters":"• assignment: stringThe otp assignment","returns-6#Returns":"Repository<OtpInterface>","source-8#Source":"packages/nestjs-otp/src/services/otp.service.ts:261","getbypasscode#getByPasscode()":"protected getByPasscode(assignment, otp, queryOptions?): Promise<null | OtpInterface>","parameters-7#Parameters":"• assignment: string• otp: Pick<OtpInterface, \"category\" | \"passcode\">• queryOptions?: QueryOptionsInterface","returns-7#Returns":"Promise<null | OtpInterface>","source-9#Source":"packages/nestjs-otp/src/services/otp.service.ts:223","getexpirationdate#getExpirationDate()":"private getExpirationDate(expiresIn): Date","parameters-8#Parameters":"• expiresIn: string","returns-8#Returns":"Date","source-10#Source":"packages/nestjs-otp/src/services/otp.service.ts:298","validate#validate()":"validate(assignment, otp, deleteIfValid, queryOptions?): Promise<null | ReferenceAssigneeInterface<ReferenceIdInterface<string>>>\nCheck if otp is valid","parameters-9#Parameters":"• assignment: stringThe otp assignment• otp: Pick<OtpInterface, \"category\" | \"passcode\">The otp to validate• deleteIfValid: boolean= falseIf true, delete the otp if it is valid• queryOptions?: QueryOptionsInterface","returns-9#Returns":"Promise<null | ReferenceAssigneeInterface<ReferenceIdInterface<string>>>","implementation-of-3#Implementation of":"OtpServiceInterface.validate","source-11#Source":"packages/nestjs-otp/src/services/otp.service.ts:92","validatedto#validateDto()":"protected validateDto<T>(type, data): Promise<T>","type-parameters#Type parameters":"• T extends DeepPartial<OtpInterface>","parameters-10#Parameters":"• type: Type<T>• data: T","returns-10#Returns":"Promise<T>","source-12#Source":"packages/nestjs-otp/src/services/otp.service.ts:275"}},"/reference/rockets/nestjs-otp/classes/OtpSqliteEntity":{"title":"Class: abstract OtpSqliteEntity","data":{"":"@concepta/nestjs-otp • DocsPackages Example / @concepta/nestjs-otp / OtpSqliteEntityOtp Sqlite Entity","extends#Extends":"CommonSqliteEntity","implements#Implements":"OtpInterface","constructors#Constructors":"","new-otpsqliteentity#new OtpSqliteEntity()":"new OtpSqliteEntity(): OtpSqliteEntity","returns#Returns":"OtpSqliteEntity","inherited-from#Inherited from":"CommonSqliteEntity.constructor","properties#Properties":"","assignee#assignee":"assignee: ReferenceIdInterface<string>\nShould be overwrite by the table it will be assigned to","implementation-of#Implementation of":"OtpInterface.assignee","source#Source":"packages/nestjs-otp/src/entities/otp-sqlite.entity.ts:28","category#category":"category: string\nName","implementation-of-1#Implementation of":"OtpInterface.category","source-1#Source":"packages/nestjs-otp/src/entities/otp-sqlite.entity.ts:14","datecreated#dateCreated":"dateCreated: Date\nDate created.","implementation-of-2#Implementation of":"OtpInterface.dateCreated","inherited-from-1#Inherited from":"CommonSqliteEntity.dateCreated","source-2#Source":"packages/typeorm-common/dist/entities/audit/audit-sqlite.entity.d.ts:3","datedeleted#dateDeleted":"dateDeleted: AuditDateDeleted\nDate deleted.","implementation-of-3#Implementation of":"OtpInterface.dateDeleted","inherited-from-2#Inherited from":"CommonSqliteEntity.dateDeleted","source-3#Source":"packages/typeorm-common/dist/entities/audit/audit-sqlite.entity.d.ts:5","dateupdated#dateUpdated":"dateUpdated: Date\nDate updated.","implementation-of-4#Implementation of":"OtpInterface.dateUpdated","inherited-from-3#Inherited from":"CommonSqliteEntity.dateUpdated","source-4#Source":"packages/typeorm-common/dist/entities/audit/audit-sqlite.entity.d.ts:4","expirationdate#expirationDate":"expirationDate: Date\nDate it will expire","implementation-of-5#Implementation of":"OtpInterface.expirationDate","source-5#Source":"packages/nestjs-otp/src/entities/otp-sqlite.entity.ts:23","id#id":"id: string","implementation-of-6#Implementation of":"OtpInterface.id","inherited-from-4#Inherited from":"CommonSqliteEntity.id","source-6#Source":"packages/typeorm-common/dist/entities/common/common-sqlite.entity.d.ts:4","passcode#passcode":"passcode: string\nPasscode","implementation-of-7#Implementation of":"OtpInterface.passcode","source-7#Source":"packages/nestjs-otp/src/entities/otp-sqlite.entity.ts:20","type#type":"type: string\nType of the passcode","implementation-of-8#Implementation of":"OtpInterface.type","source-8#Source":"packages/nestjs-otp/src/entities/otp-sqlite.entity.ts:17","version#version":"version: number\nVersion","implementation-of-9#Implementation of":"OtpInterface.version","inherited-from-5#Inherited from":"CommonSqliteEntity.version","source-9#Source":"packages/typeorm-common/dist/entities/audit/audit-sqlite.entity.d.ts:6"}},"/reference/rockets/nestjs-otp/globals":{"title":"@concepta/nestjs-otp","data":{"":"@concepta/nestjs-otp • DocsPackages Example / @concepta/nestjs-otp","classes#Classes":"OtpCreateDto\nOtpModule\nOtpPostgresEntity\nOtpService\nOtpSqliteEntity"}},"/reference/rockets/nestjs-password/README":{"title":"Rockets NestJS Password","data":{"":"@concepta/nestjs-password • DocsPackages Example / @concepta/nestjs-passwordA flexible Password utilities module that provides services for password strength, creation and storage.","project#Project":"","overview#Overview":"The module exports three services: PasswordStrengthService, PasswordCreationService, and PasswordStorageService.The PasswordCreationService uses the PasswordStrengthService internally for check password strength.","installation#Installation":"yarn add @concepta/nestjs-password","todo#TODO":"Make all services overridable at time of registration."}},"/reference/rockets/nestjs-password/classes/PasswordCreationService":{"title":"Class: PasswordCreationService","data":{"":"@concepta/nestjs-password • DocsPackages Example / @concepta/nestjs-password / PasswordCreationServiceService with functions related to password creation\nto check if password is strong, and the number of attempts user can do to update a password","implements#Implements":"PasswordCreationServiceInterface","constructors#Constructors":"","new-passwordcreationservice#new PasswordCreationService()":"new PasswordCreationService(settings, passwordStorageService, passwordValidationService, passwordStrengthService): PasswordCreationService\nConstructor","parameters#Parameters":"• settings: PasswordSettingsInterface• passwordStorageService: PasswordStorageService• passwordValidationService: PasswordValidationService• passwordStrengthService: PasswordStrengthService","returns#Returns":"PasswordCreationService","source#Source":"packages/nestjs-password/src/services/password-creation.service.ts:26","properties#Properties":"","passwordstorageservice#passwordStorageService":"protected readonly passwordStorageService: PasswordStorageService","source-1#Source":"packages/nestjs-password/src/services/password-creation.service.ts:29","passwordstrengthservice#passwordStrengthService":"protected readonly passwordStrengthService: PasswordStrengthService","source-2#Source":"packages/nestjs-password/src/services/password-creation.service.ts:31","passwordvalidationservice#passwordValidationService":"protected readonly passwordValidationService: PasswordValidationService","source-3#Source":"packages/nestjs-password/src/services/password-creation.service.ts:30","settings#settings":"protected readonly settings: PasswordSettingsInterface","source-4#Source":"packages/nestjs-password/src/services/password-creation.service.ts:28","methods#Methods":"","checkattempt#checkAttempt()":"checkAttempt(numOfAttempts): boolean\nCheck if number of current attempt is allowed based on the amount of attempts left\nif the number of attempts left is greater then","parameters-1#Parameters":"• numOfAttempts: number= 0","returns-1#Returns":"booleanNumber of attempts user has to try","implementation-of#Implementation of":"PasswordCreationServiceInterface.checkAttempt","source-5#Source":"packages/nestjs-password/src/services/password-creation.service.ts:119","checkattemptleft#checkAttemptLeft()":"checkAttemptLeft(numOfAttempts): number\nCheck number of attempts of using password","parameters-2#Parameters":"• numOfAttempts: number= 0number of attempts","returns-2#Returns":"number","implementation-of-1#Implementation of":"PasswordCreationServiceInterface.checkAttemptLeft","source-6#Source":"packages/nestjs-password/src/services/password-creation.service.ts:128","createobject#createObject()":"","createobjectobject-options#createObject(object, options)":"createObject<T>(object, options?): Promise<Omit<T, \"password\"> & PasswordStorageInterface>\nCreate password for an object.","type-parameters#Type parameters":"• T extends PasswordPlainInterface","parameters-3#Parameters":"• object: TAn object containing the new password to hash.• options?: PasswordCreateObjectOptionsInterfacePassword create options.","returns-3#Returns":"Promise<Omit<T, \"password\"> & PasswordStorageInterface>A new object with the password hashed, with salt added.","implementation-of-2#Implementation of":"PasswordCreationServiceInterface.createObject","source-7#Source":"packages/nestjs-password/src/services/password-creation.service.ts:41","createobjectobject-options-1#createObject(object, options)":"createObject<T>(object, options?): Promise<Omit<T, \"password\"> | Omit<T, \"password\"> & Partial<PasswordStorageInterface>>\nCreate password for an object.","type-parameters-1#Type parameters":"• T extends Partial<PasswordPlainInterface>","parameters-4#Parameters":"• object: TAn object containing the new password to hash.• options?: PasswordCreateObjectOptionsInterfacePassword create options.","returns-4#Returns":"Promise<Omit<T, \"password\"> | Omit<T, \"password\"> & Partial<PasswordStorageInterface>>A new object with the password hashed, with salt added.","implementation-of-3#Implementation of":"PasswordCreationServiceInterface.createObject","source-8#Source":"packages/nestjs-password/src/services/password-creation.service.ts:53","validatecurrent#validateCurrent()":"validateCurrent(options): Promise<boolean>","parameters-5#Parameters":"• options: Partial<PasswordCurrentPasswordInterface>","returns-5#Returns":"Promise<boolean>","implementation-of-4#Implementation of":"PasswordCreationServiceInterface.validateCurrent","source-9#Source":"packages/nestjs-password/src/services/password-creation.service.ts:89"}},"/reference/rockets/nestjs-password/classes/PasswordModule":{"title":"Class: PasswordModule","data":{"":"@concepta/nestjs-password • DocsPackages Example / @concepta/nestjs-password / PasswordModule","extends#Extends":"PasswordModuleClass","constructors#Constructors":"","new-passwordmodule#new PasswordModule()":"new PasswordModule(): PasswordModule","returns#Returns":"PasswordModule","inherited-from#Inherited from":"PasswordModuleClass.constructor","source#Source":"node_modules/@nestjs/common/module-utils/interfaces/configurable-module-cls.interface.d.ts:12","methods#Methods":"","forfeature#forFeature()":"static forFeature(options): DynamicModule","parameters#Parameters":"• options: PasswordOptions","returns-1#Returns":"DynamicModule","source-1#Source":"packages/nestjs-password/src/password.module.ts:30","forroot#forRoot()":"static forRoot(options): DynamicModule","parameters-1#Parameters":"• options: PasswordOptions","returns-2#Returns":"DynamicModule","source-2#Source":"packages/nestjs-password/src/password.module.ts:22","forrootasync#forRootAsync()":"static forRootAsync(options): DynamicModule","parameters-2#Parameters":"• options: PasswordAsyncOptions","returns-3#Returns":"DynamicModule","source-3#Source":"packages/nestjs-password/src/password.module.ts:26","register#register()":"static register(options): DynamicModule","parameters-3#Parameters":"• options: PasswordOptions","returns-4#Returns":"DynamicModule","overrides#Overrides":"PasswordModuleClass.register","source-4#Source":"packages/nestjs-password/src/password.module.ts:14","registerasync#registerAsync()":"static registerAsync(options): DynamicModule","parameters-4#Parameters":"• options: PasswordAsyncOptions","returns-5#Returns":"DynamicModule","overrides-1#Overrides":"PasswordModuleClass.registerAsync","source-5#Source":"packages/nestjs-password/src/password.module.ts:18"}},"/reference/rockets/nestjs-password/classes/PasswordStorageService":{"title":"Class: PasswordStorageService","data":{"":"@concepta/nestjs-password • DocsPackages Example / @concepta/nestjs-password / PasswordStorageServiceService with functions related to password security","implements#Implements":"PasswordStorageServiceInterface","constructors#Constructors":"","new-passwordstorageservice#new PasswordStorageService()":"new PasswordStorageService(): PasswordStorageService","returns#Returns":"PasswordStorageService","methods#Methods":"","generatesalt#generateSalt()":"generateSalt(): Promise<string>\nGenerate Salts to safeguard passwords in storage.","returns-1#Returns":"Promise<string>","implementation-of#Implementation of":"PasswordStorageServiceInterface.generateSalt","source#Source":"packages/nestjs-password/src/services/password-storage.service.ts:15","hash#hash()":"hash(password, options?): Promise<PasswordStorageInterface>\nHash a password using a salt, if no\nwas passed, then one will be generated.","parameters#Parameters":"• password: stringPassword to be hashed• options?• options.salt?: string","returns-2#Returns":"Promise<PasswordStorageInterface>","implementation-of-1#Implementation of":"PasswordStorageServiceInterface.hash","source-1#Source":"packages/nestjs-password/src/services/password-storage.service.ts:26","hashobject#hashObject()":"","hashobjectobject-options#hashObject(object, options)":"hashObject<T>(object, options?): Promise<Omit<T, \"password\"> & PasswordStorageInterface>\nHash password for an object.","type-parameters#Type parameters":"• T extends PasswordPlainInterface","parameters-1#Parameters":"• object: TAn object containing the new password to hash.• options?• options.required?: booleanSet to true if password is required.• options.salt?: stringOptional salt. If not provided, one will be generated.","returns-3#Returns":"Promise<Omit<T, \"password\"> & PasswordStorageInterface>A new object with the password hashed, with salt added.","implementation-of-2#Implementation of":"PasswordStorageServiceInterface.hashObject","source-2#Source":"packages/nestjs-password/src/services/password-storage.service.ts:49","hashobjectobject-options-1#hashObject(object, options)":"hashObject<T>(object, options?): Promise<Omit<T, \"password\"> | Omit<T, \"password\"> & PasswordStorageInterface>\nHash password for an object if the password property exists.","type-parameters-1#Type parameters":"• T extends PasswordPlainInterface","parameters-2#Parameters":"• object: Partial<T>An object containing the new password to hash.• options?• options.required?: booleanSet to true if password is required.• options.salt?: stringOptional salt. If not provided, one will be generated.","returns-4#Returns":"Promise<Omit<T, \"password\"> | Omit<T, \"password\"> & PasswordStorageInterface>A new object with the password hashed, with salt added.","implementation-of-3#Implementation of":"PasswordStorageServiceInterface.hashObject","source-3#Source":"packages/nestjs-password/src/services/password-storage.service.ts:65"}},"/reference/rockets/nestjs-password/classes/PasswordStrengthService":{"title":"Class: PasswordStrengthService","data":{"":"@concepta/nestjs-password • DocsPackages Example / @concepta/nestjs-password / PasswordStrengthServiceService to validate password strength","implements#Implements":"PasswordStrengthServiceInterface","constructors#Constructors":"","new-passwordstrengthservice#new PasswordStrengthService()":"new PasswordStrengthService(settings): PasswordStrengthService\nconstructor","parameters#Parameters":"• settings: PasswordSettingsInterface","returns#Returns":"PasswordStrengthService","source#Source":"packages/nestjs-password/src/services/password-strength.service.ts:21","properties#Properties":"","settings#settings":"protected readonly settings: PasswordSettingsInterface","source-1#Source":"packages/nestjs-password/src/services/password-strength.service.ts:23","methods#Methods":"","isstrong#isStrong()":"isStrong(password): boolean\nMethod to check if password is strong","parameters-1#Parameters":"• password: string","returns-1#Returns":"booleanpassword strength","implementation-of#Implementation of":"PasswordStrengthServiceInterface.isStrong","source-2#Source":"packages/nestjs-password/src/services/password-strength.service.ts:31"}},"/reference/rockets/nestjs-password/classes/PasswordValidationService":{"title":"Class: PasswordValidationService","data":{"":"@concepta/nestjs-password • DocsPackages Example / @concepta/nestjs-password / PasswordValidationServiceService with functions related to password validation","implements#Implements":"PasswordValidationServiceInterface","constructors#Constructors":"","new-passwordvalidationservice#new PasswordValidationService()":"new PasswordValidationService(): PasswordValidationService","returns#Returns":"PasswordValidationService","methods#Methods":"","validate#validate()":"validate(options): Promise<boolean>\nValidate if password matches and its valid.","parameters#Parameters":"• options• options.password: stringPlain text password• options.passwordHash: stringPassword hashed• options.passwordSalt: stringsalt to be used on plain password to see it match","returns-1#Returns":"Promise<boolean>","implementation-of#Implementation of":"PasswordValidationServiceInterface.validate","source#Source":"packages/nestjs-password/src/services/password-validation.service.ts:20","validateobject#validateObject()":"validateObject<T>(password, object): Promise<boolean>\nValidate password on an object.","type-parameters#Type parameters":"• T extends PasswordStorageInterface","parameters-1#Parameters":"• password: string• object: TThe object on which the password and salt are stored","returns-2#Returns":"Promise<boolean>","implementation-of-1#Implementation of":"PasswordValidationServiceInterface.validateObject","source-1#Source":"packages/nestjs-password/src/services/password-validation.service.ts:38"}},"/reference/rockets/nestjs-password/enumerations/PasswordStrengthEnum":{"title":"Enumeration: PasswordStrengthEnum","data":{"":"@concepta/nestjs-password • DocsPackages Example / @concepta/nestjs-password / PasswordStrengthEnumEnum for password strength","enumeration-members#Enumeration Members":"","medium#Medium":"Medium: 2","source#Source":"packages/nestjs-password/src/enum/password-strength.enum.ts:7","none#None":"None: 0","source-1#Source":"packages/nestjs-password/src/enum/password-strength.enum.ts:5","strong#Strong":"Strong: 3","source-2#Source":"packages/nestjs-password/src/enum/password-strength.enum.ts:8","verystrong#VeryStrong":"VeryStrong: 4","source-3#Source":"packages/nestjs-password/src/enum/password-strength.enum.ts:9","weak#Weak":"Weak: 1","source-4#Source":"packages/nestjs-password/src/enum/password-strength.enum.ts:6"}},"/reference/rockets/nestjs-password/globals":{"title":"@concepta/nestjs-password","data":{"":"@concepta/nestjs-password • DocsPackages Example / @concepta/nestjs-password","enumerations#Enumerations":"PasswordStrengthEnum","classes#Classes":"PasswordCreationService\nPasswordModule\nPasswordStorageService\nPasswordStrengthService\nPasswordValidationService","interfaces#Interfaces":"PasswordCreateObjectOptionsInterface\nPasswordCreationServiceInterface\nPasswordOptionsInterface\nPasswordStorageInterface\nPasswordStorageServiceInterface\nPasswordValidationServiceInterface"}},"/reference/rockets/nestjs-password/interfaces/PasswordCreateObjectOptionsInterface":{"title":"Interface: PasswordCreateObjectOptionsInterface","data":{"":"@concepta/nestjs-password • DocsPackages Example / @concepta/nestjs-password / PasswordCreateObjectOptionsInterface","properties#Properties":"","required#required?":"optional required: boolean\nSet to true if password is required.","source#Source":"packages/nestjs-password/src/interfaces/password-create-object-options.interface.ts:10","salt#salt?":"optional salt: string\nOptional salt. If not provided, one will be generated.","source-1#Source":"packages/nestjs-password/src/interfaces/password-create-object-options.interface.ts:5"}},"/reference/rockets/nestjs-password/interfaces/PasswordCreationServiceInterface":{"title":"Interface: PasswordCreationServiceInterface","data":{"":"@concepta/nestjs-password • DocsPackages Example / @concepta/nestjs-password / PasswordCreationServiceInterfacePassword Creation Service Interface","properties#Properties":"","validatecurrent#validateCurrent()":"validateCurrent: (options) => Promise<boolean>\nValidate the current password for the targeted object.","parameters#Parameters":"• options: Partial<PasswordCurrentPasswordInterface>Validate current options.","returns#Returns":"Promise<boolean>","source#Source":"packages/nestjs-password/src/interfaces/password-creation-service.interface.ts:30","methods#Methods":"","checkattempt#checkAttempt()":"checkAttempt(numOfAttempts): boolean\nCheck if attempt is valid.","parameters-1#Parameters":"• numOfAttempts: number","returns-1#Returns":"booleanNumber of attempts user has to try","source-1#Source":"packages/nestjs-password/src/interfaces/password-creation-service.interface.ts:39","checkattemptleft#checkAttemptLeft()":"checkAttemptLeft(numOfAttempts): number\nCheck number of attempts of using password","parameters-2#Parameters":"• numOfAttempts: numbernumber of attempts","returns-2#Returns":"numbernumber of attempts left","source-2#Source":"packages/nestjs-password/src/interfaces/password-creation-service.interface.ts:47","createobject#createObject()":"createObject<T>(object, options?): Promise<Omit<T, \"password\"> | Omit<T, \"password\"> & PasswordStorageInterface>\nCreate password for an object (optionally).","type-parameters#Type parameters":"• T extends PasswordPlainInterface","parameters-3#Parameters":"• object: TAn object containing the new password to hash.• options?: PasswordCreateObjectOptionsInterfacePassword create options.","returns-3#Returns":"Promise<Omit<T, \"password\"> | Omit<T, \"password\"> & PasswordStorageInterface>A new object with the password hashed, with salt added.","source-3#Source":"packages/nestjs-password/src/interfaces/password-creation-service.interface.ts:17"}},"/reference/rockets/nestjs-password/interfaces/PasswordOptionsInterface":{"title":"Interface: PasswordOptionsInterface","data":{"":"@concepta/nestjs-password • DocsPackages Example / @concepta/nestjs-password / PasswordOptionsInterfacePassword module configuration options interface","properties#Properties":"","settings#settings?":"optional settings: PasswordSettingsInterface","source#Source":"packages/nestjs-password/src/interfaces/password-options.interface.ts:7"}},"/reference/rockets/nestjs-password/interfaces/PasswordStorageInterface":{"title":"Interface: PasswordStorageInterface","data":{"":"@concepta/nestjs-password • DocsPackages Example / @concepta/nestjs-password / PasswordStorageInterfacePassword storage interface","extended-by#Extended by":"","properties#Properties":"","passwordhash#passwordHash":"passwordHash: null | string\nHashed password","source#Source":"packages/nestjs-password/src/interfaces/password-storage.interface.ts:8","passwordsalt#passwordSalt":"passwordSalt: null | string\nSalt used to hash password","source-1#Source":"packages/nestjs-password/src/interfaces/password-storage.interface.ts:13"}},"/reference/rockets/nestjs-password/interfaces/PasswordStorageServiceInterface":{"title":"Interface: PasswordStorageServiceInterface","data":{"":"@concepta/nestjs-password • DocsPackages Example / @concepta/nestjs-password / PasswordStorageServiceInterfacePassword Storage Service Interface","methods#Methods":"","generatesalt#generateSalt()":"generateSalt(): Promise<string>\nGenerate salt to be used to hash a password.","returns#Returns":"Promise<string>","source#Source":"packages/nestjs-password/src/interfaces/password-storage-service.interface.ts:11","hash#hash()":"hash(password, options?): Promise<PasswordStorageInterface>\nHash a password using a salt, if no\nwas passed, then generate one automatically.","parameters#Parameters":"• password: string• options?• options.salt?: stringOptional salt. If not provided, one will be generated.","returns-1#Returns":"Promise<PasswordStorageInterface>","source-1#Source":"packages/nestjs-password/src/interfaces/password-storage-service.interface.ts:20","hashobject#hashObject()":"hashObject<T>(object, options?): Promise<Omit<T, \"password\"> | Omit<T, \"password\"> & PasswordStorageInterface>\nHash password for an object.","type-parameters#Type parameters":"• T extends PasswordPlainInterface","parameters-1#Parameters":"• object: TAn object containing the new password to hash.• options?• options.required?: booleanSet to true if password is required.• options.salt?: stringOptional salt. If not provided, one will be generated.","returns-2#Returns":"Promise<Omit<T, \"password\"> | Omit<T, \"password\"> & PasswordStorageInterface>A new object with the password hashed, with salt added.","source-2#Source":"packages/nestjs-password/src/interfaces/password-storage-service.interface.ts:35"}},"/reference/rockets/nestjs-password/interfaces/PasswordValidationServiceInterface":{"title":"Interface: PasswordValidationServiceInterface","data":{"":"@concepta/nestjs-password • DocsPackages Example / @concepta/nestjs-password / PasswordValidationServiceInterfacePassword Storage Validation Interface","methods#Methods":"","validate#validate()":"validate(options): Promise<boolean>\nValidate if password matches and its valid.","parameters#Parameters":"• options• options.password: stringPlain text password• options.passwordHash: stringPassword hashed• options.passwordSalt: stringsalt to be used on plain  password to see it match","returns#Returns":"Promise<boolean>","source#Source":"packages/nestjs-password/src/interfaces/password-validation-service.interface.ts:14","validateobject#validateObject()":"validateObject<T>(passwordPlain, object): Promise<boolean>\nValidate password on an object.","type-parameters#Type parameters":"• T extends PasswordStorageInterface","parameters-1#Parameters":"• passwordPlain: string• object: T","returns-1#Returns":"Promise<boolean>","source-1#Source":"packages/nestjs-password/src/interfaces/password-validation-service.interface.ts:26"}},"/reference/rockets/nestjs-role/README":{"title":"Rockets NestJS Role","data":{"":"@concepta/nestjs-role • DocsPackages Example / @concepta/nestjs-roleA module for managing a basic Role entity, including controller with full CRUD, DTOs, sample data factory and seeder.","project#Project":"","installation#Installation":"yarn add @concepta/nestjs-role","usage#Usage":"// ...\nimport { TypeOrmExtModule } from '@concepta/nestjs-typeorm-ext';\nimport { RoleModule } from '@concepta/nestjs-user';\nimport { CrudModule } from '@concepta/nestjs-crud';\n@Module({\n  imports: [\n    TypeOrmExtModule.register({\n      type: 'postgres',\n      url: 'postgres://user:pass@localhost:5432/postgres',\n    }),\n    CrudModule.register(),\n    RoleModule.register(),\n  ],\n})\nexport class AppModule {}","configuration#Configuration":"Seeding\nENV","seeding#Seeding":"Configurations specific to (optional) database seeding.","env#ENV":"Configurations available via environment.\nVariable\tType\tDefault\t\tORG_MODULE_SEEDER_AMOUNT\t<number>\t50\tnumber of additional users to create"}},"/reference/rockets/nestjs-role/classes/RoleAssignmentCreateDto":{"title":"Class: RoleAssignmentCreateDto","data":{"":"@concepta/nestjs-role • DocsPackages Example / @concepta/nestjs-role / RoleAssignmentCreateDtoRole Assignment Create DTO","extends#Extends":"Pick<RoleAssignmentDto, \"role\" | \"assignee\">","implements#Implements":"RoleAssignmentCreatableInterface","constructors#Constructors":"","new-roleassignmentcreatedto#new RoleAssignmentCreateDto()":"new RoleAssignmentCreateDto(...args): RoleAssignmentCreateDto","parameters#Parameters":"• ...args: any[]","returns#Returns":"RoleAssignmentCreateDto","inherited-from#Inherited from":"PickType(RoleAssignmentDto, ['role', 'assignee'] as const).constructor","source#Source":".tmp/repos/rockets/node_modules/@nestjs/common/interfaces/type.interface.d.ts:2","properties#Properties":"","assignee#assignee":"assignee: ReferenceIdInterface<string>\nAssignee","implementation-of#Implementation of":"RoleAssignmentCreatableInterface.assignee","inherited-from-1#Inherited from":"PickType(RoleAssignmentDto, ['role', 'assignee'] as const).assignee","source-1#Source":".tmp/repos/rockets/packages/nestjs-role/src/dto/role-assignment.dto.ts:38","role#role":"role: ReferenceIdInterface<string>\nRole","implementation-of-1#Implementation of":"RoleAssignmentCreatableInterface.role","inherited-from-2#Inherited from":"PickType(RoleAssignmentDto, ['role', 'assignee'] as const).role","source-2#Source":".tmp/repos/rockets/packages/nestjs-role/src/dto/role-assignment.dto.ts:26","arguments#arguments":"static arguments: any","inherited-from-3#Inherited from":"PickType(RoleAssignmentDto, ['role', 'assignee'] as const).arguments","source-3#Source":"node_modules/typescript/lib/lib.es5.d.ts:304","caller#caller":"static caller: Function","inherited-from-4#Inherited from":"PickType(RoleAssignmentDto, ['role', 'assignee'] as const).caller","source-4#Source":"node_modules/typescript/lib/lib.es5.d.ts:305","length#length":"static readonly length: number","inherited-from-5#Inherited from":"PickType(RoleAssignmentDto, ['role', 'assignee'] as const).length","source-5#Source":"node_modules/typescript/lib/lib.es5.d.ts:301","name#name":"static readonly name: string\nReturns the name of the function. Function names are read-only and can not be changed.","inherited-from-6#Inherited from":"PickType(RoleAssignmentDto, ['role', 'assignee'] as const).name","source-6#Source":"node_modules/typescript/lib/lib.es2015.core.d.ts:97","methods#Methods":"","hasinstance#[hasInstance]()":"static [hasInstance](value): boolean\nDetermines whether the given value inherits from this function if this function was used\r\nas a constructor function.A constructor function can control which objects are recognized as its instances by\r\n'instanceof' by overriding this method.","parameters-1#Parameters":"• value: any","returns-1#Returns":"boolean","inherited-from-7#Inherited from":"PickType(RoleAssignmentDto, ['role', 'assignee'] as const).[hasInstance]","source-7#Source":"node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts:162","apply#apply()":"static apply(this, thisArg, argArray?): any\nCalls the function, substituting the specified object for the this value of the function, and the specified array for the arguments of the function.","parameters-2#Parameters":"• this: Function• thisArg: anyThe object to be used as the this object.• argArray?: anyA set of arguments to be passed to the function.","returns-2#Returns":"any","inherited-from-8#Inherited from":"PickType(RoleAssignmentDto, ['role', 'assignee'] as const).apply","source-8#Source":"node_modules/typescript/lib/lib.es5.d.ts:280","bind#bind()":"static bind(this, thisArg, ...argArray): any\nFor a given function, creates a bound function that has the same body as the original function.\r\nThe this object of the bound function is associated with the specified object, and has the specified initial parameters.","parameters-3#Parameters":"• this: Function• thisArg: anyAn object to which the this keyword can refer inside the new function.• ...argArray: any[]A list of arguments to be passed to the new function.","returns-3#Returns":"any","inherited-from-9#Inherited from":"PickType(RoleAssignmentDto, ['role', 'assignee'] as const).bind","source-9#Source":"node_modules/typescript/lib/lib.es5.d.ts:295","call#call()":"static call(this, thisArg, ...argArray): any\nCalls a method of an object, substituting another object for the current object.","parameters-4#Parameters":"• this: Function• thisArg: anyThe object to be used as the current object.• ...argArray: any[]A list of arguments to be passed to the method.","returns-4#Returns":"any","inherited-from-10#Inherited from":"PickType(RoleAssignmentDto, ['role', 'assignee'] as const).call","source-10#Source":"node_modules/typescript/lib/lib.es5.d.ts:287","tostring#toString()":"static toString(): string\nReturns a string representation of a function.","returns-5#Returns":"string","inherited-from-11#Inherited from":"PickType(RoleAssignmentDto, ['role', 'assignee'] as const).toString","source-11#Source":"node_modules/typescript/lib/lib.es5.d.ts:298"}},"/reference/rockets/nestjs-role/classes/RoleAssignmentCreateManyDto":{"title":"Class: RoleAssignmentCreateManyDto","data":{"":"@concepta/nestjs-role • DocsPackages Example / @concepta/nestjs-role / RoleAssignmentCreateManyDtoRole assignment create many DTO","extends#Extends":"CrudCreateManyDto<RoleAssignmentCreatableInterface>","constructors#Constructors":"","new-roleassignmentcreatemanydto#new RoleAssignmentCreateManyDto()":"new RoleAssignmentCreateManyDto(): RoleAssignmentCreateManyDto","returns#Returns":"RoleAssignmentCreateManyDto","inherited-from#Inherited from":"CrudCreateManyDto.constructor","properties#Properties":"","bulk#bulk":"bulk: RoleAssignmentCreatableInterface[] = []","overrides#Overrides":"CrudCreateManyDto.bulk","source#Source":".tmp/repos/rockets/packages/nestjs-role/src/dto/role-assignment-create-many.dto.ts:22"}},"/reference/rockets/nestjs-role/classes/RoleAssignmentDto":{"title":"Class: RoleAssignmentDto","data":{"":"@concepta/nestjs-role • DocsPackages Example / @concepta/nestjs-role / RoleAssignmentDtoRole assignment DTO","extends#Extends":"CommonEntityDto","implements#Implements":"RoleAssignmentInterface","constructors#Constructors":"","new-roleassignmentdto#new RoleAssignmentDto()":"new RoleAssignmentDto(): RoleAssignmentDto","returns#Returns":"RoleAssignmentDto","inherited-from#Inherited from":"CommonEntityDto.constructor","properties#Properties":"","assignee#assignee":"assignee: ReferenceIdInterface<string>\nAssignee","implementation-of#Implementation of":"RoleAssignmentInterface.assignee","source#Source":".tmp/repos/rockets/packages/nestjs-role/src/dto/role-assignment.dto.ts:38","datecreated#dateCreated":"dateCreated: Date\nDate created","implementation-of-1#Implementation of":"RoleAssignmentInterface.dateCreated","inherited-from-1#Inherited from":"CommonEntityDto.dateCreated","source-1#Source":".tmp/repos/rockets/packages/nestjs-common/dist/audit/dto/audit.dto.d.ts:3","datedeleted#dateDeleted":"dateDeleted: AuditDateDeleted\nDate deleted","implementation-of-2#Implementation of":"RoleAssignmentInterface.dateDeleted","inherited-from-2#Inherited from":"CommonEntityDto.dateDeleted","source-2#Source":".tmp/repos/rockets/packages/nestjs-common/dist/audit/dto/audit.dto.d.ts:5","dateupdated#dateUpdated":"dateUpdated: Date\nDate updated","implementation-of-3#Implementation of":"RoleAssignmentInterface.dateUpdated","inherited-from-3#Inherited from":"CommonEntityDto.dateUpdated","source-3#Source":".tmp/repos/rockets/packages/nestjs-common/dist/audit/dto/audit.dto.d.ts:4","id#id":"id: string","implementation-of-4#Implementation of":"RoleAssignmentInterface.id","inherited-from-4#Inherited from":"CommonEntityDto.id","source-4#Source":".tmp/repos/rockets/packages/nestjs-common/dist/common/common-entity.dto.d.ts:4","role#role":"role: ReferenceIdInterface<string>\nRole","implementation-of-5#Implementation of":"RoleAssignmentInterface.role","source-5#Source":".tmp/repos/rockets/packages/nestjs-role/src/dto/role-assignment.dto.ts:26","version#version":"version: number\nVersion","implementation-of-6#Implementation of":"RoleAssignmentInterface.version","inherited-from-5#Inherited from":"CommonEntityDto.version","source-6#Source":".tmp/repos/rockets/packages/nestjs-common/dist/audit/dto/audit.dto.d.ts:6"}},"/reference/rockets/nestjs-role/classes/RoleAssignmentPaginatedDto":{"title":"Class: RoleAssignmentPaginatedDto","data":{"":"@concepta/nestjs-role • DocsPackages Example / @concepta/nestjs-role / RoleAssignmentPaginatedDtoRole assignment paginated DTO","extends#Extends":"CrudResponsePaginatedDto<RoleAssignmentInterface>","constructors#Constructors":"","new-roleassignmentpaginateddto#new RoleAssignmentPaginatedDto()":"new RoleAssignmentPaginatedDto(): RoleAssignmentPaginatedDto","returns#Returns":"RoleAssignmentPaginatedDto","inherited-from#Inherited from":"CrudResponsePaginatedDto.constructor","properties#Properties":"","count#count":"count: number","inherited-from-1#Inherited from":"CrudResponsePaginatedDto.count","source#Source":".tmp/repos/rockets/packages/nestjs-crud/dist/dto/crud-response-paginated.dto.d.ts:4","data#data":"data: RoleAssignmentInterface[] = []","overrides#Overrides":"CrudResponsePaginatedDto.data","source-1#Source":".tmp/repos/rockets/packages/nestjs-role/src/dto/role-assignment-paginated.dto.ts:19","page#page":"page: number","inherited-from-2#Inherited from":"CrudResponsePaginatedDto.page","source-2#Source":".tmp/repos/rockets/packages/nestjs-crud/dist/dto/crud-response-paginated.dto.d.ts:6","pagecount#pageCount":"pageCount: number","inherited-from-3#Inherited from":"CrudResponsePaginatedDto.pageCount","source-3#Source":".tmp/repos/rockets/packages/nestjs-crud/dist/dto/crud-response-paginated.dto.d.ts:7","total#total":"total: number","inherited-from-4#Inherited from":"CrudResponsePaginatedDto.total","source-4#Source":".tmp/repos/rockets/packages/nestjs-crud/dist/dto/crud-response-paginated.dto.d.ts:5"}},"/reference/rockets/nestjs-role/classes/RoleAssignmentPostgresEntity":{"title":"Class: abstract RoleAssignmentPostgresEntity","data":{"":"@concepta/nestjs-role • DocsPackages Example / @concepta/nestjs-role / RoleAssignmentPostgresEntityRole Assignment Postgres Entity","extends#Extends":"CommonPostgresEntity","implements#Implements":"RoleAssignmentEntityInterface","constructors#Constructors":"","new-roleassignmentpostgresentity#new RoleAssignmentPostgresEntity()":"new RoleAssignmentPostgresEntity(): RoleAssignmentPostgresEntity","returns#Returns":"RoleAssignmentPostgresEntity","inherited-from#Inherited from":"CommonPostgresEntity.constructor","properties#Properties":"","assignee#assignee":"assignee: ReferenceIdInterface<string>\nAssigneeYou will need to decorate this in your concrete entity class","implementation-of#Implementation of":"RoleAssignmentEntityInterface.assignee","source#Source":".tmp/repos/rockets/packages/nestjs-role/src/entities/role-assignment-postgres.entity.ts:27","datecreated#dateCreated":"dateCreated: Date\nDate created.","implementation-of-1#Implementation of":"RoleAssignmentEntityInterface.dateCreated","inherited-from-1#Inherited from":"CommonPostgresEntity.dateCreated","source-1#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/audit/audit-postgres.entity.d.ts:3","datedeleted#dateDeleted":"dateDeleted: AuditDateDeleted\nDate deleted.","implementation-of-2#Implementation of":"RoleAssignmentEntityInterface.dateDeleted","inherited-from-2#Inherited from":"CommonPostgresEntity.dateDeleted","source-2#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/audit/audit-postgres.entity.d.ts:5","dateupdated#dateUpdated":"dateUpdated: Date\nDate updated.","implementation-of-3#Implementation of":"RoleAssignmentEntityInterface.dateUpdated","inherited-from-3#Inherited from":"CommonPostgresEntity.dateUpdated","source-3#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/audit/audit-postgres.entity.d.ts:4","id#id":"id: string","implementation-of-4#Implementation of":"RoleAssignmentEntityInterface.id","inherited-from-4#Inherited from":"CommonPostgresEntity.id","source-4#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/common/common-postgres.entity.d.ts:4","role#role":"role: RoleEntityInterface\nRoleYou will need to decorate this in your concrete entity class","implementation-of-5#Implementation of":"RoleAssignmentEntityInterface.role","source-5#Source":".tmp/repos/rockets/packages/nestjs-role/src/entities/role-assignment-postgres.entity.ts:20","version#version":"version: number\nVersion","implementation-of-6#Implementation of":"RoleAssignmentEntityInterface.version","inherited-from-5#Inherited from":"CommonPostgresEntity.version","source-6#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/audit/audit-postgres.entity.d.ts:6"}},"/reference/rockets/nestjs-role/classes/RoleAssignmentSqliteEntity":{"title":"Class: abstract RoleAssignmentSqliteEntity","data":{"":"@concepta/nestjs-role • DocsPackages Example / @concepta/nestjs-role / RoleAssignmentSqliteEntityRole Assignment Sqlite Entity","extends#Extends":"CommonSqliteEntity","implements#Implements":"RoleAssignmentEntityInterface","constructors#Constructors":"","new-roleassignmentsqliteentity#new RoleAssignmentSqliteEntity()":"new RoleAssignmentSqliteEntity(): RoleAssignmentSqliteEntity","returns#Returns":"RoleAssignmentSqliteEntity","inherited-from#Inherited from":"CommonSqliteEntity.constructor","properties#Properties":"","assignee#assignee":"assignee: ReferenceIdInterface<string>\nAssigneeYou will need to decorate this in your concrete entity class","implementation-of#Implementation of":"RoleAssignmentEntityInterface.assignee","source#Source":".tmp/repos/rockets/packages/nestjs-role/src/entities/role-assignment-sqlite.entity.ts:27","datecreated#dateCreated":"dateCreated: Date\nDate created.","implementation-of-1#Implementation of":"RoleAssignmentEntityInterface.dateCreated","inherited-from-1#Inherited from":"CommonSqliteEntity.dateCreated","source-1#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/audit/audit-sqlite.entity.d.ts:3","datedeleted#dateDeleted":"dateDeleted: AuditDateDeleted\nDate deleted.","implementation-of-2#Implementation of":"RoleAssignmentEntityInterface.dateDeleted","inherited-from-2#Inherited from":"CommonSqliteEntity.dateDeleted","source-2#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/audit/audit-sqlite.entity.d.ts:5","dateupdated#dateUpdated":"dateUpdated: Date\nDate updated.","implementation-of-3#Implementation of":"RoleAssignmentEntityInterface.dateUpdated","inherited-from-3#Inherited from":"CommonSqliteEntity.dateUpdated","source-3#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/audit/audit-sqlite.entity.d.ts:4","id#id":"id: string","implementation-of-4#Implementation of":"RoleAssignmentEntityInterface.id","inherited-from-4#Inherited from":"CommonSqliteEntity.id","source-4#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/common/common-sqlite.entity.d.ts:4","role#role":"role: RoleEntityInterface\nRoleYou will need to decorate this in your concrete entity class","implementation-of-5#Implementation of":"RoleAssignmentEntityInterface.role","source-5#Source":".tmp/repos/rockets/packages/nestjs-role/src/entities/role-assignment-sqlite.entity.ts:20","version#version":"version: number\nVersion","implementation-of-6#Implementation of":"RoleAssignmentEntityInterface.version","inherited-from-5#Inherited from":"CommonSqliteEntity.version","source-6#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/audit/audit-sqlite.entity.d.ts:6"}},"/reference/rockets/nestjs-role/classes/RoleController":{"title":"Class: RoleController","data":{"":"@concepta/nestjs-role • DocsPackages Example / @concepta/nestjs-role / RoleControllerRole controller.","implements#Implements":"CrudControllerInterface<RoleEntityInterface, RoleCreatableInterface, RoleUpdatableInterface>","constructors#Constructors":"","new-rolecontroller#new RoleController()":"new RoleController(roleCrudService): RoleController\nConstructor.","parameters#Parameters":"• roleCrudService: RoleCrudServiceinstance of the Role crud service","returns#Returns":"RoleController","source#Source":".tmp/repos/rockets/packages/nestjs-role/src/role.controller.ts:60","properties#Properties":"","rolecrudservice#roleCrudService":"private roleCrudService: RoleCrudService\ninstance of the Role crud service","source-1#Source":".tmp/repos/rockets/packages/nestjs-role/src/role.controller.ts:60","methods#Methods":"","createmany#createMany()":"createMany(crudRequest, roleCreateManyDto): Promise<RoleEntityInterface[]>\nCreate many","parameters-1#Parameters":"• crudRequest: CrudRequestInterfacethe CRUD request object• roleCreateManyDto: RoleCreateManyDtorole create many dto","returns-1#Returns":"Promise<RoleEntityInterface[]>","implementation-of#Implementation of":"CrudControllerInterface.createMany","source-2#Source":".tmp/repos/rockets/packages/nestjs-role/src/role.controller.ts:92","createone#createOne()":"createOne(crudRequest, roleCreateDto): Promise<RoleEntityInterface>\nCreate one","parameters-2#Parameters":"• crudRequest: CrudRequestInterfacethe CRUD request object• roleCreateDto: RoleCreateDtorole create dto","returns-2#Returns":"Promise<RoleEntityInterface>","implementation-of-1#Implementation of":"CrudControllerInterface.createOne","source-3#Source":".tmp/repos/rockets/packages/nestjs-role/src/role.controller.ts:117","deleteone#deleteOne()":"deleteOne(crudRequest): Promise<void | RoleEntityInterface>\nDelete one","parameters-3#Parameters":"• crudRequest: CrudRequestInterfacethe CRUD request object","returns-3#Returns":"Promise<void | RoleEntityInterface>","implementation-of-2#Implementation of":"CrudControllerInterface.deleteOne","source-4#Source":".tmp/repos/rockets/packages/nestjs-role/src/role.controller.ts:147","getmany#getMany()":"getMany(crudRequest): Promise<RoleEntityInterface[] | CrudResultPaginatedInterface<RoleEntityInterface>>\nGet many","parameters-4#Parameters":"• crudRequest: CrudRequestInterfacethe CRUD request object","returns-4#Returns":"Promise<RoleEntityInterface[] | CrudResultPaginatedInterface<RoleEntityInterface>>","implementation-of-3#Implementation of":"CrudControllerInterface.getMany","source-5#Source":".tmp/repos/rockets/packages/nestjs-role/src/role.controller.ts:69","getone#getOne()":"getOne(crudRequest): Promise<RoleEntityInterface>\nGet one","parameters-5#Parameters":"• crudRequest: CrudRequestInterfacethe CRUD request object","returns-5#Returns":"Promise<RoleEntityInterface>","implementation-of-4#Implementation of":"CrudControllerInterface.getOne","source-6#Source":".tmp/repos/rockets/packages/nestjs-role/src/role.controller.ts:80","updateone#updateOne()":"updateOne(crudRequest, roleUpdateDto): Promise<RoleEntityInterface>\nUpdate one","parameters-6#Parameters":"• crudRequest: CrudRequestInterfacethe CRUD request object• roleUpdateDto: RoleUpdateDtorole update dto","returns-6#Returns":"Promise<RoleEntityInterface>","implementation-of-5#Implementation of":"CrudControllerInterface.updateOne","source-7#Source":".tmp/repos/rockets/packages/nestjs-role/src/role.controller.ts:133"}},"/reference/rockets/nestjs-role/classes/RoleCreateDto":{"title":"Class: RoleCreateDto","data":{"":"@concepta/nestjs-role • DocsPackages Example / @concepta/nestjs-role / RoleCreateDtoRole Create DTO","extends#Extends":"Pick<RoleDto, \"name\" | \"description\">","implements#Implements":"RoleCreatableInterface","constructors#Constructors":"","new-rolecreatedto#new RoleCreateDto()":"new RoleCreateDto(...args): RoleCreateDto","parameters#Parameters":"• ...args: any[]","returns#Returns":"RoleCreateDto","inherited-from#Inherited from":"PickType(RoleDto, ['name', 'description'] as const).constructor","source#Source":".tmp/repos/rockets/node_modules/@nestjs/common/interfaces/type.interface.d.ts:2","properties#Properties":"","description#description":"description: string = ''\nName","implementation-of#Implementation of":"RoleCreatableInterface.description","inherited-from-1#Inherited from":"PickType(RoleDto, ['name', 'description'] as const).description","source-1#Source":".tmp/repos/rockets/packages/nestjs-role/src/dto/role.dto.ts:34","name#name":"name: string = ''\nName","implementation-of-1#Implementation of":"RoleCreatableInterface.name","inherited-from-2#Inherited from":"PickType(RoleDto, ['name', 'description'] as const).name","source-2#Source":".tmp/repos/rockets/packages/nestjs-role/src/dto/role.dto.ts:22","arguments#arguments":"static arguments: any","inherited-from-3#Inherited from":"PickType(RoleDto, ['name', 'description'] as const).arguments","source-3#Source":"node_modules/typescript/lib/lib.es5.d.ts:304","caller#caller":"static caller: Function","inherited-from-4#Inherited from":"PickType(RoleDto, ['name', 'description'] as const).caller","source-4#Source":"node_modules/typescript/lib/lib.es5.d.ts:305","length#length":"static readonly length: number","inherited-from-5#Inherited from":"PickType(RoleDto, ['name', 'description'] as const).length","source-5#Source":"node_modules/typescript/lib/lib.es5.d.ts:301","name-1#name":"static readonly name: string\nReturns the name of the function. Function names are read-only and can not be changed.","inherited-from-6#Inherited from":"PickType(RoleDto, ['name', 'description'] as const).name","source-6#Source":"node_modules/typescript/lib/lib.es2015.core.d.ts:97","methods#Methods":"","hasinstance#[hasInstance]()":"static [hasInstance](value): boolean\nDetermines whether the given value inherits from this function if this function was used\r\nas a constructor function.A constructor function can control which objects are recognized as its instances by\r\n'instanceof' by overriding this method.","parameters-1#Parameters":"• value: any","returns-1#Returns":"boolean","inherited-from-7#Inherited from":"PickType(RoleDto, ['name', 'description'] as const).[hasInstance]","source-7#Source":"node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts:162","apply#apply()":"static apply(this, thisArg, argArray?): any\nCalls the function, substituting the specified object for the this value of the function, and the specified array for the arguments of the function.","parameters-2#Parameters":"• this: Function• thisArg: anyThe object to be used as the this object.• argArray?: anyA set of arguments to be passed to the function.","returns-2#Returns":"any","inherited-from-8#Inherited from":"PickType(RoleDto, ['name', 'description'] as const).apply","source-8#Source":"node_modules/typescript/lib/lib.es5.d.ts:280","bind#bind()":"static bind(this, thisArg, ...argArray): any\nFor a given function, creates a bound function that has the same body as the original function.\r\nThe this object of the bound function is associated with the specified object, and has the specified initial parameters.","parameters-3#Parameters":"• this: Function• thisArg: anyAn object to which the this keyword can refer inside the new function.• ...argArray: any[]A list of arguments to be passed to the new function.","returns-3#Returns":"any","inherited-from-9#Inherited from":"PickType(RoleDto, ['name', 'description'] as const).bind","source-9#Source":"node_modules/typescript/lib/lib.es5.d.ts:295","call#call()":"static call(this, thisArg, ...argArray): any\nCalls a method of an object, substituting another object for the current object.","parameters-4#Parameters":"• this: Function• thisArg: anyThe object to be used as the current object.• ...argArray: any[]A list of arguments to be passed to the method.","returns-4#Returns":"any","inherited-from-10#Inherited from":"PickType(RoleDto, ['name', 'description'] as const).call","source-10#Source":"node_modules/typescript/lib/lib.es5.d.ts:287","tostring#toString()":"static toString(): string\nReturns a string representation of a function.","returns-5#Returns":"string","inherited-from-11#Inherited from":"PickType(RoleDto, ['name', 'description'] as const).toString","source-11#Source":"node_modules/typescript/lib/lib.es5.d.ts:298"}},"/reference/rockets/nestjs-role/classes/RoleCreateManyDto":{"title":"Class: RoleCreateManyDto","data":{"":"@concepta/nestjs-role • DocsPackages Example / @concepta/nestjs-role / RoleCreateManyDtoRole DTO","extends#Extends":"CrudCreateManyDto<RoleCreatableInterface>","constructors#Constructors":"","new-rolecreatemanydto#new RoleCreateManyDto()":"new RoleCreateManyDto(): RoleCreateManyDto","returns#Returns":"RoleCreateManyDto","inherited-from#Inherited from":"CrudCreateManyDto.constructor","properties#Properties":"","bulk#bulk":"bulk: RoleCreateDto[] = []","overrides#Overrides":"CrudCreateManyDto.bulk","source#Source":".tmp/repos/rockets/packages/nestjs-role/src/dto/role-create-many.dto.ts:22"}},"/reference/rockets/nestjs-role/classes/RoleDto":{"title":"Class: RoleDto","data":{"":"@concepta/nestjs-role • DocsPackages Example / @concepta/nestjs-role / RoleDtoRole DTO","extends#Extends":"CommonEntityDto","implements#Implements":"RoleInterface","constructors#Constructors":"","new-roledto#new RoleDto()":"new RoleDto(): RoleDto","returns#Returns":"RoleDto","inherited-from#Inherited from":"CommonEntityDto.constructor","properties#Properties":"","assignees#assignees":"assignees: ReferenceAssigneeInterface<ReferenceIdInterface<string>>[] = []\nAssignee","implementation-of#Implementation of":"RoleInterface.assignees","source#Source":".tmp/repos/rockets/packages/nestjs-role/src/dto/role.dto.ts:47","datecreated#dateCreated":"dateCreated: Date\nDate created","implementation-of-1#Implementation of":"RoleInterface.dateCreated","inherited-from-1#Inherited from":"CommonEntityDto.dateCreated","source-1#Source":".tmp/repos/rockets/packages/nestjs-common/dist/audit/dto/audit.dto.d.ts:3","datedeleted#dateDeleted":"dateDeleted: AuditDateDeleted\nDate deleted","implementation-of-2#Implementation of":"RoleInterface.dateDeleted","inherited-from-2#Inherited from":"CommonEntityDto.dateDeleted","source-2#Source":".tmp/repos/rockets/packages/nestjs-common/dist/audit/dto/audit.dto.d.ts:5","dateupdated#dateUpdated":"dateUpdated: Date\nDate updated","implementation-of-3#Implementation of":"RoleInterface.dateUpdated","inherited-from-3#Inherited from":"CommonEntityDto.dateUpdated","source-3#Source":".tmp/repos/rockets/packages/nestjs-common/dist/audit/dto/audit.dto.d.ts:4","description#description":"description: string = ''\nName","implementation-of-4#Implementation of":"RoleInterface.description","source-4#Source":".tmp/repos/rockets/packages/nestjs-role/src/dto/role.dto.ts:34","id#id":"id: string","implementation-of-5#Implementation of":"RoleInterface.id","inherited-from-4#Inherited from":"CommonEntityDto.id","source-5#Source":".tmp/repos/rockets/packages/nestjs-common/dist/common/common-entity.dto.d.ts:4","name#name":"name: string = ''\nName","implementation-of-6#Implementation of":"RoleInterface.name","source-6#Source":".tmp/repos/rockets/packages/nestjs-role/src/dto/role.dto.ts:22","version#version":"version: number\nVersion","implementation-of-7#Implementation of":"RoleInterface.version","inherited-from-5#Inherited from":"CommonEntityDto.version","source-7#Source":".tmp/repos/rockets/packages/nestjs-common/dist/audit/dto/audit.dto.d.ts:6"}},"/reference/rockets/nestjs-role/classes/RoleLookupService":{"title":"Class: RoleLookupService","data":{"":"@concepta/nestjs-role • DocsPackages Example / @concepta/nestjs-role / RoleLookupServiceRole lookup service","extends#Extends":"LookupService<RoleEntityInterface>","implements#Implements":"RoleLookupServiceInterface","constructors#Constructors":"","new-rolelookupservice#new RoleLookupService()":"new RoleLookupService(repo): RoleLookupService\nConstructor","parameters#Parameters":"• repo: Repository<RoleEntityInterface>instance of the role repo","returns#Returns":"RoleLookupService","overrides#Overrides":"LookupService.constructor","source#Source":".tmp/repos/rockets/packages/nestjs-role/src/services/role-lookup.service.ts:22","accessors#Accessors":"","metadata#metadata":"get protected metadata(): EntityMetadata","returns-1#Returns":"EntityMetadata","source-1#Source":".tmp/repos/rockets/packages/typeorm-common/dist/services/base.service.d.ts:13","methods#Methods":"","byid#byId()":"byId(id, queryOptions?): Promise<null | RoleEntityInterface>\nGet entity for the given id.","parameters-1#Parameters":"• id: stringthe id• queryOptions?: QueryOptionsInterface","returns-2#Returns":"Promise<null | RoleEntityInterface>","implementation-of#Implementation of":"RoleLookupServiceInterface.byId","inherited-from#Inherited from":"LookupService.byId","source-2#Source":".tmp/repos/rockets/packages/typeorm-common/dist/services/lookup.service.d.ts:7","findone#findOne()":"findOne(findOneOptions, queryOptions?): Promise<null | RoleEntityInterface>\nFind One wrapper.","parameters-2#Parameters":"• findOneOptions: FindOneOptions<RoleEntityInterface>Find options• queryOptions?: QueryOptionsInterface","returns-3#Returns":"Promise<null | RoleEntityInterface>","inherited-from-1#Inherited from":"LookupService.findOne","source-3#Source":".tmp/repos/rockets/packages/typeorm-common/dist/services/base.service.d.ts:10","repository#repository()":"repository(queryOptions?): Repository<RoleEntityInterface>\nReturn the correct repository instance.","parameters-3#Parameters":"• queryOptions?: QueryOptionsInterfaceOptions","returns-4#Returns":"Repository<RoleEntityInterface>","inherited-from-2#Inherited from":"LookupService.repository","source-4#Source":".tmp/repos/rockets/packages/typeorm-common/dist/services/base.service.d.ts:11","transaction#transaction()":"transaction(options?): TransactionProxy\nReturn a transaction instance.","parameters-4#Parameters":"• options?: SafeTransactionOptionsInterfaceOptions","returns-5#Returns":"TransactionProxy","inherited-from-3#Inherited from":"LookupService.transaction","source-5#Source":".tmp/repos/rockets/packages/typeorm-common/dist/services/base.service.d.ts:12"}},"/reference/rockets/nestjs-role/classes/RoleModule":{"title":"Class: RoleModule","data":{"":"@concepta/nestjs-role • DocsPackages Example / @concepta/nestjs-role / RoleModuleRole Module","extends#Extends":"RoleModuleClass","constructors#Constructors":"","new-rolemodule#new RoleModule()":"new RoleModule(): RoleModule","returns#Returns":"RoleModule","inherited-from#Inherited from":"RoleModuleClass.constructor","source#Source":".tmp/repos/rockets/node_modules/@nestjs/common/module-utils/interfaces/configurable-module-cls.interface.d.ts:12","methods#Methods":"","forfeature#forFeature()":"static forFeature(options): DynamicModule","parameters#Parameters":"• options: RoleOptions","returns-1#Returns":"DynamicModule","source-1#Source":".tmp/repos/rockets/packages/nestjs-role/src/role.module.ts:34","forroot#forRoot()":"static forRoot(options): DynamicModule","parameters-1#Parameters":"• options: RoleOptions","returns-2#Returns":"DynamicModule","source-2#Source":".tmp/repos/rockets/packages/nestjs-role/src/role.module.ts:26","forrootasync#forRootAsync()":"static forRootAsync(options): DynamicModule","parameters-2#Parameters":"• options: RoleAsyncOptions","returns-3#Returns":"DynamicModule","source-3#Source":".tmp/repos/rockets/packages/nestjs-role/src/role.module.ts:30","register#register()":"static register(options): DynamicModule","parameters-3#Parameters":"• options: RoleOptions","returns-4#Returns":"DynamicModule","overrides#Overrides":"RoleModuleClass.register","source-4#Source":".tmp/repos/rockets/packages/nestjs-role/src/role.module.ts:18","registerasync#registerAsync()":"static registerAsync(options): DynamicModule","parameters-4#Parameters":"• options: RoleAsyncOptions","returns-5#Returns":"DynamicModule","overrides-1#Overrides":"RoleModuleClass.registerAsync","source-5#Source":".tmp/repos/rockets/packages/nestjs-role/src/role.module.ts:22"}},"/reference/rockets/nestjs-role/classes/RoleCrudService":{"title":"Class: RoleCrudService","data":{"":"@concepta/nestjs-role • DocsPackages Example / @concepta/nestjs-role / RoleCrudServiceRole CRUD service","extends#Extends":"TypeOrmCrudService<RoleEntityInterface>","constructors#Constructors":"","new-rolecrudservice#new RoleCrudService()":"new RoleCrudService(roleRepo): RoleCrudService\nConstructor","parameters#Parameters":"• roleRepo: Repository<RoleEntityInterface>instance of the role repository.","returns#Returns":"RoleCrudService","overrides#Overrides":"TypeOrmCrudService.constructor","source#Source":".tmp/repos/rockets/packages/nestjs-role/src/services/role-crud.service.ts:18","properties#Properties":"","alias#alias":"protected readonly alias: string","inherited-from#Inherited from":"TypeOrmCrudService.alias","source-1#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:28","count#count()":"readonly count: (options?) => Promise<number>\nCounts entities that match given options.\nUseful for pagination.","parameters-1#Parameters":"• options?: FindManyOptions<RoleEntityInterface>","returns-1#Returns":"Promise<number>","inherited-from-1#Inherited from":"TypeOrmCrudService.count","source-2#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:26","crudqueryhelper#crudQueryHelper":"protected readonly crudQueryHelper: CrudQueryHelper","inherited-from-2#Inherited from":"TypeOrmCrudService.crudQueryHelper","source-3#Source":".tmp/repos/rockets/packages/nestjs-crud/dist/services/typeorm-crud.service.d.ts:12","dbname#dbName":"protected dbName: \"mysql\" | \"mariadb\" | \"postgres\" | \"cockroachdb\" | \"sqlite\" | \"mssql\" | \"sap\" | \"oracle\" | \"cordova\" | \"nativescript\" | \"react-native\" | \"sqljs\" | \"mongodb\" | \"aurora-mysql\" | \"aurora-postgres\" | \"expo\" | \"better-sqlite3\" | \"capacitor\" | \"spanner\"","inherited-from-3#Inherited from":"TypeOrmCrudService.dbName","source-4#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:16","entitycolumns#entityColumns":"protected entityColumns: string[]","inherited-from-4#Inherited from":"TypeOrmCrudService.entityColumns","source-5#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:17","entitycolumnshash#entityColumnsHash":"protected entityColumnsHash: ObjectLiteral","inherited-from-5#Inherited from":"TypeOrmCrudService.entityColumnsHash","source-6#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:20","entityhasdeletecolumn#entityHasDeleteColumn":"protected entityHasDeleteColumn: boolean","inherited-from-6#Inherited from":"TypeOrmCrudService.entityHasDeleteColumn","source-7#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:19","entityprimarycolumns#entityPrimaryColumns":"protected entityPrimaryColumns: string[]","inherited-from-7#Inherited from":"TypeOrmCrudService.entityPrimaryColumns","source-8#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:18","entityrelationshash#entityRelationsHash":"protected entityRelationsHash: Map<string, IAllowedRelation>","inherited-from-8#Inherited from":"TypeOrmCrudService.entityRelationsHash","source-9#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:21","entitytype#entityType":"protected readonly entityType: ClassType<RoleEntityInterface>","inherited-from-9#Inherited from":"TypeOrmCrudService.entityType","source-10#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:27","find#find()":"readonly find: (options?) => Promise<RoleEntityInterface[]>\nFinds entities that match given find options.","parameters-2#Parameters":"• options?: FindManyOptions<RoleEntityInterface>","returns-2#Returns":"Promise<RoleEntityInterface[]>","inherited-from-10#Inherited from":"TypeOrmCrudService.find","source-11#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:25","findone#findOne()":"readonly findOne: (options) => Promise<null | RoleEntityInterface>\nFinds first entity by a given find options.\nIf entity was not found in the database - returns null.","parameters-3#Parameters":"• options: FindOneOptions<RoleEntityInterface>","returns-3#Returns":"Promise<null | RoleEntityInterface>","inherited-from-11#Inherited from":"TypeOrmCrudService.findOne","source-12#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:24","repo#repo":"protected repo: Repository<RoleEntityInterface>","inherited-from-12#Inherited from":"TypeOrmCrudService.repo","source-13#Source":".tmp/repos/rockets/packages/nestjs-crud/dist/services/typeorm-crud.service.d.ts:10","sqlinjectionregex#sqlInjectionRegEx":"protected sqlInjectionRegEx: RegExp[]","inherited-from-13#Inherited from":"TypeOrmCrudService.sqlInjectionRegEx","source-14#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:22","methods#Methods":"","builderaddbrackets#builderAddBrackets()":"protected builderAddBrackets(builder, condition, brackets): void","parameters-4#Parameters":"• builder: SelectQueryBuilder<RoleEntityInterface>• condition: SConditionKey• brackets: Brackets","returns-4#Returns":"void","inherited-from-14#Inherited from":"TypeOrmCrudService.builderAddBrackets","source-15#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:53","buildersetwhere#builderSetWhere()":"protected builderSetWhere(builder, condition, field, value, operator?): void","parameters-5#Parameters":"• builder: SelectQueryBuilder<RoleEntityInterface>• condition: SConditionKey• field: string• value: any• operator?: ComparisonOperator","returns-5#Returns":"void","inherited-from-15#Inherited from":"TypeOrmCrudService.builderSetWhere","source-16#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:54","createbuilder#createBuilder()":"createBuilder(parsed, options, many?, withDeleted?): Promise<SelectQueryBuilder<RoleEntityInterface>>","parameters-6#Parameters":"• parsed: ParsedRequestParams• options: CrudRequestOptions• many?: boolean• withDeleted?: boolean","returns-6#Returns":"Promise<SelectQueryBuilder<RoleEntityInterface>>","inherited-from-16#Inherited from":"TypeOrmCrudService.createBuilder","source-17#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:38","createmany#createMany()":"createMany(req, dto, queryOptions?): Promise<RoleEntityInterface[]>","parameters-7#Parameters":"• req: CrudRequest• dto: CreateManyDto<DeepPartial<RoleEntityInterface>>• queryOptions?: CrudQueryOptionsInterface","returns-7#Returns":"Promise<RoleEntityInterface[]>","inherited-from-17#Inherited from":"TypeOrmCrudService.createMany","source-18#Source":".tmp/repos/rockets/packages/nestjs-crud/dist/services/typeorm-crud.service.d.ts:15","createone#createOne()":"createOne(req, dto, queryOptions?): Promise<RoleEntityInterface>","parameters-8#Parameters":"• req: CrudRequest• dto: DeepPartial<RoleEntityInterface>• queryOptions?: CrudQueryOptionsInterface","returns-8#Returns":"Promise<RoleEntityInterface>","inherited-from-18#Inherited from":"TypeOrmCrudService.createOne","source-19#Source":".tmp/repos/rockets/packages/nestjs-crud/dist/services/typeorm-crud.service.d.ts:16","createpageinfo#createPageInfo()":"createPageInfo(data, total, limit, offset): GetManyDefaultResponse<RoleEntityInterface>","parameters-9#Parameters":"• data: RoleEntityInterface[]• total: number• limit: number• offset: number","returns-9#Returns":"GetManyDefaultResponse<RoleEntityInterface>","inherited-from-19#Inherited from":"TypeOrmCrudService.createPageInfo","source-20#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud/lib/services/crud-service.abstract.d.ts:15","decidepagination#decidePagination()":"decidePagination(parsed, options): boolean","parameters-10#Parameters":"• parsed: ParsedRequestParams• options: CrudRequestOptions","returns-10#Returns":"boolean","inherited-from-20#Inherited from":"TypeOrmCrudService.decidePagination","source-21#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud/lib/services/crud-service.abstract.d.ts:16","deleteone#deleteOne()":"deleteOne(req, queryOptions?): Promise<void | RoleEntityInterface>","parameters-11#Parameters":"• req: CrudRequest• queryOptions?: CrudQueryOptionsInterface","returns-11#Returns":"Promise<void | RoleEntityInterface>","inherited-from-21#Inherited from":"TypeOrmCrudService.deleteOne","source-22#Source":".tmp/repos/rockets/packages/nestjs-crud/dist/services/typeorm-crud.service.d.ts:19","dogetmany#doGetMany()":"protected doGetMany(builder, query, options): Promise<RoleEntityInterface[] | GetManyDefaultResponse<RoleEntityInterface>>","parameters-12#Parameters":"• builder: SelectQueryBuilder<RoleEntityInterface>• query: ParsedRequestParams• options: CrudRequestOptions","returns-12#Returns":"Promise<RoleEntityInterface[] | GetManyDefaultResponse<RoleEntityInterface>>","inherited-from-22#Inherited from":"TypeOrmCrudService.doGetMany","source-23#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:39","getallowedcolumns#getAllowedColumns()":"protected getAllowedColumns(columns, options): string[]","parameters-13#Parameters":"• columns: string[]• options: QueryOptions","returns-13#Returns":"string[]","inherited-from-23#Inherited from":"TypeOrmCrudService.getAllowedColumns","source-24#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:43","getentitycolumns#getEntityColumns()":"protected getEntityColumns(entityMetadata): object","parameters-14#Parameters":"• entityMetadata: EntityMetadata","returns-14#Returns":"object","columns#columns":"columns: string[]","primarycolumns#primaryColumns":"primaryColumns: string[]","inherited-from-24#Inherited from":"TypeOrmCrudService.getEntityColumns","source-25#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:44","getfieldwithalias#getFieldWithAlias()":"protected getFieldWithAlias(field, sort?): string","parameters-15#Parameters":"• field: string• sort?: boolean","returns-15#Returns":"string","inherited-from-25#Inherited from":"TypeOrmCrudService.getFieldWithAlias","source-26#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:58","getmany#getMany()":"getMany(req, queryOptions?): Promise<RoleEntityInterface[] | CrudResultPaginatedInterface<RoleEntityInterface>>","parameters-16#Parameters":"• req: CrudRequest• queryOptions?: CrudQueryOptionsInterface","returns-16#Returns":"Promise<RoleEntityInterface[] | CrudResultPaginatedInterface<RoleEntityInterface>>","inherited-from-26#Inherited from":"TypeOrmCrudService.getMany","source-27#Source":".tmp/repos/rockets/packages/nestjs-crud/dist/services/typeorm-crud.service.d.ts:13","getone#getOne()":"getOne(req, queryOptions?): Promise<RoleEntityInterface>","parameters-17#Parameters":"• req: CrudRequest• queryOptions?: CrudQueryOptionsInterface","returns-17#Returns":"Promise<RoleEntityInterface>","inherited-from-27#Inherited from":"TypeOrmCrudService.getOne","source-28#Source":".tmp/repos/rockets/packages/nestjs-crud/dist/services/typeorm-crud.service.d.ts:14","getoneorfail#getOneOrFail()":"protected getOneOrFail(req, shallow?, withDeleted?): Promise<RoleEntityInterface>","parameters-18#Parameters":"• req: CrudRequest• shallow?: boolean• withDeleted?: boolean","returns-18#Returns":"Promise<RoleEntityInterface>","inherited-from-28#Inherited from":"TypeOrmCrudService.getOneOrFail","source-29#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:41","getparamfilters#getParamFilters()":"getParamFilters(parsed): ObjectLiteral","parameters-19#Parameters":"• parsed: ParsedRequestParams","returns-19#Returns":"ObjectLiteral","inherited-from-29#Inherited from":"TypeOrmCrudService.getParamFilters","source-30#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:37","getprimaryparams#getPrimaryParams()":"getPrimaryParams(options): string[]","parameters-20#Parameters":"• options: CrudRequestOptions","returns-20#Returns":"string[]","inherited-from-30#Inherited from":"TypeOrmCrudService.getPrimaryParams","source-31#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud/lib/services/crud-service.abstract.d.ts:19","getrelationmetadata#getRelationMetadata()":"protected getRelationMetadata(field, options): IAllowedRelation","parameters-21#Parameters":"• field: string• options: JoinOption","returns-21#Returns":"IAllowedRelation","inherited-from-31#Inherited from":"TypeOrmCrudService.getRelationMetadata","source-32#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:48","getselect#getSelect()":"protected getSelect(query, options): string[]","parameters-22#Parameters":"• query: ParsedRequestParams• options: QueryOptions","returns-22#Returns":"string[]","inherited-from-32#Inherited from":"TypeOrmCrudService.getSelect","source-33#Source":".tmp/repos/rockets/packages/nestjs-crud/dist/services/typeorm-crud.service.d.ts:23","getskip#getSkip()":"getSkip(query, take): null | number","parameters-23#Parameters":"• query: ParsedRequestParams• take: number","returns-23#Returns":"null | number","inherited-from-33#Inherited from":"TypeOrmCrudService.getSkip","source-34#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud/lib/services/crud-service.abstract.d.ts:18","getsort#getSort()":"protected getSort(query, options): ObjectLiteral","parameters-24#Parameters":"• query: ParsedRequestParams• options: QueryOptions","returns-24#Returns":"ObjectLiteral","inherited-from-34#Inherited from":"TypeOrmCrudService.getSort","source-35#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:57","gettake#getTake()":"getTake(query, options): null | number","parameters-25#Parameters":"• query: ParsedRequestParams• options: QueryOptions","returns-25#Returns":"null | number","inherited-from-35#Inherited from":"TypeOrmCrudService.getTake","source-36#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud/lib/services/crud-service.abstract.d.ts:17","mapoperatorstoquery#mapOperatorsToQuery()":"protected mapOperatorsToQuery(cond, param): object","parameters-26#Parameters":"• cond: QueryFilter• param: any","returns-26#Returns":"object","params#params":"params: ObjectLiteral","str#str":"str: string","inherited-from-36#Inherited from":"TypeOrmCrudService.mapOperatorsToQuery","source-37#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:60","mapsort#mapSort()":"protected mapSort(sort): ObjectLiteral","parameters-27#Parameters":"• sort: QuerySort[]","returns-27#Returns":"ObjectLiteral","inherited-from-37#Inherited from":"TypeOrmCrudService.mapSort","source-38#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:59","oninitmapentitycolumns#onInitMapEntityColumns()":"protected onInitMapEntityColumns(): void","returns-28#Returns":"void","inherited-from-38#Inherited from":"TypeOrmCrudService.onInitMapEntityColumns","source-39#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:40","prepareentitybeforesave#prepareEntityBeforeSave()":"protected prepareEntityBeforeSave(dto, parsed): RoleEntityInterface","parameters-28#Parameters":"• dto: DeepPartial<RoleEntityInterface>• parsed: ParsedRequestParams","returns-29#Returns":"RoleEntityInterface","inherited-from-39#Inherited from":"TypeOrmCrudService.prepareEntityBeforeSave","source-40#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:42","recoverone#recoverOne()":"recoverOne(req, queryOptions?): Promise<RoleEntityInterface>","parameters-29#Parameters":"• req: CrudRequest• queryOptions?: CrudQueryOptionsInterface","returns-30#Returns":"Promise<RoleEntityInterface>","inherited-from-40#Inherited from":"TypeOrmCrudService.recoverOne","source-41#Source":".tmp/repos/rockets/packages/nestjs-crud/dist/services/typeorm-crud.service.d.ts:20","replaceone#replaceOne()":"replaceOne(req, dto, queryOptions?): Promise<RoleEntityInterface>","parameters-30#Parameters":"• req: CrudRequest• dto: DeepPartial<RoleEntityInterface>• queryOptions?: CrudQueryOptionsInterface","returns-31#Returns":"Promise<RoleEntityInterface>","inherited-from-41#Inherited from":"TypeOrmCrudService.replaceOne","source-42#Source":".tmp/repos/rockets/packages/nestjs-crud/dist/services/typeorm-crud.service.d.ts:18","setandwhere#setAndWhere()":"protected setAndWhere(cond, i, builder): void","parameters-31#Parameters":"• cond: QueryFilter• i: any• builder: SelectQueryBuilder<RoleEntityInterface> | WhereExpression","returns-32#Returns":"void","inherited-from-42#Inherited from":"TypeOrmCrudService.setAndWhere","source-43#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:50","setjoin#setJoin()":"protected setJoin(cond, joinOptions, builder): boolean","parameters-32#Parameters":"• cond: QueryJoin• joinOptions: JoinOptions• builder: SelectQueryBuilder<RoleEntityInterface>","returns-33#Returns":"boolean","inherited-from-43#Inherited from":"TypeOrmCrudService.setJoin","source-44#Source":".tmp/repos/rockets/packages/nestjs-crud/dist/services/typeorm-crud.service.d.ts:22","setorwhere#setOrWhere()":"protected setOrWhere(cond, i, builder): void","parameters-33#Parameters":"• cond: QueryFilter• i: any• builder: SelectQueryBuilder<RoleEntityInterface> | WhereExpression","returns-34#Returns":"void","inherited-from-44#Inherited from":"TypeOrmCrudService.setOrWhere","source-45#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:51","setsearchcondition#setSearchCondition()":"protected setSearchCondition(builder, search, condition?): void","parameters-34#Parameters":"• builder: SelectQueryBuilder<RoleEntityInterface>• search: SCondition• condition?: SConditionKey","returns-35#Returns":"void","inherited-from-45#Inherited from":"TypeOrmCrudService.setSearchCondition","source-46#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:52","setsearchfieldobjectcondition#setSearchFieldObjectCondition()":"protected setSearchFieldObjectCondition(builder, condition, field, object): void","parameters-35#Parameters":"• builder: SelectQueryBuilder<RoleEntityInterface>• condition: SConditionKey• field: string• object: any","returns-36#Returns":"void","inherited-from-46#Inherited from":"TypeOrmCrudService.setSearchFieldObjectCondition","source-47#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:55","throwbadrequestexception#throwBadRequestException()":"throwBadRequestException(msg?): BadRequestException","parameters-36#Parameters":"• msg?: any","returns-37#Returns":"BadRequestException","inherited-from-47#Inherited from":"TypeOrmCrudService.throwBadRequestException","source-48#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud/lib/services/crud-service.abstract.d.ts:13","thrownotfoundexception#throwNotFoundException()":"throwNotFoundException(name): NotFoundException","parameters-37#Parameters":"• name: string","returns-38#Returns":"NotFoundException","inherited-from-48#Inherited from":"TypeOrmCrudService.throwNotFoundException","source-49#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud/lib/services/crud-service.abstract.d.ts:14","transaction#transaction()":"transaction(options?): TransactionProxy","parameters-38#Parameters":"• options?: SafeTransactionOptionsInterface","returns-39#Returns":"TransactionProxy","inherited-from-49#Inherited from":"TypeOrmCrudService.transaction","source-50#Source":".tmp/repos/rockets/packages/nestjs-crud/dist/services/typeorm-crud.service.d.ts:21","updateone#updateOne()":"updateOne(req, dto, queryOptions?): Promise<RoleEntityInterface>","parameters-39#Parameters":"• req: CrudRequest• dto: DeepPartial<RoleEntityInterface>• queryOptions?: CrudQueryOptionsInterface","returns-40#Returns":"Promise<RoleEntityInterface>","inherited-from-50#Inherited from":"TypeOrmCrudService.updateOne","source-51#Source":".tmp/repos/rockets/packages/nestjs-crud/dist/services/typeorm-crud.service.d.ts:17"}},"/reference/rockets/nestjs-role/classes/RoleMutateService":{"title":"Class: RoleMutateService","data":{"":"@concepta/nestjs-role • DocsPackages Example / @concepta/nestjs-role / RoleMutateServiceRole mutate service","extends#Extends":"MutateService<RoleEntityInterface, RoleCreatableInterface, RoleUpdatableInterface>","implements#Implements":"RoleMutateServiceInterface","constructors#Constructors":"","new-rolemutateservice#new RoleMutateService()":"new RoleMutateService(repo): RoleMutateService\nConstructor","parameters#Parameters":"• repo: Repository<RoleEntityInterface>instance of the role repo","returns#Returns":"RoleMutateService","overrides#Overrides":"MutateService.constructor","source#Source":".tmp/repos/rockets/packages/nestjs-role/src/services/role-mutate.service.ts:35","properties#Properties":"","createdto#createDto":"protected createDto: typeof RoleCreateDto = RoleCreateDto","overrides-1#Overrides":"MutateService.createDto","source-1#Source":".tmp/repos/rockets/packages/nestjs-role/src/services/role-mutate.service.ts:27","updatedto#updateDto":"protected updateDto: typeof RoleUpdateDto = RoleUpdateDto","overrides-2#Overrides":"MutateService.updateDto","source-2#Source":".tmp/repos/rockets/packages/nestjs-role/src/services/role-mutate.service.ts:28","accessors#Accessors":"","metadata#metadata":"get protected metadata(): EntityMetadata","returns-1#Returns":"EntityMetadata","source-3#Source":".tmp/repos/rockets/packages/typeorm-common/dist/services/base.service.d.ts:13","methods#Methods":"","create#create()":"create(data, queryOptions?): Promise<RoleEntityInterface>\nCreate one","parameters-1#Parameters":"• data: RoleCreatableInterfacethe reference to create• queryOptions?: QueryOptionsInterface","returns-2#Returns":"Promise<RoleEntityInterface>the created reference","implementation-of#Implementation of":"RoleMutateServiceInterface.create","inherited-from#Inherited from":"MutateService.create","source-4#Source":".tmp/repos/rockets/packages/typeorm-common/dist/services/mutate.service.d.ts:9","findbyid#findById()":"protected findById(id, queryOptions?): Promise<RoleEntityInterface>","parameters-2#Parameters":"• id: string• queryOptions?: QueryOptionsInterface","returns-3#Returns":"Promise<RoleEntityInterface>","inherited-from-1#Inherited from":"MutateService.findById","source-5#Source":".tmp/repos/rockets/packages/typeorm-common/dist/services/mutate.service.d.ts:17","findone#findOne()":"findOne(findOneOptions, queryOptions?): Promise<null | RoleEntityInterface>\nFind One wrapper.","parameters-3#Parameters":"• findOneOptions: FindOneOptions<RoleEntityInterface>Find options• queryOptions?: QueryOptionsInterface","returns-4#Returns":"Promise<null | RoleEntityInterface>","inherited-from-2#Inherited from":"MutateService.findOne","source-6#Source":".tmp/repos/rockets/packages/typeorm-common/dist/services/base.service.d.ts:10","remove#remove()":"remove(data, queryOptions?): Promise<RoleEntityInterface>\nRemove one","parameters-4#Parameters":"• data: DeepPartial<RoleEntityInterface> & ReferenceIdInterface<string>the reference data to remove• queryOptions?: QueryOptionsInterfacequery options","returns-5#Returns":"Promise<RoleEntityInterface>the removed reference","implementation-of-1#Implementation of":"RoleMutateServiceInterface.remove","inherited-from-3#Inherited from":"MutateService.remove","source-7#Source":".tmp/repos/rockets/packages/typeorm-common/dist/services/mutate.service.d.ts:12","replace#replace()":"replace(data, queryOptions?): Promise<RoleEntityInterface>\nReplace one","parameters-5#Parameters":"• data: RoleCreatableInterface & ReferenceIdInterface<string>the reference data to replace• queryOptions?: QueryOptionsInterface","returns-6#Returns":"Promise<RoleEntityInterface>the replaced reference","implementation-of-2#Implementation of":"RoleMutateServiceInterface.replace","inherited-from-4#Inherited from":"MutateService.replace","source-8#Source":".tmp/repos/rockets/packages/typeorm-common/dist/services/mutate.service.d.ts:11","repository#repository()":"repository(queryOptions?): Repository<RoleEntityInterface>\nReturn the correct repository instance.","parameters-6#Parameters":"• queryOptions?: QueryOptionsInterfaceOptions","returns-7#Returns":"Repository<RoleEntityInterface>","inherited-from-5#Inherited from":"MutateService.repository","source-9#Source":".tmp/repos/rockets/packages/typeorm-common/dist/services/base.service.d.ts:11","transaction#transaction()":"transaction(options?): TransactionProxy\nReturn a transaction instance.","parameters-7#Parameters":"• options?: SafeTransactionOptionsInterfaceOptions","returns-8#Returns":"TransactionProxy","inherited-from-6#Inherited from":"MutateService.transaction","source-10#Source":".tmp/repos/rockets/packages/typeorm-common/dist/services/base.service.d.ts:12","transform#transform()":"protected transform(data, _queryOptions?): Promise<DeepPartial<RoleEntityInterface>>","parameters-8#Parameters":"• data: DeepPartial<RoleEntityInterface>• _queryOptions?: QueryOptionsInterface","returns-9#Returns":"Promise<DeepPartial<RoleEntityInterface>>","inherited-from-7#Inherited from":"MutateService.transform","source-11#Source":".tmp/repos/rockets/packages/typeorm-common/dist/services/mutate.service.d.ts:16","update#update()":"update(data, queryOptions?): Promise<RoleEntityInterface>\nUpdate one","parameters-9#Parameters":"• data: RoleUpdatableInterface & ReferenceIdInterface<string>the reference data to update• queryOptions?: QueryOptionsInterface","returns-10#Returns":"Promise<RoleEntityInterface>the updated reference","implementation-of-3#Implementation of":"RoleMutateServiceInterface.update","inherited-from-8#Inherited from":"MutateService.update","source-12#Source":".tmp/repos/rockets/packages/typeorm-common/dist/services/mutate.service.d.ts:10","validate#validate()":"protected validate<T>(type, data): Promise<T>","type-parameters#Type parameters":"• T extends DeepPartial<RoleEntityInterface>","parameters-10#Parameters":"• type: Type<T>• data: T","returns-11#Returns":"Promise<T>","inherited-from-9#Inherited from":"MutateService.validate","source-13#Source":".tmp/repos/rockets/packages/typeorm-common/dist/services/mutate.service.d.ts:15"}},"/reference/rockets/nestjs-role/classes/RolePaginatedDto":{"title":"Class: RolePaginatedDto","data":{"":"@concepta/nestjs-role • DocsPackages Example / @concepta/nestjs-role / RolePaginatedDtoRole paginated DTO","extends#Extends":"CrudResponsePaginatedDto<RoleInterface>","constructors#Constructors":"","new-rolepaginateddto#new RolePaginatedDto()":"new RolePaginatedDto(): RolePaginatedDto","returns#Returns":"RolePaginatedDto","inherited-from#Inherited from":"CrudResponsePaginatedDto.constructor","properties#Properties":"","count#count":"count: number","inherited-from-1#Inherited from":"CrudResponsePaginatedDto.count","source#Source":".tmp/repos/rockets/packages/nestjs-crud/dist/dto/crud-response-paginated.dto.d.ts:4","data#data":"data: RoleInterface[] = []","overrides#Overrides":"CrudResponsePaginatedDto.data","source-1#Source":".tmp/repos/rockets/packages/nestjs-role/src/dto/role-paginated.dto.ts:19","page#page":"page: number","inherited-from-2#Inherited from":"CrudResponsePaginatedDto.page","source-2#Source":".tmp/repos/rockets/packages/nestjs-crud/dist/dto/crud-response-paginated.dto.d.ts:6","pagecount#pageCount":"pageCount: number","inherited-from-3#Inherited from":"CrudResponsePaginatedDto.pageCount","source-3#Source":".tmp/repos/rockets/packages/nestjs-crud/dist/dto/crud-response-paginated.dto.d.ts:7","total#total":"total: number","inherited-from-4#Inherited from":"CrudResponsePaginatedDto.total","source-4#Source":".tmp/repos/rockets/packages/nestjs-crud/dist/dto/crud-response-paginated.dto.d.ts:5"}},"/reference/rockets/nestjs-role/classes/RolePostgresEntity":{"title":"Class: abstract RolePostgresEntity","data":{"":"@concepta/nestjs-role • DocsPackages Example / @concepta/nestjs-role / RolePostgresEntityRole Postgres Entity","extends#Extends":"CommonPostgresEntity","implements#Implements":"RoleEntityInterface","constructors#Constructors":"","new-rolepostgresentity#new RolePostgresEntity()":"new RolePostgresEntity(): RolePostgresEntity","returns#Returns":"RolePostgresEntity","inherited-from#Inherited from":"CommonPostgresEntity.constructor","properties#Properties":"","assignees#assignees":"assignees: ReferenceAssigneeInterface<ReferenceIdInterface<string>>[]\nAssigneesYou will need to decorate this in your concrete entity class.","implementation-of#Implementation of":"RoleEntityInterface.assignees","source#Source":".tmp/repos/rockets/packages/nestjs-role/src/entities/role-postgres.entity.ts:30","datecreated#dateCreated":"dateCreated: Date\nDate created.","implementation-of-1#Implementation of":"RoleEntityInterface.dateCreated","inherited-from-1#Inherited from":"CommonPostgresEntity.dateCreated","source-1#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/audit/audit-postgres.entity.d.ts:3","datedeleted#dateDeleted":"dateDeleted: AuditDateDeleted\nDate deleted.","implementation-of-2#Implementation of":"RoleEntityInterface.dateDeleted","inherited-from-2#Inherited from":"CommonPostgresEntity.dateDeleted","source-2#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/audit/audit-postgres.entity.d.ts:5","dateupdated#dateUpdated":"dateUpdated: Date\nDate updated.","implementation-of-3#Implementation of":"RoleEntityInterface.dateUpdated","inherited-from-3#Inherited from":"CommonPostgresEntity.dateUpdated","source-3#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/audit/audit-postgres.entity.d.ts:4","description#description":"description: string\nDescription","implementation-of-4#Implementation of":"RoleEntityInterface.description","source-4#Source":".tmp/repos/rockets/packages/nestjs-role/src/entities/role-postgres.entity.ts:23","id#id":"id: string","implementation-of-5#Implementation of":"RoleEntityInterface.id","inherited-from-4#Inherited from":"CommonPostgresEntity.id","source-5#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/common/common-postgres.entity.d.ts:4","name#name":"name: string\nName","implementation-of-6#Implementation of":"RoleEntityInterface.name","source-6#Source":".tmp/repos/rockets/packages/nestjs-role/src/entities/role-postgres.entity.ts:17","version#version":"version: number\nVersion","implementation-of-7#Implementation of":"RoleEntityInterface.version","inherited-from-5#Inherited from":"CommonPostgresEntity.version","source-7#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/audit/audit-postgres.entity.d.ts:6"}},"/reference/rockets/nestjs-role/classes/RoleService":{"title":"Class: RoleService","data":{"":"@concepta/nestjs-role • DocsPackages Example / @concepta/nestjs-role / RoleService","implements#Implements":"RoleServiceInterface","constructors#Constructors":"","new-roleservice#new RoleService()":"new RoleService(settings, allRoleRepos): RoleService","parameters#Parameters":"• settings: RoleSettingsInterface• allRoleRepos: Record<string, Repository<RoleAssignmentEntityInterface>>","returns#Returns":"RoleService","source#Source":".tmp/repos/rockets/packages/nestjs-role/src/services/role.service.ts:22","properties#Properties":"","allrolerepos#allRoleRepos":"private allRoleRepos: Record<string, Repository<RoleAssignmentEntityInterface>>","source-1#Source":".tmp/repos/rockets/packages/nestjs-role/src/services/role.service.ts:26","settings#settings":"protected readonly settings: RoleSettingsInterface","source-2#Source":".tmp/repos/rockets/packages/nestjs-role/src/services/role.service.ts:24","methods#Methods":"","getassignedroles#getAssignedRoles()":"getAssignedRoles(assignment, assignee, queryOptions?): Promise<RoleEntityInterface[]>\nGet all roles for assignee.","parameters-1#Parameters":"• assignment: stringThe assignment of the check (same as entity key)• assignee: ReferenceIdInterface<string>The assignee to check• queryOptions?: QueryOptionsInterface","returns-1#Returns":"Promise<RoleEntityInterface[]>","implementation-of#Implementation of":"RoleServiceInterface.getAssignedRoles","source-3#Source":".tmp/repos/rockets/packages/nestjs-role/src/services/role.service.ts:38","getassignmentrepo#getAssignmentRepo()":"private getAssignmentRepo(assignment): Repository<RoleAssignmentEntityInterface>\nGet the assignment repo for the given assignment.","parameters-2#Parameters":"• assignment: stringThe role assignment","returns-2#Returns":"Repository<RoleAssignmentEntityInterface>","source-4#Source":".tmp/repos/rockets/packages/nestjs-role/src/services/role.service.ts:148","isassignedrole#isAssignedRole()":"isAssignedRole<T>(assignment, role, assignee, queryOptions?): Promise<boolean>\nCheck if the assignee is a member of one role.","type-parameters#Type parameters":"• T extends ReferenceIdInterface<string, T>","parameters-3#Parameters":"• assignment: stringThe assignment of the check• role: ReferenceIdInterface<string>The role to check• assignee: TThe assignee to check• queryOptions?: QueryOptionsInterface","returns-3#Returns":"Promise<boolean>","implementation-of-1#Implementation of":"RoleServiceInterface.isAssignedRole","source-5#Source":".tmp/repos/rockets/packages/nestjs-role/src/services/role.service.ts:75","isassignedroles#isAssignedRoles()":"isAssignedRoles<T>(assignment, roles, assignee, queryOptions?): Promise<boolean>\nCheck if the assignee is a member of every role.","type-parameters-1#Type parameters":"• T extends ReferenceIdInterface<string, T>","parameters-4#Parameters":"• assignment: stringThe assignment of the check• roles: ReferenceIdInterface<string>[]The roles to check• assignee: TThe assignee to check• queryOptions?: QueryOptionsInterface","returns-4#Returns":"Promise<boolean>","implementation-of-2#Implementation of":"RoleServiceInterface.isAssignedRoles","source-6#Source":".tmp/repos/rockets/packages/nestjs-role/src/services/role.service.ts:113"}},"/reference/rockets/nestjs-role/classes/RoleSqliteEntity":{"title":"Class: abstract RoleSqliteEntity","data":{"":"@concepta/nestjs-role • DocsPackages Example / @concepta/nestjs-role / RoleSqliteEntityRole Sqlite Entity","extends#Extends":"CommonSqliteEntity","implements#Implements":"RoleEntityInterface","constructors#Constructors":"","new-rolesqliteentity#new RoleSqliteEntity()":"new RoleSqliteEntity(): RoleSqliteEntity","returns#Returns":"RoleSqliteEntity","inherited-from#Inherited from":"CommonSqliteEntity.constructor","properties#Properties":"","assignees#assignees":"assignees: ReferenceAssigneeInterface<ReferenceIdInterface<string>>[]","implementation-of#Implementation of":"RoleEntityInterface.assignees","source#Source":".tmp/repos/rockets/packages/nestjs-role/src/entities/role-sqlite.entity.ts:19","datecreated#dateCreated":"dateCreated: Date\nDate created.","implementation-of-1#Implementation of":"RoleEntityInterface.dateCreated","inherited-from-1#Inherited from":"CommonSqliteEntity.dateCreated","source-1#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/audit/audit-sqlite.entity.d.ts:3","datedeleted#dateDeleted":"dateDeleted: AuditDateDeleted\nDate deleted.","implementation-of-2#Implementation of":"RoleEntityInterface.dateDeleted","inherited-from-2#Inherited from":"CommonSqliteEntity.dateDeleted","source-2#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/audit/audit-sqlite.entity.d.ts:5","dateupdated#dateUpdated":"dateUpdated: Date\nDate updated.","implementation-of-3#Implementation of":"RoleEntityInterface.dateUpdated","inherited-from-3#Inherited from":"CommonSqliteEntity.dateUpdated","source-3#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/audit/audit-sqlite.entity.d.ts:4","description#description":"description: string\nName","implementation-of-4#Implementation of":"RoleEntityInterface.description","source-4#Source":".tmp/repos/rockets/packages/nestjs-role/src/entities/role-sqlite.entity.ts:17","id#id":"id: string","implementation-of-5#Implementation of":"RoleEntityInterface.id","inherited-from-4#Inherited from":"CommonSqliteEntity.id","source-5#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/common/common-sqlite.entity.d.ts:4","name#name":"name: string\nName","implementation-of-6#Implementation of":"RoleEntityInterface.name","source-6#Source":".tmp/repos/rockets/packages/nestjs-role/src/entities/role-sqlite.entity.ts:14","version#version":"version: number\nVersion","implementation-of-7#Implementation of":"RoleEntityInterface.version","inherited-from-5#Inherited from":"CommonSqliteEntity.version","source-7#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/audit/audit-sqlite.entity.d.ts:6"}},"/reference/rockets/nestjs-role/classes/RoleUpdateDto":{"title":"Class: RoleUpdateDto","data":{"":"@concepta/nestjs-role • DocsPackages Example / @concepta/nestjs-role / RoleUpdateDtoRole Update DTO","extends#Extends":"Pick<RoleDto, \"name\" | \"description\">","implements#Implements":"RoleUpdatableInterface","constructors#Constructors":"","new-roleupdatedto#new RoleUpdateDto()":"new RoleUpdateDto(...args): RoleUpdateDto","parameters#Parameters":"• ...args: any[]","returns#Returns":"RoleUpdateDto","inherited-from#Inherited from":"PickType(RoleDto, ['name', 'description'] as const).constructor","source#Source":".tmp/repos/rockets/node_modules/@nestjs/common/interfaces/type.interface.d.ts:2","properties#Properties":"","description#description":"description: string = ''\nName","implementation-of#Implementation of":"RoleUpdatableInterface.description","inherited-from-1#Inherited from":"PickType(RoleDto, ['name', 'description'] as const).description","source-1#Source":".tmp/repos/rockets/packages/nestjs-role/src/dto/role.dto.ts:34","name#name":"name: string = ''\nName","implementation-of-1#Implementation of":"RoleUpdatableInterface.name","inherited-from-2#Inherited from":"PickType(RoleDto, ['name', 'description'] as const).name","source-2#Source":".tmp/repos/rockets/packages/nestjs-role/src/dto/role.dto.ts:22","arguments#arguments":"static arguments: any","inherited-from-3#Inherited from":"PickType(RoleDto, ['name', 'description'] as const).arguments","source-3#Source":"node_modules/typescript/lib/lib.es5.d.ts:304","caller#caller":"static caller: Function","inherited-from-4#Inherited from":"PickType(RoleDto, ['name', 'description'] as const).caller","source-4#Source":"node_modules/typescript/lib/lib.es5.d.ts:305","length#length":"static readonly length: number","inherited-from-5#Inherited from":"PickType(RoleDto, ['name', 'description'] as const).length","source-5#Source":"node_modules/typescript/lib/lib.es5.d.ts:301","name-1#name":"static readonly name: string\nReturns the name of the function. Function names are read-only and can not be changed.","inherited-from-6#Inherited from":"PickType(RoleDto, ['name', 'description'] as const).name","source-6#Source":"node_modules/typescript/lib/lib.es2015.core.d.ts:97","methods#Methods":"","hasinstance#[hasInstance]()":"static [hasInstance](value): boolean\nDetermines whether the given value inherits from this function if this function was used\r\nas a constructor function.A constructor function can control which objects are recognized as its instances by\r\n'instanceof' by overriding this method.","parameters-1#Parameters":"• value: any","returns-1#Returns":"boolean","inherited-from-7#Inherited from":"PickType(RoleDto, ['name', 'description'] as const).[hasInstance]","source-7#Source":"node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts:162","apply#apply()":"static apply(this, thisArg, argArray?): any\nCalls the function, substituting the specified object for the this value of the function, and the specified array for the arguments of the function.","parameters-2#Parameters":"• this: Function• thisArg: anyThe object to be used as the this object.• argArray?: anyA set of arguments to be passed to the function.","returns-2#Returns":"any","inherited-from-8#Inherited from":"PickType(RoleDto, ['name', 'description'] as const).apply","source-8#Source":"node_modules/typescript/lib/lib.es5.d.ts:280","bind#bind()":"static bind(this, thisArg, ...argArray): any\nFor a given function, creates a bound function that has the same body as the original function.\r\nThe this object of the bound function is associated with the specified object, and has the specified initial parameters.","parameters-3#Parameters":"• this: Function• thisArg: anyAn object to which the this keyword can refer inside the new function.• ...argArray: any[]A list of arguments to be passed to the new function.","returns-3#Returns":"any","inherited-from-9#Inherited from":"PickType(RoleDto, ['name', 'description'] as const).bind","source-9#Source":"node_modules/typescript/lib/lib.es5.d.ts:295","call#call()":"static call(this, thisArg, ...argArray): any\nCalls a method of an object, substituting another object for the current object.","parameters-4#Parameters":"• this: Function• thisArg: anyThe object to be used as the current object.• ...argArray: any[]A list of arguments to be passed to the method.","returns-4#Returns":"any","inherited-from-10#Inherited from":"PickType(RoleDto, ['name', 'description'] as const).call","source-10#Source":"node_modules/typescript/lib/lib.es5.d.ts:287","tostring#toString()":"static toString(): string\nReturns a string representation of a function.","returns-5#Returns":"string","inherited-from-11#Inherited from":"PickType(RoleDto, ['name', 'description'] as const).toString","source-11#Source":"node_modules/typescript/lib/lib.es5.d.ts:298"}},"/reference/rockets/nestjs-role/enumerations/RoleAssignmentResource":{"title":"Enumeration: RoleAssignmentResource","data":{"":"@concepta/nestjs-role • DocsPackages Example / @concepta/nestjs-role / RoleAssignmentResource","enumeration-members#Enumeration Members":"","many#Many":"Many: \"role-assignment-list\"","source#Source":".tmp/repos/rockets/packages/nestjs-role/src/role.types.ts:8","one#One":"One: \"role-assignment\"","source-1#Source":".tmp/repos/rockets/packages/nestjs-role/src/role.types.ts:7"}},"/reference/rockets/nestjs-role/enumerations/RoleResource":{"title":"Enumeration: RoleResource","data":{"":"@concepta/nestjs-role • DocsPackages Example / @concepta/nestjs-role / RoleResource","enumeration-members#Enumeration Members":"","many#Many":"Many: \"role-list\"","source#Source":".tmp/repos/rockets/packages/nestjs-role/src/role.types.ts:3","one#One":"One: \"role\"","source-1#Source":".tmp/repos/rockets/packages/nestjs-role/src/role.types.ts:2"}},"/reference/rockets/nestjs-role/globals":{"title":"@concepta/nestjs-role","data":{"":"@concepta/nestjs-role • DocsPackages Example / @concepta/nestjs-role","enumerations#Enumerations":"RoleAssignmentResource\nRoleResource","classes#Classes":"RoleAssignmentCreateDto\nRoleAssignmentCreateManyDto\nRoleAssignmentDto\nRoleAssignmentPaginatedDto\nRoleAssignmentPostgresEntity\nRoleAssignmentSqliteEntity\nRoleController\nRoleCreateDto\nRoleCreateManyDto\nRoleCrudService\nRoleDto\nRoleLookupService\nRoleModule\nRoleMutateService\nRolePaginatedDto\nRolePostgresEntity\nRoleService\nRoleSqliteEntity\nRoleUpdateDto","interfaces#Interfaces":"RoleAssignmentEntityInterface\nRoleEntityInterface\nRoleLookupServiceInterface\nRoleMutateServiceInterface"}},"/reference/rockets/nestjs-role/interfaces/RoleAssignmentEntityInterface":{"title":"Interface: RoleAssignmentEntityInterface","data":{"":"@concepta/nestjs-role • DocsPackages Example / @concepta/nestjs-role / RoleAssignmentEntityInterfaceIdentifiable by id.","see#See":"https://en.wikipedia.org/wiki/Reference_(computer_science)","extends#Extends":"ReferenceIdInterface.ReferenceAssigneeInterface.AuditInterface","properties#Properties":"","assignee#assignee":"assignee: ReferenceIdInterface<string>","inherited-from#Inherited from":"ReferenceAssigneeInterface.assignee","source#Source":".tmp/repos/rockets/packages/ts-core/dist/references/interfaces/reference-assignee.interface.d.ts:3","datecreated#dateCreated":"dateCreated: Date","inherited-from-1#Inherited from":"AuditInterface.dateCreated","source-1#Source":".tmp/repos/rockets/packages/ts-core/dist/audit/interfaces/audit-date-created.interface.d.ts:3","datedeleted#dateDeleted":"dateDeleted: AuditDateDeleted","inherited-from-2#Inherited from":"AuditInterface.dateDeleted","source-2#Source":".tmp/repos/rockets/packages/ts-core/dist/audit/interfaces/audit-date-deleted.interface.d.ts:3","dateupdated#dateUpdated":"dateUpdated: Date","inherited-from-3#Inherited from":"AuditInterface.dateUpdated","source-3#Source":".tmp/repos/rockets/packages/ts-core/dist/audit/interfaces/audit-date-updated.interface.d.ts:3","id#id":"id: string","inherited-from-4#Inherited from":"ReferenceIdInterface.id","source-4#Source":".tmp/repos/rockets/packages/ts-core/dist/references/interfaces/reference-id.interface.d.ts:3","role#role":"role: RoleInterface\nRole","source-5#Source":".tmp/repos/rockets/packages/nestjs-role/src/interfaces/role-assignment-entity.interface.ts:15","version#version":"version: number","inherited-from-5#Inherited from":"AuditInterface.version","source-6#Source":".tmp/repos/rockets/packages/ts-core/dist/audit/interfaces/audit-version.interface.d.ts:3"}},"/reference/rockets/nestjs-role/interfaces/RoleEntityInterface":{"title":"Interface: RoleEntityInterface","data":{"":"@concepta/nestjs-role • DocsPackages Example / @concepta/nestjs-role / RoleEntityInterfaceIdentifiable by id.","see#See":"https://en.wikipedia.org/wiki/Reference_(computer_science)","extends#Extends":"RoleInterface","properties#Properties":"","assignees#assignees":"assignees: ReferenceAssigneeInterface<ReferenceIdInterface<string>>[]","inherited-from#Inherited from":"RoleInterface.assignees","source#Source":".tmp/repos/rockets/packages/ts-common/dist/role/interfaces/role-assignees.interface.d.ts:3","datecreated#dateCreated":"dateCreated: Date","inherited-from-1#Inherited from":"RoleInterface.dateCreated","source-1#Source":".tmp/repos/rockets/packages/ts-core/dist/audit/interfaces/audit-date-created.interface.d.ts:3","datedeleted#dateDeleted":"dateDeleted: AuditDateDeleted","inherited-from-2#Inherited from":"RoleInterface.dateDeleted","source-2#Source":".tmp/repos/rockets/packages/ts-core/dist/audit/interfaces/audit-date-deleted.interface.d.ts:3","dateupdated#dateUpdated":"dateUpdated: Date","inherited-from-3#Inherited from":"RoleInterface.dateUpdated","source-3#Source":".tmp/repos/rockets/packages/ts-core/dist/audit/interfaces/audit-date-updated.interface.d.ts:3","description#description":"description: string\nName","inherited-from-4#Inherited from":"RoleInterface.description","source-4#Source":".tmp/repos/rockets/packages/ts-common/dist/role/interfaces/role.interface.d.ts:5","id#id":"id: string","inherited-from-5#Inherited from":"RoleInterface.id","source-5#Source":".tmp/repos/rockets/packages/ts-core/dist/references/interfaces/reference-id.interface.d.ts:3","name#name":"name: string\nName","inherited-from-6#Inherited from":"RoleInterface.name","source-6#Source":".tmp/repos/rockets/packages/ts-common/dist/role/interfaces/role.interface.d.ts:4","version#version":"version: number","inherited-from-7#Inherited from":"RoleInterface.version","source-7#Source":".tmp/repos/rockets/packages/ts-core/dist/audit/interfaces/audit-version.interface.d.ts:3"}},"/reference/rockets/nestjs-role/interfaces/RoleLookupServiceInterface":{"title":"Interface: RoleLookupServiceInterface","data":{"":"@concepta/nestjs-role • DocsPackages Example / @concepta/nestjs-role / RoleLookupServiceInterface","extends#Extends":"LookupIdInterface<ReferenceId, ReferenceIdInterface, QueryOptionsInterface>","properties#Properties":"","byid#byId()":"byId: (id, options?) => Promise<null | ReferenceIdInterface<string>>","parameters#Parameters":"• id: string• options?: QueryOptionsInterface","returns#Returns":"Promise<null | ReferenceIdInterface<string>>","inherited-from#Inherited from":"LookupIdInterface.byId","source#Source":".tmp/repos/rockets/packages/ts-core/dist/references/interfaces/lookup/lookup-id.interface.d.ts:5"}},"/reference/rockets/nestjs-role/interfaces/RoleMutateServiceInterface":{"title":"Interface: RoleMutateServiceInterface","data":{"":"@concepta/nestjs-role • DocsPackages Example / @concepta/nestjs-role / RoleMutateServiceInterface","extends#Extends":"CreateOneInterface<RoleCreatableInterface, RoleEntityInterface>.UpdateOneInterface<RoleUpdatableInterface & ReferenceIdInterface, RoleEntityInterface, QueryOptionsInterface>.ReplaceOneInterface<RoleCreatableInterface & ReferenceIdInterface, RoleEntityInterface, QueryOptionsInterface>.RemoveOneInterface<RoleEntityInterface, RoleEntityInterface, QueryOptionsInterface>","properties#Properties":"","create#create()":"create: (object, options?) => Promise<RoleEntityInterface>","parameters#Parameters":"• object: RoleCreatableInterface• options?: ReferenceQueryOptionsInterface","returns#Returns":"Promise<RoleEntityInterface>","inherited-from#Inherited from":"CreateOneInterface.create","source#Source":".tmp/repos/rockets/packages/ts-core/dist/references/interfaces/mutate/create-one.interface.d.ts:4","remove#remove()":"remove: (object, options?) => Promise<RoleEntityInterface>","parameters-1#Parameters":"• object: RoleEntityInterface• options?: QueryOptionsInterface","returns-1#Returns":"Promise<RoleEntityInterface>","inherited-from-1#Inherited from":"RemoveOneInterface.remove","source-1#Source":".tmp/repos/rockets/packages/ts-core/dist/references/interfaces/mutate/remove-one.interface.d.ts:4","replace#replace()":"replace: (object, options?) => Promise<RoleEntityInterface>","parameters-2#Parameters":"• object: RoleCreatableInterface & ReferenceIdInterface<string>• options?: QueryOptionsInterface","returns-2#Returns":"Promise<RoleEntityInterface>","inherited-from-2#Inherited from":"ReplaceOneInterface.replace","source-2#Source":".tmp/repos/rockets/packages/ts-core/dist/references/interfaces/mutate/replace-one.interface.d.ts:4","update#update()":"update: (object, options?) => Promise<RoleEntityInterface>","parameters-3#Parameters":"• object: RoleUpdatableInterface & ReferenceIdInterface<string>• options?: QueryOptionsInterface","returns-3#Returns":"Promise<RoleEntityInterface>","inherited-from-3#Inherited from":"UpdateOneInterface.update","source-3#Source":".tmp/repos/rockets/packages/ts-core/dist/references/interfaces/mutate/update-one.interface.d.ts:4"}},"/reference/rockets/nestjs-swagger-ui/README":{"title":"Rockets NestJS Swagger UI","data":{"":"@concepta/nestjs-swagger-ui • DocsPackages Example / @concepta/nestjs-swagger-uiExpose your OpenApi spec on your API using the powerful Swagger UI interface.","project#Project":"","overview#Overview":"The Swagger UI module provides a simple implementation of the\n@nestjs/swagger module.Using this module, you can register the Swagger UI just like a normal module\nto reduce the amount of boilerplate in your main.ts.","installation#Installation":"yarn add @concepta/nestjs-swagger-ui","usage#Usage":"app.module.ts\n@Module({\n  imports: [\n    SwaggerUiModule.register({\n      settings: {\n        path: 'api',\n        basePath: '/v1',\n      },\n    }),\n  ],\n})\nexport class AppModule {}\nmain.ts\nasync function bootstrap() {\n  // create app\n  const app = await NestFactory.create(AppModule);\n  // get the swagger ui service\n  const swaggerUiService = app.get(SwaggerUiService);\n  // set it up\n  swaggerUiService.setup(app);\n  // start listening\n  await app.listen(3000);\n}\nbootstrap();","configuration#Configuration":"All of the options in the official docs for\nNestJS OpenApi are supported.To see how they are mapped to the registration options settings property,\nsee the SwaggerUiSettingsInterface"}},"/reference/rockets/nestjs-swagger-ui/classes/SwaggerUiModule":{"title":"Class: SwaggerUiModule","data":{"":"@concepta/nestjs-swagger-ui • DocsPackages Example / @concepta/nestjs-swagger-ui / SwaggerUiModule","extends#Extends":"SwaggerUiModuleClass","constructors#Constructors":"","new-swaggeruimodule#new SwaggerUiModule()":"new SwaggerUiModule(): SwaggerUiModule","returns#Returns":"SwaggerUiModule","inherited-from#Inherited from":"SwaggerUiModuleClass.constructor","source#Source":"node_modules/@nestjs/common/module-utils/interfaces/configurable-module-cls.interface.d.ts:12","methods#Methods":"","forroot#forRoot()":"static forRoot(options): DynamicModule","parameters#Parameters":"• options: SwaggerUiOptions","returns-1#Returns":"DynamicModule","source-1#Source":"packages/nestjs-swagger-ui/src/swagger-ui.module.ts:18","forrootasync#forRootAsync()":"static forRootAsync(options): DynamicModule","parameters-1#Parameters":"• options: SwaggerUiAsyncOptions","returns-2#Returns":"DynamicModule","source-2#Source":"packages/nestjs-swagger-ui/src/swagger-ui.module.ts:22","register#register()":"static register(options): DynamicModule","parameters-2#Parameters":"• options: SwaggerUiOptions","returns-3#Returns":"DynamicModule","overrides#Overrides":"SwaggerUiModuleClass.register","source-3#Source":"packages/nestjs-swagger-ui/src/swagger-ui.module.ts:10","registerasync#registerAsync()":"static registerAsync(options): DynamicModule","parameters-3#Parameters":"• options: SwaggerUiAsyncOptions","returns-4#Returns":"DynamicModule","overrides-1#Overrides":"SwaggerUiModuleClass.registerAsync","source-4#Source":"packages/nestjs-swagger-ui/src/swagger-ui.module.ts:14"}},"/reference/rockets/nestjs-swagger-ui/classes/SwaggerUiService":{"title":"Class: SwaggerUiService","data":{"":"@concepta/nestjs-swagger-ui • DocsPackages Example / @concepta/nestjs-swagger-ui / SwaggerUiService","constructors#Constructors":"","new-swaggeruiservice#new SwaggerUiService()":"new SwaggerUiService(settings, documentBuilder): SwaggerUiService\nConstructor.","parameters#Parameters":"• settings: SwaggerUiSettingsInterfaceswagger ui settings• documentBuilder: DocumentBuilder","returns#Returns":"SwaggerUiService","source#Source":"packages/nestjs-swagger-ui/src/swagger-ui.service.ts:16","properties#Properties":"","documentbuilder#documentBuilder":"protected readonly documentBuilder: DocumentBuilder","source-1#Source":"packages/nestjs-swagger-ui/src/swagger-ui.service.ts:20","settings#settings":"protected readonly settings: SwaggerUiSettingsInterface\nswagger ui settings","source-2#Source":"packages/nestjs-swagger-ui/src/swagger-ui.service.ts:18","methods#Methods":"","builder#builder()":"builder(): DocumentBuilder\nReturns document builder instance.","returns-1#Returns":"DocumentBuilder","source-3#Source":"packages/nestjs-swagger-ui/src/swagger-ui.service.ts:26","setup#setup()":"setup(app): void\nSetup.","parameters-1#Parameters":"• app: INestApplicationNest application instance","returns-2#Returns":"void","source-4#Source":"packages/nestjs-swagger-ui/src/swagger-ui.service.ts:35"}},"/reference/rockets/nestjs-swagger-ui/globals":{"title":"@concepta/nestjs-swagger-ui","data":{"":"@concepta/nestjs-swagger-ui • DocsPackages Example / @concepta/nestjs-swagger-ui","classes#Classes":"SwaggerUiModule\nSwaggerUiService"}},"/reference/rockets/nestjs-typeorm-ext/README":{"title":"Rockets NestJS TypeOrm Extended","data":{"":"@concepta/nestjs-typeorm-ext • DocsPackages Example / @concepta/nestjs-typeorm-extExtremely powerful extension of the NestJS TypeOrm module that allows your\ndynamic modules to accept drop-in replacements of custom entities\nand repositories at registration time.","project#Project":"","overview#Overview":"The TypeOrm Ext module provides a powerful wrapper around the\n@nestjs/typeorm module.While still using the identical configuration options of the TypeOrm module,\nyou can increase the extensibility of your custom module by designing it\nto accept custom entity and repository overrides.This pattern allows you to publish modules that are loosely coupled to their\nown entity and repository definitions. This enables implementations of your\nmodule to define their own concrete data storage.","installation#Installation":"yarn add @concepta/nestjs-typeorm-ext","module-design#Module Design":"Designing your module to use this extension is fairly straight forward, but a bit too verbose\nfor this readme.To see how this was implemented in our\nUserModule\nplease refer to that module's\nuser.module.ts","usage#Usage":"app.module.ts\n// ...\nimport { TypeOrmExtModule } from '@concepta/nestjs-typeorm-ext';\nimport { UserModule } from '@concepta/nestjs-user';\nimport { CustomUserRepository } from 'path/to/custom-user.repository';\nimport { CustomUser } from 'path/to/custom-user.entity';\n@Module({\n  imports: [\n    TypeOrmExtModule.forRoot({\n      type: 'postgres',\n      url: 'postgres://user:pass@localhost:5432/postgres',\n      entities: [CustomUser],\n    }),\n    UserModule.forRoot({\n      entities: {\n        user: { entity: CustomUser, repository: CustomUserRepository },\n      },\n    }),\n  ],\n})\nexport class AppModule {}","configuration#Configuration":"","data-source-options#Data Source Options":"The module options are identical the the NestJS TypeOrm module."}},"/reference/rockets/nestjs-typeorm-ext/classes/TypeOrmExtModule":{"title":"Class: TypeOrmExtModule","data":{"":"@concepta/nestjs-typeorm-ext • DocsPackages Example / @concepta/nestjs-typeorm-ext / TypeOrmExtModule","extends#Extends":"TypeOrmExtModuleClass","constructors#Constructors":"","new-typeormextmodule#new TypeOrmExtModule()":"new TypeOrmExtModule(): TypeOrmExtModule","returns#Returns":"TypeOrmExtModule","inherited-from#Inherited from":"TypeOrmExtModuleClass.constructor","source#Source":"node_modules/@nestjs/common/module-utils/interfaces/configurable-module-cls.interface.d.ts:12","methods#Methods":"","forfeature#forFeature()":"static forFeature(entityOptions): DynamicModule","parameters#Parameters":"• entityOptions: Record<string, TypeOrmExtEntityOptionInterface<ReferenceIdInterface<string>>>","returns-1#Returns":"DynamicModule","source-1#Source":"packages/nestjs-typeorm-ext/src/typeorm-ext.module.ts:63","forroot#forRoot()":"static forRoot(options): DynamicModule","parameters-1#Parameters":"• options: TypeOrmModuleOptions & Partial<object>","returns-2#Returns":"DynamicModule","overrides#Overrides":"TypeOrmExtModuleClass.forRoot","source-2#Source":"packages/nestjs-typeorm-ext/src/typeorm-ext.module.ts:26","forrootasync#forRootAsync()":"static forRootAsync(options): DynamicModule","parameters-2#Parameters":"• options: ConfigurableModuleAsyncOptions<TypeOrmModuleOptions, \"create\"> & Partial<object>","returns-3#Returns":"DynamicModule","overrides-1#Overrides":"TypeOrmExtModuleClass.forRootAsync","source-3#Source":"packages/nestjs-typeorm-ext/src/typeorm-ext.module.ts:46"}},"/reference/rockets/nestjs-typeorm-ext/functions/InjectDynamicRepository":{"title":"Function: InjectDynamicRepository()","data":{"":"@concepta/nestjs-typeorm-ext • DocsPackages Example / @concepta/nestjs-typeorm-ext / InjectDynamicRepository\nInjectDynamicRepository(key): (target, key, index?) => void","parameters#Parameters":"• key: string","returns#Returns":"Function","parameters-1#Parameters":"• target: object• key: undefined | string | symbol• index?: number","returns-1#Returns":"void","source#Source":"packages/nestjs-typeorm-ext/src/decorators/inject-dymamic-repository.decorator.ts:4"}},"/reference/rockets/nestjs-typeorm-ext/functions/InjectEntityRepository":{"title":"Function: InjectEntityRepository()","data":{"":"@concepta/nestjs-typeorm-ext • DocsPackages Example / @concepta/nestjs-typeorm-ext / InjectEntityRepository\nInjectEntityRepository(key): (target, key, index?) => void","parameters#Parameters":"• key: string","returns#Returns":"Function","parameters-1#Parameters":"• target: object• key: undefined | string | symbol• index?: number","returns-1#Returns":"void","source#Source":"packages/nestjs-typeorm-ext/src/decorators/inject-entity-repository.decorator.ts:4"}},"/reference/rockets/nestjs-typeorm-ext/functions/getDynamicRepositoryToken":{"title":"Function: getDynamicRepositoryToken()","data":{"":"@concepta/nestjs-typeorm-ext • DocsPackages Example / @concepta/nestjs-typeorm-ext / getDynamicRepositoryToken\ngetDynamicRepositoryToken(key): string","parameters#Parameters":"• key: string","returns#Returns":"string","source#Source":"packages/nestjs-typeorm-ext/src/utils/get-dynamic-repository-token.ts:1"}},"/reference/rockets/nestjs-typeorm-ext/functions/getEntityRepositoryToken":{"title":"Function: getEntityRepositoryToken()","data":{"":"@concepta/nestjs-typeorm-ext • DocsPackages Example / @concepta/nestjs-typeorm-ext / getEntityRepositoryToken\ngetEntityRepositoryToken(key): string","parameters#Parameters":"• key: string","returns#Returns":"string","source#Source":"packages/nestjs-typeorm-ext/src/utils/get-entity-repository-token.ts:1"}},"/reference/rockets/nestjs-typeorm-ext/globals":{"title":"@concepta/nestjs-typeorm-ext","data":{"":"@concepta/nestjs-typeorm-ext • DocsPackages Example / @concepta/nestjs-typeorm-ext","classes#Classes":"TypeOrmExtModule","interfaces#Interfaces":"TypeOrmExtEntityOptionInterface","type-aliases#Type Aliases":"TypeOrmExtOptions","functions#Functions":"InjectDynamicRepository\nInjectEntityRepository\ngetDynamicRepositoryToken\ngetEntityRepositoryToken"}},"/reference/rockets/nestjs-typeorm-ext/interfaces/TypeOrmExtEntityOptionInterface":{"title":"Interface: TypeOrmExtEntityOptionInterface<T>","data":{"":"@concepta/nestjs-typeorm-ext • DocsPackages Example / @concepta/nestjs-typeorm-ext / TypeOrmExtEntityOptionInterface","type-parameters#Type parameters":"• T extends ReferenceIdInterface = ReferenceIdInterface","properties#Properties":"","datasource#dataSource?":"optional dataSource: TypeOrmExtDataSourceToken","source#Source":"packages/nestjs-typeorm-ext/src/interfaces/typeorm-ext-entity-options.interface.ts:11","entity#entity":"entity: EntityClassOrSchema","source-1#Source":"packages/nestjs-typeorm-ext/src/interfaces/typeorm-ext-entity-options.interface.ts:9","repositoryfactory#repositoryFactory()?":"optional repositoryFactory: (dataSource) => Repository<T>","parameters#Parameters":"• dataSource: DataSource","returns#Returns":"Repository<T>","source-2#Source":"packages/nestjs-typeorm-ext/src/interfaces/typeorm-ext-entity-options.interface.ts:10"}},"/reference/rockets/nestjs-typeorm-ext/type-aliases/TypeOrmExtOptions":{"title":"Type alias: TypeOrmExtOptions","data":{"":"@concepta/nestjs-typeorm-ext • DocsPackages Example / @concepta/nestjs-typeorm-ext / TypeOrmExtOptions\nTypeOrmExtOptions: TypeOrmModuleOptions","source#Source":"packages/nestjs-typeorm-ext/src/typeorm-ext.types.ts:4"}},"/reference/rockets/nestjs-user/README":{"title":"Rockets NestJS User","data":{"":"@concepta/nestjs-user • DocsPackages Example / @concepta/nestjs-userA module for managing a basic User entity, including controller with full CRUD, DTOs, sample data factory and seeder.","project#Project":"","installation#Installation":"yarn add @concepta/nestjs-user","usage#Usage":"// ...\nimport { TypeOrmExtModule } from '@concepta/nestjs-typeorm-ext';\nimport { UserModule } from '@concepta/nestjs-user';\nimport { CrudModule } from '@concepta/nestjs-crud';\n@Module({\n  imports: [\n    TypeOrmExtModule.forRoot({\n      type: 'postgres',\n      url: 'postgres://user:pass@localhost:5432/postgres',\n    }),\n    CrudModule.forRoot({}),\n    UserModule.forRoot({}),\n  ],\n})\nexport class AppModule {}","configuration#Configuration":"Seeding\nENV","seeding#Seeding":"Configurations specific to (optional) database seeding.","env#ENV":"Configurations available via environment.\nVariable\tType\tDefault\t\tUSER_MODULE_SEEDER_AMOUNT\t<number>\t50\tnumber of additional users to create\tUSER_MODULE_SEEDER_SUPERADMIN_USERNAME\t<string>\t'superadmin'\tsuper admin username"}},"/reference/rockets/nestjs-user/classes/UserAccessQueryService":{"title":"Class: UserAccessQueryService","data":{"":"@concepta/nestjs-user • DocsPackages Example / @concepta/nestjs-user / UserAccessQueryService","implements#Implements":"CanAccess","constructors#Constructors":"","new-useraccessqueryservice#new UserAccessQueryService()":"new UserAccessQueryService(): UserAccessQueryService","returns#Returns":"UserAccessQueryService","methods#Methods":"","canaccess#canAccess()":"canAccess(context): Promise<boolean>","parameters#Parameters":"• context: AccessControlContext","returns-1#Returns":"Promise<boolean>","implementation-of#Implementation of":"CanAccess.canAccess","source#Source":".tmp/repos/rockets/packages/nestjs-user/src/services/user-access-query.service.ts:14","canupdatepassword#canUpdatePassword()":"protected canUpdatePassword(context): Promise<boolean>","parameters-1#Parameters":"• context: AccessControlContext","returns-2#Returns":"Promise<boolean>","source-1#Source":".tmp/repos/rockets/packages/nestjs-user/src/services/user-access-query.service.ts:18"}},"/reference/rockets/nestjs-user/classes/UserController":{"title":"Class: UserController","data":{"":"@concepta/nestjs-user • DocsPackages Example / @concepta/nestjs-user / UserControllerUser controller.","implements#Implements":"CrudControllerInterface<UserEntityInterface, UserCreatableInterface, UserUpdatableInterface>","constructors#Constructors":"","new-usercontroller#new UserController()":"new UserController(userCrudService, userPasswordService): UserController\nConstructor.","parameters#Parameters":"• userCrudService: UserCrudServiceinstance of the user crud service• userPasswordService: UserPasswordServiceinstance of user password service","returns#Returns":"UserController","source#Source":".tmp/repos/rockets/packages/nestjs-user/src/user.controller.ts:74","properties#Properties":"","usercrudservice#userCrudService":"private userCrudService: UserCrudService\ninstance of the user crud service","source-1#Source":".tmp/repos/rockets/packages/nestjs-user/src/user.controller.ts:75","userpasswordservice#userPasswordService":"private userPasswordService: UserPasswordService\ninstance of user password service","source-2#Source":".tmp/repos/rockets/packages/nestjs-user/src/user.controller.ts:76","methods#Methods":"","createmany#createMany()":"createMany(crudRequest, userCreateManyDto): Promise<UserEntityInterface[]>\nCreate many","parameters-1#Parameters":"• crudRequest: CrudRequestInterfacethe CRUD request object• userCreateManyDto: UserCreateManyDtouser create many dto","returns-1#Returns":"Promise<UserEntityInterface[]>","implementation-of#Implementation of":"CrudControllerInterface.createMany","source-3#Source":".tmp/repos/rockets/packages/nestjs-user/src/user.controller.ts:109","createone#createOne()":"createOne(crudRequest, userCreateDto): Promise<UserEntityInterface>\nCreate one","parameters-2#Parameters":"• crudRequest: CrudRequestInterfacethe CRUD request object• userCreateDto: UserCreateDtouser create dto","returns-2#Returns":"Promise<UserEntityInterface>","implementation-of-1#Implementation of":"CrudControllerInterface.createOne","source-4#Source":".tmp/repos/rockets/packages/nestjs-user/src/user.controller.ts:134","deleteone#deleteOne()":"deleteOne(crudRequest): Promise<void | UserEntityInterface>\nDelete one","parameters-3#Parameters":"• crudRequest: CrudRequestInterfacethe CRUD request object","returns-3#Returns":"Promise<void | UserEntityInterface>","implementation-of-2#Implementation of":"CrudControllerInterface.deleteOne","source-5#Source":".tmp/repos/rockets/packages/nestjs-user/src/user.controller.ts:181","getmany#getMany()":"getMany(crudRequest): Promise<UserEntityInterface[] | CrudResultPaginatedInterface<UserEntityInterface>>\nGet many","parameters-4#Parameters":"• crudRequest: CrudRequestInterfacethe CRUD request object","returns-4#Returns":"Promise<UserEntityInterface[] | CrudResultPaginatedInterface<UserEntityInterface>>","implementation-of-3#Implementation of":"CrudControllerInterface.getMany","source-6#Source":".tmp/repos/rockets/packages/nestjs-user/src/user.controller.ts:86","getone#getOne()":"getOne(crudRequest): Promise<UserEntityInterface>\nGet one","parameters-5#Parameters":"• crudRequest: CrudRequestInterfacethe CRUD request object","returns-5#Returns":"Promise<UserEntityInterface>","implementation-of-4#Implementation of":"CrudControllerInterface.getOne","source-7#Source":".tmp/repos/rockets/packages/nestjs-user/src/user.controller.ts:97","recoverone#recoverOne()":"recoverOne(crudRequest): Promise<UserEntityInterface>\nRecover one","parameters-6#Parameters":"• crudRequest: CrudRequestInterfacethe CRUD request object","returns-6#Returns":"Promise<UserEntityInterface>","implementation-of-5#Implementation of":"CrudControllerInterface.recoverOne","source-8#Source":".tmp/repos/rockets/packages/nestjs-user/src/user.controller.ts:192","updateone#updateOne()":"updateOne(crudRequest, userUpdateDto, userId?, authorizededUser?): Promise<UserEntityInterface>\nUpdate one","parameters-7#Parameters":"• crudRequest: CrudRequestInterfacethe CRUD request object• userUpdateDto: UserUpdateDtouser update dto• userId?: string• authorizededUser?: AuthenticatedUserInterface","returns-7#Returns":"Promise<UserEntityInterface>","implementation-of-6#Implementation of":"CrudControllerInterface.updateOne","source-9#Source":".tmp/repos/rockets/packages/nestjs-user/src/user.controller.ts:153"}},"/reference/rockets/nestjs-user/classes/UserCreateDto":{"title":"Class: UserCreateDto","data":{"":"@concepta/nestjs-user • DocsPackages Example / @concepta/nestjs-user / UserCreateDtoUser Create DTO","extends#Extends":"Pick<UserDto, \"email\" | \"username\"> & Partial<Pick<UserDto, \"active\">> & Partial<UserPasswordDto>","implements#Implements":"UserCreatableInterface","constructors#Constructors":"","new-usercreatedto#new UserCreateDto()":"new UserCreateDto(...args): UserCreateDto","parameters#Parameters":"• ...args: any[]","returns#Returns":"UserCreateDto","inherited-from#Inherited from":"IntersectionType( PickType(UserDto, ['username', 'email'] as const), PartialType(PickType(UserDto, ['active'] as const)), PartialType(UserPasswordDto), ).constructor","source#Source":".tmp/repos/rockets/node_modules/@nestjs/common/interfaces/type.interface.d.ts:2","properties#Properties":"","active#active?":"optional active: boolean\nActive","implementation-of#Implementation of":"UserCreatableInterface.active","inherited-from-1#Inherited from":"IntersectionType( PickType(UserDto, ['username', 'email'] as const), PartialType(PickType(UserDto, ['active'] as const)), PartialType(UserPasswordDto), ).active","source-1#Source":".tmp/repos/rockets/packages/nestjs-user/src/dto/user.dto.ts:43","email#email":"email: string = ''\nEmail","implementation-of-1#Implementation of":"UserCreatableInterface.email","inherited-from-2#Inherited from":"IntersectionType( PickType(UserDto, ['username', 'email'] as const), PartialType(PickType(UserDto, ['active'] as const)), PartialType(UserPasswordDto), ).email","source-2#Source":".tmp/repos/rockets/packages/nestjs-user/src/dto/user.dto.ts:21","password#password?":"optional password: string\nPassword","implementation-of-2#Implementation of":"UserCreatableInterface.password","inherited-from-3#Inherited from":"IntersectionType( PickType(UserDto, ['username', 'email'] as const), PartialType(PickType(UserDto, ['active'] as const)), PartialType(UserPasswordDto), ).password","source-3#Source":".tmp/repos/rockets/packages/nestjs-user/src/dto/user-password.dto.ts:17","username#username":"username: string = ''\nUsername","implementation-of-3#Implementation of":"UserCreatableInterface.username","inherited-from-4#Inherited from":"IntersectionType( PickType(UserDto, ['username', 'email'] as const), PartialType(PickType(UserDto, ['active'] as const)), PartialType(UserPasswordDto), ).username","source-4#Source":".tmp/repos/rockets/packages/nestjs-user/src/dto/user.dto.ts:32","arguments#arguments":"static arguments: any","inherited-from-5#Inherited from":"IntersectionType( PickType(UserDto, ['username', 'email'] as const), PartialType(PickType(UserDto, ['active'] as const)), PartialType(UserPasswordDto), ).arguments","source-5#Source":"node_modules/typescript/lib/lib.es5.d.ts:304","caller#caller":"static caller: Function","inherited-from-6#Inherited from":"IntersectionType( PickType(UserDto, ['username', 'email'] as const), PartialType(PickType(UserDto, ['active'] as const)), PartialType(UserPasswordDto), ).caller","source-6#Source":"node_modules/typescript/lib/lib.es5.d.ts:305","length#length":"static readonly length: number","inherited-from-7#Inherited from":"IntersectionType( PickType(UserDto, ['username', 'email'] as const), PartialType(PickType(UserDto, ['active'] as const)), PartialType(UserPasswordDto), ).length","source-7#Source":"node_modules/typescript/lib/lib.es5.d.ts:301","name#name":"static readonly name: string\nReturns the name of the function. Function names are read-only and can not be changed.","inherited-from-8#Inherited from":"IntersectionType( PickType(UserDto, ['username', 'email'] as const), PartialType(PickType(UserDto, ['active'] as const)), PartialType(UserPasswordDto), ).name","source-8#Source":"node_modules/typescript/lib/lib.es2015.core.d.ts:97","methods#Methods":"","hasinstance#[hasInstance]()":"static [hasInstance](value): boolean\nDetermines whether the given value inherits from this function if this function was used\r\nas a constructor function.A constructor function can control which objects are recognized as its instances by\r\n'instanceof' by overriding this method.","parameters-1#Parameters":"• value: any","returns-1#Returns":"boolean","inherited-from-9#Inherited from":"IntersectionType( PickType(UserDto, ['username', 'email'] as const), PartialType(PickType(UserDto, ['active'] as const)), PartialType(UserPasswordDto), ).[hasInstance]","source-9#Source":"node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts:162","apply#apply()":"static apply(this, thisArg, argArray?): any\nCalls the function, substituting the specified object for the this value of the function, and the specified array for the arguments of the function.","parameters-2#Parameters":"• this: Function• thisArg: anyThe object to be used as the this object.• argArray?: anyA set of arguments to be passed to the function.","returns-2#Returns":"any","inherited-from-10#Inherited from":"IntersectionType( PickType(UserDto, ['username', 'email'] as const), PartialType(PickType(UserDto, ['active'] as const)), PartialType(UserPasswordDto), ).apply","source-10#Source":"node_modules/typescript/lib/lib.es5.d.ts:280","bind#bind()":"static bind(this, thisArg, ...argArray): any\nFor a given function, creates a bound function that has the same body as the original function.\r\nThe this object of the bound function is associated with the specified object, and has the specified initial parameters.","parameters-3#Parameters":"• this: Function• thisArg: anyAn object to which the this keyword can refer inside the new function.• ...argArray: any[]A list of arguments to be passed to the new function.","returns-3#Returns":"any","inherited-from-11#Inherited from":"IntersectionType( PickType(UserDto, ['username', 'email'] as const), PartialType(PickType(UserDto, ['active'] as const)), PartialType(UserPasswordDto), ).bind","source-11#Source":"node_modules/typescript/lib/lib.es5.d.ts:295","call#call()":"static call(this, thisArg, ...argArray): any\nCalls a method of an object, substituting another object for the current object.","parameters-4#Parameters":"• this: Function• thisArg: anyThe object to be used as the current object.• ...argArray: any[]A list of arguments to be passed to the method.","returns-4#Returns":"any","inherited-from-12#Inherited from":"IntersectionType( PickType(UserDto, ['username', 'email'] as const), PartialType(PickType(UserDto, ['active'] as const)), PartialType(UserPasswordDto), ).call","source-12#Source":"node_modules/typescript/lib/lib.es5.d.ts:287","tostring#toString()":"static toString(): string\nReturns a string representation of a function.","returns-5#Returns":"string","inherited-from-13#Inherited from":"IntersectionType( PickType(UserDto, ['username', 'email'] as const), PartialType(PickType(UserDto, ['active'] as const)), PartialType(UserPasswordDto), ).toString","source-13#Source":"node_modules/typescript/lib/lib.es5.d.ts:298"}},"/reference/rockets/nestjs-user/classes/UserCreateManyDto":{"title":"Class: UserCreateManyDto","data":{"":"@concepta/nestjs-user • DocsPackages Example / @concepta/nestjs-user / UserCreateManyDtoUser DTO","extends#Extends":"CrudCreateManyDto<UserCreatableInterface>","constructors#Constructors":"","new-usercreatemanydto#new UserCreateManyDto()":"new UserCreateManyDto(): UserCreateManyDto","returns#Returns":"UserCreateManyDto","inherited-from#Inherited from":"CrudCreateManyDto.constructor","properties#Properties":"","bulk#bulk":"bulk: UserCreateDto[] = []","overrides#Overrides":"CrudCreateManyDto.bulk","source#Source":".tmp/repos/rockets/packages/nestjs-user/src/dto/user-create-many.dto.ts:22"}},"/reference/rockets/nestjs-user/classes/UserDto":{"title":"Class: UserDto","data":{"":"@concepta/nestjs-user • DocsPackages Example / @concepta/nestjs-user / UserDtoUser DTO","extends#Extends":"CommonEntityDto","implements#Implements":"UserInterface","constructors#Constructors":"","new-userdto#new UserDto()":"new UserDto(): UserDto","returns#Returns":"UserDto","inherited-from#Inherited from":"CommonEntityDto.constructor","properties#Properties":"","active#active":"active: boolean\nActive","implementation-of#Implementation of":"UserInterface.active","source#Source":".tmp/repos/rockets/packages/nestjs-user/src/dto/user.dto.ts:43","datecreated#dateCreated":"dateCreated: Date\nDate created","implementation-of-1#Implementation of":"UserInterface.dateCreated","inherited-from-1#Inherited from":"CommonEntityDto.dateCreated","source-1#Source":".tmp/repos/rockets/packages/nestjs-common/dist/audit/dto/audit.dto.d.ts:3","datedeleted#dateDeleted":"dateDeleted: AuditDateDeleted\nDate deleted","implementation-of-2#Implementation of":"UserInterface.dateDeleted","inherited-from-2#Inherited from":"CommonEntityDto.dateDeleted","source-2#Source":".tmp/repos/rockets/packages/nestjs-common/dist/audit/dto/audit.dto.d.ts:5","dateupdated#dateUpdated":"dateUpdated: Date\nDate updated","implementation-of-3#Implementation of":"UserInterface.dateUpdated","inherited-from-3#Inherited from":"CommonEntityDto.dateUpdated","source-3#Source":".tmp/repos/rockets/packages/nestjs-common/dist/audit/dto/audit.dto.d.ts:4","email#email":"email: string = ''\nEmail","implementation-of-4#Implementation of":"UserInterface.email","source-4#Source":".tmp/repos/rockets/packages/nestjs-user/src/dto/user.dto.ts:21","id#id":"id: string","implementation-of-5#Implementation of":"UserInterface.id","inherited-from-4#Inherited from":"CommonEntityDto.id","source-5#Source":".tmp/repos/rockets/packages/nestjs-common/dist/common/common-entity.dto.d.ts:4","username#username":"username: string = ''\nUsername","implementation-of-6#Implementation of":"UserInterface.username","source-6#Source":".tmp/repos/rockets/packages/nestjs-user/src/dto/user.dto.ts:32","version#version":"version: number\nVersion","implementation-of-7#Implementation of":"UserInterface.version","inherited-from-5#Inherited from":"CommonEntityDto.version","source-7#Source":".tmp/repos/rockets/packages/nestjs-common/dist/audit/dto/audit.dto.d.ts:6"}},"/reference/rockets/nestjs-user/classes/UserException":{"title":"Class: UserException","data":{"":"@concepta/nestjs-user • DocsPackages Example / @concepta/nestjs-user / UserExceptionGeneric user exception.","extends#Extends":"Error","implements#Implements":"ExceptionInterface","constructors#Constructors":"","new-userexception#new UserException()":"new UserException(message, originalError?): UserException","parameters#Parameters":"• message: string• originalError?: unknown","returns#Returns":"UserException","overrides#Overrides":"Error.constructor","source#Source":".tmp/repos/rockets/packages/nestjs-user/src/exceptions/user-exception.ts:14","properties#Properties":"","context#context":"context: object\nAdditional context","message#message":"message: string","originalerror#originalError":"originalError: Error","implementation-of#Implementation of":"ExceptionInterface.context","source-1#Source":".tmp/repos/rockets/packages/nestjs-user/src/exceptions/user-exception.ts:9","errorcode#errorCode":"errorCode: string = 'USER_ERROR'\nThe error code.","implementation-of-1#Implementation of":"ExceptionInterface.errorCode","source-2#Source":".tmp/repos/rockets/packages/nestjs-user/src/exceptions/user-exception.ts:7","message-1#message":"message: string","implementation-of-2#Implementation of":"ExceptionInterface.message","inherited-from#Inherited from":"Error.message","source-3#Source":"node_modules/typescript/lib/lib.es5.d.ts:1054","name#name":"name: string","implementation-of-3#Implementation of":"ExceptionInterface.name","inherited-from-1#Inherited from":"Error.name","source-4#Source":"node_modules/typescript/lib/lib.es5.d.ts:1053","stack#stack?":"optional stack: string","implementation-of-4#Implementation of":"ExceptionInterface.stack","inherited-from-2#Inherited from":"Error.stack","source-5#Source":"node_modules/typescript/lib/lib.es5.d.ts:1055","preparestacktrace#prepareStackTrace()?":"static optional prepareStackTrace: (err, stackTraces) => any\nOptional override for formatting stack traces","see#See":"https://v8.dev/docs/stack-trace-api#customizing-stack-traces","parameters-1#Parameters":"• err: Error• stackTraces: CallSite[]","returns-1#Returns":"any","inherited-from-3#Inherited from":"Error.prepareStackTrace","source-6#Source":".tmp/repos/rockets/node_modules/@types/node/globals.d.ts:11","stacktracelimit#stackTraceLimit":"static stackTraceLimit: number","inherited-from-4#Inherited from":"Error.stackTraceLimit","source-7#Source":".tmp/repos/rockets/node_modules/@types/node/globals.d.ts:13","methods#Methods":"","capturestacktrace#captureStackTrace()":"static captureStackTrace(targetObject, constructorOpt?): void\nCreate .stack property on a target object","parameters-2#Parameters":"• targetObject: object• constructorOpt?: Function","returns-2#Returns":"void","inherited-from-5#Inherited from":"Error.captureStackTrace","source-8#Source":".tmp/repos/rockets/node_modules/@types/node/globals.d.ts:4"}},"/reference/rockets/nestjs-user/classes/UserCrudService":{"title":"Class: UserCrudService","data":{"":"@concepta/nestjs-user • DocsPackages Example / @concepta/nestjs-user / UserCrudServiceUser CRUD service","extends#Extends":"TypeOrmCrudService<UserEntityInterface>","constructors#Constructors":"","new-usercrudservice#new UserCrudService()":"new UserCrudService(userRepo): UserCrudService\nConstructor","parameters#Parameters":"• userRepo: Repository<UserEntityInterface>instance of the user repository.","returns#Returns":"UserCrudService","overrides#Overrides":"TypeOrmCrudService.constructor","source#Source":".tmp/repos/rockets/packages/nestjs-user/src/services/user-crud.service.ts:18","properties#Properties":"","alias#alias":"protected readonly alias: string","inherited-from#Inherited from":"TypeOrmCrudService.alias","source-1#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:28","count#count()":"readonly count: (options?) => Promise<number>\nCounts entities that match given options.\nUseful for pagination.","parameters-1#Parameters":"• options?: FindManyOptions<UserEntityInterface>","returns-1#Returns":"Promise<number>","inherited-from-1#Inherited from":"TypeOrmCrudService.count","source-2#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:26","crudqueryhelper#crudQueryHelper":"protected readonly crudQueryHelper: CrudQueryHelper","inherited-from-2#Inherited from":"TypeOrmCrudService.crudQueryHelper","source-3#Source":".tmp/repos/rockets/packages/nestjs-crud/dist/services/typeorm-crud.service.d.ts:12","dbname#dbName":"protected dbName: \"mysql\" | \"mariadb\" | \"postgres\" | \"cockroachdb\" | \"sqlite\" | \"mssql\" | \"sap\" | \"oracle\" | \"cordova\" | \"nativescript\" | \"react-native\" | \"sqljs\" | \"mongodb\" | \"aurora-mysql\" | \"aurora-postgres\" | \"expo\" | \"better-sqlite3\" | \"capacitor\" | \"spanner\"","inherited-from-3#Inherited from":"TypeOrmCrudService.dbName","source-4#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:16","entitycolumns#entityColumns":"protected entityColumns: string[]","inherited-from-4#Inherited from":"TypeOrmCrudService.entityColumns","source-5#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:17","entitycolumnshash#entityColumnsHash":"protected entityColumnsHash: ObjectLiteral","inherited-from-5#Inherited from":"TypeOrmCrudService.entityColumnsHash","source-6#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:20","entityhasdeletecolumn#entityHasDeleteColumn":"protected entityHasDeleteColumn: boolean","inherited-from-6#Inherited from":"TypeOrmCrudService.entityHasDeleteColumn","source-7#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:19","entityprimarycolumns#entityPrimaryColumns":"protected entityPrimaryColumns: string[]","inherited-from-7#Inherited from":"TypeOrmCrudService.entityPrimaryColumns","source-8#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:18","entityrelationshash#entityRelationsHash":"protected entityRelationsHash: Map<string, IAllowedRelation>","inherited-from-8#Inherited from":"TypeOrmCrudService.entityRelationsHash","source-9#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:21","entitytype#entityType":"protected readonly entityType: ClassType<UserEntityInterface>","inherited-from-9#Inherited from":"TypeOrmCrudService.entityType","source-10#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:27","find#find()":"readonly find: (options?) => Promise<UserEntityInterface[]>\nFinds entities that match given find options.","parameters-2#Parameters":"• options?: FindManyOptions<UserEntityInterface>","returns-2#Returns":"Promise<UserEntityInterface[]>","inherited-from-10#Inherited from":"TypeOrmCrudService.find","source-11#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:25","findone#findOne()":"readonly findOne: (options) => Promise<null | UserEntityInterface>\nFinds first entity by a given find options.\nIf entity was not found in the database - returns null.","parameters-3#Parameters":"• options: FindOneOptions<UserEntityInterface>","returns-3#Returns":"Promise<null | UserEntityInterface>","inherited-from-11#Inherited from":"TypeOrmCrudService.findOne","source-12#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:24","repo#repo":"protected repo: Repository<UserEntityInterface>","inherited-from-12#Inherited from":"TypeOrmCrudService.repo","source-13#Source":".tmp/repos/rockets/packages/nestjs-crud/dist/services/typeorm-crud.service.d.ts:10","sqlinjectionregex#sqlInjectionRegEx":"protected sqlInjectionRegEx: RegExp[]","inherited-from-13#Inherited from":"TypeOrmCrudService.sqlInjectionRegEx","source-14#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:22","userrepo#userRepo":"protected readonly userRepo: Repository<UserEntityInterface>\ninstance of the user repository.","source-15#Source":".tmp/repos/rockets/packages/nestjs-user/src/services/user-crud.service.ts:20","methods#Methods":"","builderaddbrackets#builderAddBrackets()":"protected builderAddBrackets(builder, condition, brackets): void","parameters-4#Parameters":"• builder: SelectQueryBuilder<UserEntityInterface>• condition: SConditionKey• brackets: Brackets","returns-4#Returns":"void","inherited-from-14#Inherited from":"TypeOrmCrudService.builderAddBrackets","source-16#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:53","buildersetwhere#builderSetWhere()":"protected builderSetWhere(builder, condition, field, value, operator?): void","parameters-5#Parameters":"• builder: SelectQueryBuilder<UserEntityInterface>• condition: SConditionKey• field: string• value: any• operator?: ComparisonOperator","returns-5#Returns":"void","inherited-from-15#Inherited from":"TypeOrmCrudService.builderSetWhere","source-17#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:54","createbuilder#createBuilder()":"createBuilder(parsed, options, many?, withDeleted?): Promise<SelectQueryBuilder<UserEntityInterface>>","parameters-6#Parameters":"• parsed: ParsedRequestParams• options: CrudRequestOptions• many?: boolean• withDeleted?: boolean","returns-6#Returns":"Promise<SelectQueryBuilder<UserEntityInterface>>","inherited-from-16#Inherited from":"TypeOrmCrudService.createBuilder","source-18#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:38","createmany#createMany()":"createMany(req, dto, queryOptions?): Promise<UserEntityInterface[]>","parameters-7#Parameters":"• req: CrudRequest• dto: CreateManyDto<DeepPartial<UserEntityInterface>>• queryOptions?: CrudQueryOptionsInterface","returns-7#Returns":"Promise<UserEntityInterface[]>","inherited-from-17#Inherited from":"TypeOrmCrudService.createMany","source-19#Source":".tmp/repos/rockets/packages/nestjs-crud/dist/services/typeorm-crud.service.d.ts:15","createone#createOne()":"createOne(req, dto, queryOptions?): Promise<UserEntityInterface>","parameters-8#Parameters":"• req: CrudRequest• dto: DeepPartial<UserEntityInterface>• queryOptions?: CrudQueryOptionsInterface","returns-8#Returns":"Promise<UserEntityInterface>","inherited-from-18#Inherited from":"TypeOrmCrudService.createOne","source-20#Source":".tmp/repos/rockets/packages/nestjs-crud/dist/services/typeorm-crud.service.d.ts:16","createpageinfo#createPageInfo()":"createPageInfo(data, total, limit, offset): GetManyDefaultResponse<UserEntityInterface>","parameters-9#Parameters":"• data: UserEntityInterface[]• total: number• limit: number• offset: number","returns-9#Returns":"GetManyDefaultResponse<UserEntityInterface>","inherited-from-19#Inherited from":"TypeOrmCrudService.createPageInfo","source-21#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud/lib/services/crud-service.abstract.d.ts:15","decidepagination#decidePagination()":"decidePagination(parsed, options): boolean","parameters-10#Parameters":"• parsed: ParsedRequestParams• options: CrudRequestOptions","returns-10#Returns":"boolean","inherited-from-20#Inherited from":"TypeOrmCrudService.decidePagination","source-22#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud/lib/services/crud-service.abstract.d.ts:16","deleteone#deleteOne()":"deleteOne(req, queryOptions?): Promise<void | UserEntityInterface>","parameters-11#Parameters":"• req: CrudRequest• queryOptions?: CrudQueryOptionsInterface","returns-11#Returns":"Promise<void | UserEntityInterface>","inherited-from-21#Inherited from":"TypeOrmCrudService.deleteOne","source-23#Source":".tmp/repos/rockets/packages/nestjs-crud/dist/services/typeorm-crud.service.d.ts:19","dogetmany#doGetMany()":"protected doGetMany(builder, query, options): Promise<UserEntityInterface[] | GetManyDefaultResponse<UserEntityInterface>>","parameters-12#Parameters":"• builder: SelectQueryBuilder<UserEntityInterface>• query: ParsedRequestParams• options: CrudRequestOptions","returns-12#Returns":"Promise<UserEntityInterface[] | GetManyDefaultResponse<UserEntityInterface>>","inherited-from-22#Inherited from":"TypeOrmCrudService.doGetMany","source-24#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:39","getallowedcolumns#getAllowedColumns()":"protected getAllowedColumns(columns, options): string[]","parameters-13#Parameters":"• columns: string[]• options: QueryOptions","returns-13#Returns":"string[]","inherited-from-23#Inherited from":"TypeOrmCrudService.getAllowedColumns","source-25#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:43","getentitycolumns#getEntityColumns()":"protected getEntityColumns(entityMetadata): object","parameters-14#Parameters":"• entityMetadata: EntityMetadata","returns-14#Returns":"object","columns#columns":"columns: string[]","primarycolumns#primaryColumns":"primaryColumns: string[]","inherited-from-24#Inherited from":"TypeOrmCrudService.getEntityColumns","source-26#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:44","getfieldwithalias#getFieldWithAlias()":"protected getFieldWithAlias(field, sort?): string","parameters-15#Parameters":"• field: string• sort?: boolean","returns-15#Returns":"string","inherited-from-25#Inherited from":"TypeOrmCrudService.getFieldWithAlias","source-27#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:58","getmany#getMany()":"getMany(req, queryOptions?): Promise<UserEntityInterface[] | CrudResultPaginatedInterface<UserEntityInterface>>","parameters-16#Parameters":"• req: CrudRequest• queryOptions?: CrudQueryOptionsInterface","returns-16#Returns":"Promise<UserEntityInterface[] | CrudResultPaginatedInterface<UserEntityInterface>>","inherited-from-26#Inherited from":"TypeOrmCrudService.getMany","source-28#Source":".tmp/repos/rockets/packages/nestjs-crud/dist/services/typeorm-crud.service.d.ts:13","getone#getOne()":"getOne(req, queryOptions?): Promise<UserEntityInterface>","parameters-17#Parameters":"• req: CrudRequest• queryOptions?: CrudQueryOptionsInterface","returns-17#Returns":"Promise<UserEntityInterface>","inherited-from-27#Inherited from":"TypeOrmCrudService.getOne","source-29#Source":".tmp/repos/rockets/packages/nestjs-crud/dist/services/typeorm-crud.service.d.ts:14","getoneorfail#getOneOrFail()":"protected getOneOrFail(req, shallow?, withDeleted?): Promise<UserEntityInterface>","parameters-18#Parameters":"• req: CrudRequest• shallow?: boolean• withDeleted?: boolean","returns-18#Returns":"Promise<UserEntityInterface>","inherited-from-28#Inherited from":"TypeOrmCrudService.getOneOrFail","source-30#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:41","getparamfilters#getParamFilters()":"getParamFilters(parsed): ObjectLiteral","parameters-19#Parameters":"• parsed: ParsedRequestParams","returns-19#Returns":"ObjectLiteral","inherited-from-29#Inherited from":"TypeOrmCrudService.getParamFilters","source-31#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:37","getprimaryparams#getPrimaryParams()":"getPrimaryParams(options): string[]","parameters-20#Parameters":"• options: CrudRequestOptions","returns-20#Returns":"string[]","inherited-from-30#Inherited from":"TypeOrmCrudService.getPrimaryParams","source-32#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud/lib/services/crud-service.abstract.d.ts:19","getrelationmetadata#getRelationMetadata()":"protected getRelationMetadata(field, options): IAllowedRelation","parameters-21#Parameters":"• field: string• options: JoinOption","returns-21#Returns":"IAllowedRelation","inherited-from-31#Inherited from":"TypeOrmCrudService.getRelationMetadata","source-33#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:48","getselect#getSelect()":"protected getSelect(query, options): string[]","parameters-22#Parameters":"• query: ParsedRequestParams• options: QueryOptions","returns-22#Returns":"string[]","inherited-from-32#Inherited from":"TypeOrmCrudService.getSelect","source-34#Source":".tmp/repos/rockets/packages/nestjs-crud/dist/services/typeorm-crud.service.d.ts:23","getskip#getSkip()":"getSkip(query, take): null | number","parameters-23#Parameters":"• query: ParsedRequestParams• take: number","returns-23#Returns":"null | number","inherited-from-33#Inherited from":"TypeOrmCrudService.getSkip","source-35#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud/lib/services/crud-service.abstract.d.ts:18","getsort#getSort()":"protected getSort(query, options): ObjectLiteral","parameters-24#Parameters":"• query: ParsedRequestParams• options: QueryOptions","returns-24#Returns":"ObjectLiteral","inherited-from-34#Inherited from":"TypeOrmCrudService.getSort","source-36#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:57","gettake#getTake()":"getTake(query, options): null | number","parameters-25#Parameters":"• query: ParsedRequestParams• options: QueryOptions","returns-25#Returns":"null | number","inherited-from-35#Inherited from":"TypeOrmCrudService.getTake","source-37#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud/lib/services/crud-service.abstract.d.ts:17","mapoperatorstoquery#mapOperatorsToQuery()":"protected mapOperatorsToQuery(cond, param): object","parameters-26#Parameters":"• cond: QueryFilter• param: any","returns-26#Returns":"object","params#params":"params: ObjectLiteral","str#str":"str: string","inherited-from-36#Inherited from":"TypeOrmCrudService.mapOperatorsToQuery","source-38#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:60","mapsort#mapSort()":"protected mapSort(sort): ObjectLiteral","parameters-27#Parameters":"• sort: QuerySort[]","returns-27#Returns":"ObjectLiteral","inherited-from-37#Inherited from":"TypeOrmCrudService.mapSort","source-39#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:59","oninitmapentitycolumns#onInitMapEntityColumns()":"protected onInitMapEntityColumns(): void","returns-28#Returns":"void","inherited-from-38#Inherited from":"TypeOrmCrudService.onInitMapEntityColumns","source-40#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:40","prepareentitybeforesave#prepareEntityBeforeSave()":"protected prepareEntityBeforeSave(dto, parsed): UserEntityInterface","parameters-28#Parameters":"• dto: DeepPartial<UserEntityInterface>• parsed: ParsedRequestParams","returns-29#Returns":"UserEntityInterface","inherited-from-39#Inherited from":"TypeOrmCrudService.prepareEntityBeforeSave","source-41#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:42","recoverone#recoverOne()":"recoverOne(req, queryOptions?): Promise<UserEntityInterface>","parameters-29#Parameters":"• req: CrudRequest• queryOptions?: CrudQueryOptionsInterface","returns-30#Returns":"Promise<UserEntityInterface>","inherited-from-40#Inherited from":"TypeOrmCrudService.recoverOne","source-42#Source":".tmp/repos/rockets/packages/nestjs-crud/dist/services/typeorm-crud.service.d.ts:20","replaceone#replaceOne()":"replaceOne(req, dto, queryOptions?): Promise<UserEntityInterface>","parameters-30#Parameters":"• req: CrudRequest• dto: DeepPartial<UserEntityInterface>• queryOptions?: CrudQueryOptionsInterface","returns-31#Returns":"Promise<UserEntityInterface>","inherited-from-41#Inherited from":"TypeOrmCrudService.replaceOne","source-43#Source":".tmp/repos/rockets/packages/nestjs-crud/dist/services/typeorm-crud.service.d.ts:18","setandwhere#setAndWhere()":"protected setAndWhere(cond, i, builder): void","parameters-31#Parameters":"• cond: QueryFilter• i: any• builder: SelectQueryBuilder<UserEntityInterface> | WhereExpression","returns-32#Returns":"void","inherited-from-42#Inherited from":"TypeOrmCrudService.setAndWhere","source-44#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:50","setjoin#setJoin()":"protected setJoin(cond, joinOptions, builder): boolean","parameters-32#Parameters":"• cond: QueryJoin• joinOptions: JoinOptions• builder: SelectQueryBuilder<UserEntityInterface>","returns-33#Returns":"boolean","inherited-from-43#Inherited from":"TypeOrmCrudService.setJoin","source-45#Source":".tmp/repos/rockets/packages/nestjs-crud/dist/services/typeorm-crud.service.d.ts:22","setorwhere#setOrWhere()":"protected setOrWhere(cond, i, builder): void","parameters-33#Parameters":"• cond: QueryFilter• i: any• builder: SelectQueryBuilder<UserEntityInterface> | WhereExpression","returns-34#Returns":"void","inherited-from-44#Inherited from":"TypeOrmCrudService.setOrWhere","source-46#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:51","setsearchcondition#setSearchCondition()":"protected setSearchCondition(builder, search, condition?): void","parameters-34#Parameters":"• builder: SelectQueryBuilder<UserEntityInterface>• search: SCondition• condition?: SConditionKey","returns-35#Returns":"void","inherited-from-45#Inherited from":"TypeOrmCrudService.setSearchCondition","source-47#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:52","setsearchfieldobjectcondition#setSearchFieldObjectCondition()":"protected setSearchFieldObjectCondition(builder, condition, field, object): void","parameters-35#Parameters":"• builder: SelectQueryBuilder<UserEntityInterface>• condition: SConditionKey• field: string• object: any","returns-36#Returns":"void","inherited-from-46#Inherited from":"TypeOrmCrudService.setSearchFieldObjectCondition","source-48#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud-typeorm/lib/typeorm-crud.service.d.ts:55","throwbadrequestexception#throwBadRequestException()":"throwBadRequestException(msg?): BadRequestException","parameters-36#Parameters":"• msg?: any","returns-37#Returns":"BadRequestException","inherited-from-47#Inherited from":"TypeOrmCrudService.throwBadRequestException","source-49#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud/lib/services/crud-service.abstract.d.ts:13","thrownotfoundexception#throwNotFoundException()":"throwNotFoundException(name): NotFoundException","parameters-37#Parameters":"• name: string","returns-38#Returns":"NotFoundException","inherited-from-48#Inherited from":"TypeOrmCrudService.throwNotFoundException","source-50#Source":".tmp/repos/rockets/node_modules/@nestjsx/crud/lib/services/crud-service.abstract.d.ts:14","transaction#transaction()":"transaction(options?): TransactionProxy","parameters-38#Parameters":"• options?: SafeTransactionOptionsInterface","returns-39#Returns":"TransactionProxy","inherited-from-49#Inherited from":"TypeOrmCrudService.transaction","source-51#Source":".tmp/repos/rockets/packages/nestjs-crud/dist/services/typeorm-crud.service.d.ts:21","updateone#updateOne()":"updateOne(req, dto, queryOptions?): Promise<UserEntityInterface>","parameters-39#Parameters":"• req: CrudRequest• dto: DeepPartial<UserEntityInterface>• queryOptions?: CrudQueryOptionsInterface","returns-40#Returns":"Promise<UserEntityInterface>","inherited-from-50#Inherited from":"TypeOrmCrudService.updateOne","source-52#Source":".tmp/repos/rockets/packages/nestjs-crud/dist/services/typeorm-crud.service.d.ts:17"}},"/reference/rockets/nestjs-user/classes/UserLookupService":{"title":"Class: UserLookupService","data":{"":"@concepta/nestjs-user • DocsPackages Example / @concepta/nestjs-user / UserLookupServiceUser lookup service","extends#Extends":"LookupService<UserEntityInterface>","implements#Implements":"UserLookupServiceInterface","constructors#Constructors":"","new-userlookupservice#new UserLookupService()":"new UserLookupService(repo): UserLookupService\nConstructor","parameters#Parameters":"• repo: Repository<UserEntityInterface>instance of the user repo","returns#Returns":"UserLookupService","overrides#Overrides":"LookupService.constructor","source#Source":".tmp/repos/rockets/packages/nestjs-user/src/services/user-lookup.service.ts:28","accessors#Accessors":"","metadata#metadata":"get protected metadata(): EntityMetadata","returns-1#Returns":"EntityMetadata","source-1#Source":".tmp/repos/rockets/packages/typeorm-common/dist/services/base.service.d.ts:13","methods#Methods":"","byemail#byEmail()":"byEmail(email, queryOptions?): Promise<null | UserEntityInterface>\nGet user for the given email.","parameters-1#Parameters":"• email: stringthe email• queryOptions?: QueryOptionsInterface","returns-2#Returns":"Promise<null | UserEntityInterface>","implementation-of#Implementation of":"UserLookupServiceInterface.byEmail","source-2#Source":".tmp/repos/rockets/packages/nestjs-user/src/services/user-lookup.service.ts:40","byid#byId()":"byId(id, queryOptions?): Promise<null | UserEntityInterface>\nGet entity for the given id.","parameters-2#Parameters":"• id: stringthe id• queryOptions?: QueryOptionsInterface","returns-3#Returns":"Promise<null | UserEntityInterface>","implementation-of-1#Implementation of":"UserLookupServiceInterface.byId","inherited-from#Inherited from":"LookupService.byId","source-3#Source":".tmp/repos/rockets/packages/typeorm-common/dist/services/lookup.service.d.ts:7","bysubject#bySubject()":"bySubject(subject, queryOptions?): Promise<null | UserEntityInterface>\nGet user for the given subject.","parameters-3#Parameters":"• subject: stringthe subject• queryOptions?: QueryOptionsInterface","returns-4#Returns":"Promise<null | UserEntityInterface>","implementation-of-2#Implementation of":"UserLookupServiceInterface.bySubject","source-4#Source":".tmp/repos/rockets/packages/nestjs-user/src/services/user-lookup.service.ts:52","byusername#byUsername()":"byUsername(username, queryOptions?): Promise<null | UserEntityInterface>\nGet user for the given username.","parameters-4#Parameters":"• username: stringthe username• queryOptions?: QueryOptionsInterface","returns-5#Returns":"Promise<null | UserEntityInterface>","implementation-of-3#Implementation of":"UserLookupServiceInterface.byUsername","source-5#Source":".tmp/repos/rockets/packages/nestjs-user/src/services/user-lookup.service.ts:64","findone#findOne()":"findOne(findOneOptions, queryOptions?): Promise<null | UserEntityInterface>\nFind One wrapper.","parameters-5#Parameters":"• findOneOptions: FindOneOptions<UserEntityInterface>Find options• queryOptions?: QueryOptionsInterface","returns-6#Returns":"Promise<null | UserEntityInterface>","inherited-from-1#Inherited from":"LookupService.findOne","source-6#Source":".tmp/repos/rockets/packages/typeorm-common/dist/services/base.service.d.ts:10","repository#repository()":"repository(queryOptions?): Repository<UserEntityInterface>\nReturn the correct repository instance.","parameters-6#Parameters":"• queryOptions?: QueryOptionsInterfaceOptions","returns-7#Returns":"Repository<UserEntityInterface>","inherited-from-2#Inherited from":"LookupService.repository","source-7#Source":".tmp/repos/rockets/packages/typeorm-common/dist/services/base.service.d.ts:11","transaction#transaction()":"transaction(options?): TransactionProxy\nReturn a transaction instance.","parameters-7#Parameters":"• options?: SafeTransactionOptionsInterfaceOptions","returns-8#Returns":"TransactionProxy","inherited-from-3#Inherited from":"LookupService.transaction","source-8#Source":".tmp/repos/rockets/packages/typeorm-common/dist/services/base.service.d.ts:12"}},"/reference/rockets/nestjs-user/classes/UserModule":{"title":"Class: UserModule","data":{"":"@concepta/nestjs-user • DocsPackages Example / @concepta/nestjs-user / UserModuleUser Module","extends#Extends":"UserModuleClass","constructors#Constructors":"","new-usermodule#new UserModule()":"new UserModule(): UserModule","returns#Returns":"UserModule","inherited-from#Inherited from":"UserModuleClass.constructor","source#Source":".tmp/repos/rockets/node_modules/@nestjs/common/module-utils/interfaces/configurable-module-cls.interface.d.ts:12","methods#Methods":"","forfeature#forFeature()":"static forFeature(options): DynamicModule","parameters#Parameters":"• options: UserOptions","returns-1#Returns":"DynamicModule","source-1#Source":".tmp/repos/rockets/packages/nestjs-user/src/user.module.ts:34","forroot#forRoot()":"static forRoot(options): DynamicModule","parameters-1#Parameters":"• options: UserOptions","returns-2#Returns":"DynamicModule","source-2#Source":".tmp/repos/rockets/packages/nestjs-user/src/user.module.ts:26","forrootasync#forRootAsync()":"static forRootAsync(options): DynamicModule","parameters-2#Parameters":"• options: UserAsyncOptions","returns-3#Returns":"DynamicModule","source-3#Source":".tmp/repos/rockets/packages/nestjs-user/src/user.module.ts:30","register#register()":"static register(options): DynamicModule","parameters-3#Parameters":"• options: UserOptions","returns-4#Returns":"DynamicModule","overrides#Overrides":"UserModuleClass.register","source-4#Source":".tmp/repos/rockets/packages/nestjs-user/src/user.module.ts:18","registerasync#registerAsync()":"static registerAsync(options): DynamicModule","parameters-4#Parameters":"• options: UserAsyncOptions","returns-5#Returns":"DynamicModule","overrides-1#Overrides":"UserModuleClass.registerAsync","source-5#Source":".tmp/repos/rockets/packages/nestjs-user/src/user.module.ts:22"}},"/reference/rockets/nestjs-user/classes/UserMutateService":{"title":"Class: UserMutateService","data":{"":"@concepta/nestjs-user • DocsPackages Example / @concepta/nestjs-user / UserMutateServiceUser mutate service","extends#Extends":"MutateService<UserEntityInterface, UserCreatableInterface, UserUpdatableInterface>","implements#Implements":"UserMutateServiceInterface","constructors#Constructors":"","new-usermutateservice#new UserMutateService()":"new UserMutateService(repo, userPasswordService): UserMutateService\nConstructor","parameters#Parameters":"• repo: Repository<UserEntityInterface>instance of the user repo• userPasswordService: UserPasswordService","returns#Returns":"UserMutateService","overrides#Overrides":"MutateService.constructor","source#Source":".tmp/repos/rockets/packages/nestjs-user/src/services/user-mutate.service.ts:39","properties#Properties":"","createdto#createDto":"protected createDto: typeof UserCreateDto = UserCreateDto","overrides-1#Overrides":"MutateService.createDto","source-1#Source":".tmp/repos/rockets/packages/nestjs-user/src/services/user-mutate.service.ts:30","updatedto#updateDto":"protected updateDto: typeof UserUpdateDto = UserUpdateDto","overrides-2#Overrides":"MutateService.updateDto","source-2#Source":".tmp/repos/rockets/packages/nestjs-user/src/services/user-mutate.service.ts:31","userpasswordservice#userPasswordService":"protected readonly userPasswordService: UserPasswordService","source-3#Source":".tmp/repos/rockets/packages/nestjs-user/src/services/user-mutate.service.ts:42","accessors#Accessors":"","metadata#metadata":"get protected metadata(): EntityMetadata","returns-1#Returns":"EntityMetadata","source-4#Source":".tmp/repos/rockets/packages/typeorm-common/dist/services/base.service.d.ts:13","methods#Methods":"","create#create()":"create(data, queryOptions?): Promise<UserEntityInterface>\nCreate one","parameters-1#Parameters":"• data: UserCreatableInterfacethe reference to create• queryOptions?: QueryOptionsInterface","returns-2#Returns":"Promise<UserEntityInterface>the created reference","implementation-of#Implementation of":"UserMutateServiceInterface.create","inherited-from#Inherited from":"MutateService.create","source-5#Source":".tmp/repos/rockets/packages/typeorm-common/dist/services/mutate.service.d.ts:9","findbyid#findById()":"protected findById(id, queryOptions?): Promise<UserEntityInterface>","parameters-2#Parameters":"• id: string• queryOptions?: QueryOptionsInterface","returns-3#Returns":"Promise<UserEntityInterface>","inherited-from-1#Inherited from":"MutateService.findById","source-6#Source":".tmp/repos/rockets/packages/typeorm-common/dist/services/mutate.service.d.ts:17","findone#findOne()":"findOne(findOneOptions, queryOptions?): Promise<null | UserEntityInterface>\nFind One wrapper.","parameters-3#Parameters":"• findOneOptions: FindOneOptions<UserEntityInterface>Find options• queryOptions?: QueryOptionsInterface","returns-4#Returns":"Promise<null | UserEntityInterface>","inherited-from-2#Inherited from":"MutateService.findOne","source-7#Source":".tmp/repos/rockets/packages/typeorm-common/dist/services/base.service.d.ts:10","remove#remove()":"remove(data, queryOptions?): Promise<UserEntityInterface>\nRemove one","parameters-4#Parameters":"• data: DeepPartial<UserEntityInterface> & ReferenceIdInterface<string>the reference data to remove• queryOptions?: QueryOptionsInterfacequery options","returns-5#Returns":"Promise<UserEntityInterface>the removed reference","implementation-of-1#Implementation of":"UserMutateServiceInterface.remove","inherited-from-3#Inherited from":"MutateService.remove","source-8#Source":".tmp/repos/rockets/packages/typeorm-common/dist/services/mutate.service.d.ts:12","replace#replace()":"replace(data, queryOptions?): Promise<UserEntityInterface>\nReplace one","parameters-5#Parameters":"• data: UserCreatableInterface & ReferenceIdInterface<string>the reference data to replace• queryOptions?: QueryOptionsInterface","returns-6#Returns":"Promise<UserEntityInterface>the replaced reference","implementation-of-2#Implementation of":"UserMutateServiceInterface.replace","inherited-from-4#Inherited from":"MutateService.replace","source-9#Source":".tmp/repos/rockets/packages/typeorm-common/dist/services/mutate.service.d.ts:11","repository#repository()":"repository(queryOptions?): Repository<UserEntityInterface>\nReturn the correct repository instance.","parameters-6#Parameters":"• queryOptions?: QueryOptionsInterfaceOptions","returns-7#Returns":"Repository<UserEntityInterface>","inherited-from-5#Inherited from":"MutateService.repository","source-10#Source":".tmp/repos/rockets/packages/typeorm-common/dist/services/base.service.d.ts:11","transaction#transaction()":"transaction(options?): TransactionProxy\nReturn a transaction instance.","parameters-7#Parameters":"• options?: SafeTransactionOptionsInterfaceOptions","returns-8#Returns":"TransactionProxy","inherited-from-6#Inherited from":"MutateService.transaction","source-11#Source":".tmp/repos/rockets/packages/typeorm-common/dist/services/base.service.d.ts:12","transform#transform()":"protected transform<T>(user): Promise<DeepPartial<UserEntityInterface>>","type-parameters#Type parameters":"• T extends DeepPartial<UserEntityInterface>","parameters-8#Parameters":"• user: T | T & PasswordPlainInterface","returns-9#Returns":"Promise<DeepPartial<UserEntityInterface>>","overrides-3#Overrides":"MutateService.transform","source-12#Source":".tmp/repos/rockets/packages/nestjs-user/src/services/user-mutate.service.ts:47","update#update()":"update(data, queryOptions?): Promise<UserEntityInterface>\nUpdate one","parameters-9#Parameters":"• data: UserUpdatableInterface & ReferenceIdInterface<string>the reference data to update• queryOptions?: QueryOptionsInterface","returns-10#Returns":"Promise<UserEntityInterface>the updated reference","implementation-of-3#Implementation of":"UserMutateServiceInterface.update","inherited-from-7#Inherited from":"MutateService.update","source-13#Source":".tmp/repos/rockets/packages/typeorm-common/dist/services/mutate.service.d.ts:10","validate#validate()":"protected validate<T>(type, data): Promise<T>","type-parameters-1#Type parameters":"• T extends DeepPartial<UserEntityInterface>","parameters-10#Parameters":"• type: Type<T>• data: T","returns-11#Returns":"Promise<T>","inherited-from-8#Inherited from":"MutateService.validate","source-14#Source":".tmp/repos/rockets/packages/typeorm-common/dist/services/mutate.service.d.ts:15"}},"/reference/rockets/nestjs-user/classes/UserPaginatedDto":{"title":"Class: UserPaginatedDto","data":{"":"@concepta/nestjs-user • DocsPackages Example / @concepta/nestjs-user / UserPaginatedDtoUser paginated DTO","extends#Extends":"CrudResponsePaginatedDto<UserInterface>","constructors#Constructors":"","new-userpaginateddto#new UserPaginatedDto()":"new UserPaginatedDto(): UserPaginatedDto","returns#Returns":"UserPaginatedDto","inherited-from#Inherited from":"CrudResponsePaginatedDto.constructor","properties#Properties":"","count#count":"count: number","inherited-from-1#Inherited from":"CrudResponsePaginatedDto.count","source#Source":".tmp/repos/rockets/packages/nestjs-crud/dist/dto/crud-response-paginated.dto.d.ts:4","data#data":"data: UserDto[] = []","overrides#Overrides":"CrudResponsePaginatedDto.data","source-1#Source":".tmp/repos/rockets/packages/nestjs-user/src/dto/user-paginated.dto.ts:19","page#page":"page: number","inherited-from-2#Inherited from":"CrudResponsePaginatedDto.page","source-2#Source":".tmp/repos/rockets/packages/nestjs-crud/dist/dto/crud-response-paginated.dto.d.ts:6","pagecount#pageCount":"pageCount: number","inherited-from-3#Inherited from":"CrudResponsePaginatedDto.pageCount","source-3#Source":".tmp/repos/rockets/packages/nestjs-crud/dist/dto/crud-response-paginated.dto.d.ts:7","total#total":"total: number","inherited-from-4#Inherited from":"CrudResponsePaginatedDto.total","source-4#Source":".tmp/repos/rockets/packages/nestjs-crud/dist/dto/crud-response-paginated.dto.d.ts:5"}},"/reference/rockets/nestjs-user/classes/UserPasswordDto":{"title":"Class: UserPasswordDto","data":{"":"@concepta/nestjs-user • DocsPackages Example / @concepta/nestjs-user / UserPasswordDtoUser plain password DTO","extended-by#Extended by":"UserPasswordUpdateDto","implements#Implements":"PasswordPlainInterface","constructors#Constructors":"","new-userpassworddto#new UserPasswordDto()":"new UserPasswordDto(): UserPasswordDto","returns#Returns":"UserPasswordDto","properties#Properties":"","password#password":"password: string\nPassword","implementation-of#Implementation of":"PasswordPlainInterface.password","source#Source":".tmp/repos/rockets/packages/nestjs-user/src/dto/user-password.dto.ts:17"}},"/reference/rockets/nestjs-user/classes/UserPasswordService":{"title":"Class: UserPasswordService","data":{"":"@concepta/nestjs-user • DocsPackages Example / @concepta/nestjs-user / UserPasswordServiceUser password service","implements#Implements":"UserPasswordServiceInterface","constructors#Constructors":"","new-userpasswordservice#new UserPasswordService()":"new UserPasswordService(userLookupService, passwordCreationService): UserPasswordService\nConstructor","parameters#Parameters":"• userLookupService: UserLookupServiceInterfaceuser lookup service• passwordCreationService: PasswordCreationServiceInterfacepassword creation service","returns#Returns":"UserPasswordService","source#Source":".tmp/repos/rockets/packages/nestjs-user/src/services/user-password.service.ts:31","properties#Properties":"","passwordcreationservice#passwordCreationService":"protected readonly passwordCreationService: PasswordCreationServiceInterface\npassword creation service","source-1#Source":".tmp/repos/rockets/packages/nestjs-user/src/services/user-password.service.ts:35","userlookupservice#userLookupService":"protected readonly userLookupService: UserLookupServiceInterface\nuser lookup service","source-2#Source":".tmp/repos/rockets/packages/nestjs-user/src/services/user-password.service.ts:33","methods#Methods":"","getuserbyid#getUserById()":"getUserById(userId): Promise<ReferenceIdInterface<string> & PasswordStorageInterface>","parameters-1#Parameters":"• userId: string","returns-1#Returns":"Promise<ReferenceIdInterface<string> & PasswordStorageInterface>","implementation-of#Implementation of":"UserPasswordServiceInterface.getUserById","source-3#Source":".tmp/repos/rockets/packages/nestjs-user/src/services/user-password.service.ts:73","setpassword#setPassword()":"setPassword(passwordDto, userToUpdateId?, authorizedUser?): Promise<Omit<Partial<PasswordPlainInterface>, \"password\"> | Omit<Partial<PasswordPlainInterface>, \"password\"> & Partial<PasswordStorageInterface>>","parameters-2#Parameters":"• passwordDto: Partial<PasswordPlainInterface & PasswordPlainCurrentInterface>• userToUpdateId?: string• authorizedUser?: AuthenticatedUserInterface","returns-2#Returns":"Promise<Omit<Partial<PasswordPlainInterface>, \"password\"> | Omit<Partial<PasswordPlainInterface>, \"password\"> & Partial<PasswordStorageInterface>>","implementation-of-1#Implementation of":"UserPasswordServiceInterface.setPassword","source-4#Source":".tmp/repos/rockets/packages/nestjs-user/src/services/user-password.service.ts:38","validatecurrent#validateCurrent()":"protected validateCurrent(target, password?, authorizedUser?): Promise<boolean>","parameters-3#Parameters":"• target: ReferenceIdInterface<string> & PasswordStorageInterface• password?: string• authorizedUser?: AuthenticatedUserInterface","returns-3#Returns":"Promise<boolean>","source-5#Source":".tmp/repos/rockets/packages/nestjs-user/src/services/user-password.service.ts:107"}},"/reference/rockets/nestjs-user/classes/UserPasswordUpdateDto":{"title":"Class: UserPasswordUpdateDto","data":{"":"@concepta/nestjs-user • DocsPackages Example / @concepta/nestjs-user / UserPasswordUpdateDtoUser update password DTO","extends#Extends":"UserPasswordDto","implements#Implements":"PasswordPlainCurrentInterface","constructors#Constructors":"","new-userpasswordupdatedto#new UserPasswordUpdateDto()":"new UserPasswordUpdateDto(): UserPasswordUpdateDto","returns#Returns":"UserPasswordUpdateDto","inherited-from#Inherited from":"UserPasswordDto.constructor","properties#Properties":"","password#password":"password: string\nPassword","inherited-from-1#Inherited from":"UserPasswordDto.password","source#Source":".tmp/repos/rockets/packages/nestjs-user/src/dto/user-password.dto.ts:17","passwordcurrent#passwordCurrent":"passwordCurrent: string\nCurrent Password","implementation-of#Implementation of":"PasswordPlainCurrentInterface.passwordCurrent","source-1#Source":".tmp/repos/rockets/packages/nestjs-user/src/dto/user-password-update.dto.ts:22"}},"/reference/rockets/nestjs-user/classes/UserPostgresEntity":{"title":"Class: abstract UserPostgresEntity","data":{"":"@concepta/nestjs-user • DocsPackages Example / @concepta/nestjs-user / UserPostgresEntityUser Entity","extends#Extends":"CommonPostgresEntity","implements#Implements":"UserEntityInterface","constructors#Constructors":"","new-userpostgresentity#new UserPostgresEntity()":"new UserPostgresEntity(): UserPostgresEntity","returns#Returns":"UserPostgresEntity","inherited-from#Inherited from":"CommonPostgresEntity.constructor","properties#Properties":"","active#active":"active: boolean\nActive","implementation-of#Implementation of":"UserEntityInterface.active","source#Source":".tmp/repos/rockets/packages/nestjs-user/src/entities/user-postgres.entity.ts:28","datecreated#dateCreated":"dateCreated: Date\nDate created.","implementation-of-1#Implementation of":"UserEntityInterface.dateCreated","inherited-from-1#Inherited from":"CommonPostgresEntity.dateCreated","source-1#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/audit/audit-postgres.entity.d.ts:3","datedeleted#dateDeleted":"dateDeleted: AuditDateDeleted\nDate deleted.","implementation-of-2#Implementation of":"UserEntityInterface.dateDeleted","inherited-from-2#Inherited from":"CommonPostgresEntity.dateDeleted","source-2#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/audit/audit-postgres.entity.d.ts:5","dateupdated#dateUpdated":"dateUpdated: Date\nDate updated.","implementation-of-3#Implementation of":"UserEntityInterface.dateUpdated","inherited-from-3#Inherited from":"CommonPostgresEntity.dateUpdated","source-3#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/audit/audit-postgres.entity.d.ts:4","email#email":"email: string\nEmail","implementation-of-4#Implementation of":"UserEntityInterface.email","source-4#Source":".tmp/repos/rockets/packages/nestjs-user/src/entities/user-postgres.entity.ts:16","id#id":"id: string","implementation-of-5#Implementation of":"UserEntityInterface.id","inherited-from-4#Inherited from":"CommonPostgresEntity.id","source-5#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/common/common-postgres.entity.d.ts:4","passwordhash#passwordHash":"passwordHash: null | string = null\nPassword hash","implementation-of-6#Implementation of":"UserEntityInterface.passwordHash","source-6#Source":".tmp/repos/rockets/packages/nestjs-user/src/entities/user-postgres.entity.ts:34","passwordsalt#passwordSalt":"passwordSalt: null | string = null\nPassword salt","implementation-of-7#Implementation of":"UserEntityInterface.passwordSalt","source-7#Source":".tmp/repos/rockets/packages/nestjs-user/src/entities/user-postgres.entity.ts:40","username#username":"username: string\nUsername","implementation-of-8#Implementation of":"UserEntityInterface.username","source-8#Source":".tmp/repos/rockets/packages/nestjs-user/src/entities/user-postgres.entity.ts:22","version#version":"version: number\nVersion","implementation-of-9#Implementation of":"UserEntityInterface.version","inherited-from-5#Inherited from":"CommonPostgresEntity.version","source-9#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/audit/audit-postgres.entity.d.ts:6"}},"/reference/rockets/nestjs-user/classes/UserSqliteEntity":{"title":"Class: abstract UserSqliteEntity","data":{"":"@concepta/nestjs-user • DocsPackages Example / @concepta/nestjs-user / UserSqliteEntityIdentifiable by id.","see#See":"https://en.wikipedia.org/wiki/Reference_(computer_science)","extends#Extends":"CommonSqliteEntity","implements#Implements":"UserEntityInterface","constructors#Constructors":"","new-usersqliteentity#new UserSqliteEntity()":"new UserSqliteEntity(): UserSqliteEntity","returns#Returns":"UserSqliteEntity","inherited-from#Inherited from":"CommonSqliteEntity.constructor","properties#Properties":"","active#active":"active: boolean\nActive","implementation-of#Implementation of":"UserEntityInterface.active","source#Source":".tmp/repos/rockets/packages/nestjs-user/src/entities/user-sqlite.entity.ts:25","datecreated#dateCreated":"dateCreated: Date\nDate created.","implementation-of-1#Implementation of":"UserEntityInterface.dateCreated","inherited-from-1#Inherited from":"CommonSqliteEntity.dateCreated","source-1#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/audit/audit-sqlite.entity.d.ts:3","datedeleted#dateDeleted":"dateDeleted: AuditDateDeleted\nDate deleted.","implementation-of-2#Implementation of":"UserEntityInterface.dateDeleted","inherited-from-2#Inherited from":"CommonSqliteEntity.dateDeleted","source-2#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/audit/audit-sqlite.entity.d.ts:5","dateupdated#dateUpdated":"dateUpdated: Date\nDate updated.","implementation-of-3#Implementation of":"UserEntityInterface.dateUpdated","inherited-from-3#Inherited from":"CommonSqliteEntity.dateUpdated","source-3#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/audit/audit-sqlite.entity.d.ts:4","email#email":"email: string\nEmail","implementation-of-4#Implementation of":"UserEntityInterface.email","source-4#Source":".tmp/repos/rockets/packages/nestjs-user/src/entities/user-sqlite.entity.ts:13","id#id":"id: string","implementation-of-5#Implementation of":"UserEntityInterface.id","inherited-from-4#Inherited from":"CommonSqliteEntity.id","source-5#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/common/common-sqlite.entity.d.ts:4","passwordhash#passwordHash":"passwordHash: null | string = null\nPassword hash","implementation-of-6#Implementation of":"UserEntityInterface.passwordHash","source-6#Source":".tmp/repos/rockets/packages/nestjs-user/src/entities/user-sqlite.entity.ts:31","passwordsalt#passwordSalt":"passwordSalt: null | string = null\nPassword salt","implementation-of-7#Implementation of":"UserEntityInterface.passwordSalt","source-7#Source":".tmp/repos/rockets/packages/nestjs-user/src/entities/user-sqlite.entity.ts:37","username#username":"username: string\nUsername","implementation-of-8#Implementation of":"UserEntityInterface.username","source-8#Source":".tmp/repos/rockets/packages/nestjs-user/src/entities/user-sqlite.entity.ts:19","version#version":"version: number\nVersion","implementation-of-9#Implementation of":"UserEntityInterface.version","inherited-from-5#Inherited from":"CommonSqliteEntity.version","source-9#Source":".tmp/repos/rockets/packages/typeorm-common/dist/entities/audit/audit-sqlite.entity.d.ts:6"}},"/reference/rockets/nestjs-user/classes/UserUpdateDto":{"title":"Class: UserUpdateDto","data":{"":"@concepta/nestjs-user • DocsPackages Example / @concepta/nestjs-user / UserUpdateDtoUser Update DTO","extends#Extends":"Partial<UserPasswordDto> & Partial<Pick<UserDto, \"email\" | \"active\">> & Partial<UserPasswordUpdateDto>","implements#Implements":"UserUpdatableInterface","constructors#Constructors":"","new-userupdatedto#new UserUpdateDto()":"new UserUpdateDto(...args): UserUpdateDto","parameters#Parameters":"• ...args: any[]","returns#Returns":"UserUpdateDto","inherited-from#Inherited from":"IntersectionType( PartialType(PickType(UserDto, ['email', 'active'] as const)), PartialType(UserPasswordDto), PartialType(UserPasswordUpdateDto), ).constructor","source#Source":".tmp/repos/rockets/node_modules/@nestjs/common/interfaces/type.interface.d.ts:2","properties#Properties":"","active#active?":"optional active: boolean\nActive","implementation-of#Implementation of":"UserUpdatableInterface.active","inherited-from-1#Inherited from":"IntersectionType( PartialType(PickType(UserDto, ['email', 'active'] as const)), PartialType(UserPasswordDto), PartialType(UserPasswordUpdateDto), ).active","source-1#Source":".tmp/repos/rockets/packages/nestjs-user/src/dto/user.dto.ts:43","email#email?":"optional email: string = ''\nEmail","implementation-of-1#Implementation of":"UserUpdatableInterface.email","inherited-from-2#Inherited from":"IntersectionType( PartialType(PickType(UserDto, ['email', 'active'] as const)), PartialType(UserPasswordDto), PartialType(UserPasswordUpdateDto), ).email","source-2#Source":".tmp/repos/rockets/packages/nestjs-user/src/dto/user.dto.ts:21","password#password?":"optional password: string\nPassword","implementation-of-2#Implementation of":"UserUpdatableInterface.password","inherited-from-3#Inherited from":"IntersectionType( PartialType(PickType(UserDto, ['email', 'active'] as const)), PartialType(UserPasswordDto), PartialType(UserPasswordUpdateDto), ).password","source-3#Source":".tmp/repos/rockets/packages/nestjs-user/src/dto/user-password.dto.ts:17","passwordcurrent#passwordCurrent?":"optional passwordCurrent: string\nCurrent Password","implementation-of-3#Implementation of":"UserUpdatableInterface.passwordCurrent","inherited-from-4#Inherited from":"IntersectionType( PartialType(PickType(UserDto, ['email', 'active'] as const)), PartialType(UserPasswordDto), PartialType(UserPasswordUpdateDto), ).passwordCurrent","source-4#Source":".tmp/repos/rockets/packages/nestjs-user/src/dto/user-password-update.dto.ts:22","arguments#arguments":"static arguments: any","inherited-from-5#Inherited from":"IntersectionType( PartialType(PickType(UserDto, ['email', 'active'] as const)), PartialType(UserPasswordDto), PartialType(UserPasswordUpdateDto), ).arguments","source-5#Source":"node_modules/typescript/lib/lib.es5.d.ts:304","caller#caller":"static caller: Function","inherited-from-6#Inherited from":"IntersectionType( PartialType(PickType(UserDto, ['email', 'active'] as const)), PartialType(UserPasswordDto), PartialType(UserPasswordUpdateDto), ).caller","source-6#Source":"node_modules/typescript/lib/lib.es5.d.ts:305","length#length":"static readonly length: number","inherited-from-7#Inherited from":"IntersectionType( PartialType(PickType(UserDto, ['email', 'active'] as const)), PartialType(UserPasswordDto), PartialType(UserPasswordUpdateDto), ).length","source-7#Source":"node_modules/typescript/lib/lib.es5.d.ts:301","name#name":"static readonly name: string\nReturns the name of the function. Function names are read-only and can not be changed.","inherited-from-8#Inherited from":"IntersectionType( PartialType(PickType(UserDto, ['email', 'active'] as const)), PartialType(UserPasswordDto), PartialType(UserPasswordUpdateDto), ).name","source-8#Source":"node_modules/typescript/lib/lib.es2015.core.d.ts:97","methods#Methods":"","hasinstance#[hasInstance]()":"static [hasInstance](value): boolean\nDetermines whether the given value inherits from this function if this function was used\r\nas a constructor function.A constructor function can control which objects are recognized as its instances by\r\n'instanceof' by overriding this method.","parameters-1#Parameters":"• value: any","returns-1#Returns":"boolean","inherited-from-9#Inherited from":"IntersectionType( PartialType(PickType(UserDto, ['email', 'active'] as const)), PartialType(UserPasswordDto), PartialType(UserPasswordUpdateDto), ).[hasInstance]","source-9#Source":"node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts:162","apply#apply()":"static apply(this, thisArg, argArray?): any\nCalls the function, substituting the specified object for the this value of the function, and the specified array for the arguments of the function.","parameters-2#Parameters":"• this: Function• thisArg: anyThe object to be used as the this object.• argArray?: anyA set of arguments to be passed to the function.","returns-2#Returns":"any","inherited-from-10#Inherited from":"IntersectionType( PartialType(PickType(UserDto, ['email', 'active'] as const)), PartialType(UserPasswordDto), PartialType(UserPasswordUpdateDto), ).apply","source-10#Source":"node_modules/typescript/lib/lib.es5.d.ts:280","bind#bind()":"static bind(this, thisArg, ...argArray): any\nFor a given function, creates a bound function that has the same body as the original function.\r\nThe this object of the bound function is associated with the specified object, and has the specified initial parameters.","parameters-3#Parameters":"• this: Function• thisArg: anyAn object to which the this keyword can refer inside the new function.• ...argArray: any[]A list of arguments to be passed to the new function.","returns-3#Returns":"any","inherited-from-11#Inherited from":"IntersectionType( PartialType(PickType(UserDto, ['email', 'active'] as const)), PartialType(UserPasswordDto), PartialType(UserPasswordUpdateDto), ).bind","source-11#Source":"node_modules/typescript/lib/lib.es5.d.ts:295","call#call()":"static call(this, thisArg, ...argArray): any\nCalls a method of an object, substituting another object for the current object.","parameters-4#Parameters":"• this: Function• thisArg: anyThe object to be used as the current object.• ...argArray: any[]A list of arguments to be passed to the method.","returns-4#Returns":"any","inherited-from-12#Inherited from":"IntersectionType( PartialType(PickType(UserDto, ['email', 'active'] as const)), PartialType(UserPasswordDto), PartialType(UserPasswordUpdateDto), ).call","source-12#Source":"node_modules/typescript/lib/lib.es5.d.ts:287","tostring#toString()":"static toString(): string\nReturns a string representation of a function.","returns-5#Returns":"string","inherited-from-13#Inherited from":"IntersectionType( PartialType(PickType(UserDto, ['email', 'active'] as const)), PartialType(UserPasswordDto), PartialType(UserPasswordUpdateDto), ).toString","source-13#Source":"node_modules/typescript/lib/lib.es5.d.ts:298"}},"/reference/rockets/nestjs-user/enumerations/UserResource":{"title":"Enumeration: UserResource","data":{"":"@concepta/nestjs-user • DocsPackages Example / @concepta/nestjs-user / UserResource","enumeration-members#Enumeration Members":"","many#Many":"Many: \"user-list\"","source#Source":".tmp/repos/rockets/packages/nestjs-user/src/user.types.ts:3","one#One":"One: \"user\"","source-1#Source":".tmp/repos/rockets/packages/nestjs-user/src/user.types.ts:2"}},"/reference/rockets/nestjs-user/globals":{"title":"@concepta/nestjs-user","data":{"":"@concepta/nestjs-user • DocsPackages Example / @concepta/nestjs-user","enumerations#Enumerations":"UserResource","classes#Classes":"UserAccessQueryService\nUserController\nUserCreateDto\nUserCreateManyDto\nUserCrudService\nUserDto\nUserException\nUserLookupService\nUserModule\nUserMutateService\nUserPaginatedDto\nUserPasswordDto\nUserPasswordService\nUserPasswordUpdateDto\nUserPostgresEntity\nUserSqliteEntity\nUserUpdateDto","interfaces#Interfaces":"UserEntityInterface\nUserLookupServiceInterface\nUserMutateServiceInterface\nUserPasswordServiceInterface"}},"/reference/rockets/nestjs-user/interfaces/UserEntityInterface":{"title":"Interface: UserEntityInterface","data":{"":"@concepta/nestjs-user • DocsPackages Example / @concepta/nestjs-user / UserEntityInterfaceIdentifiable by id.","see#See":"https://en.wikipedia.org/wiki/Reference_(computer_science)","extends#Extends":"UserInterface.PasswordStorageInterface","properties#Properties":"","active#active":"active: boolean","inherited-from#Inherited from":"UserInterface.active","source#Source":".tmp/repos/rockets/packages/ts-core/dist/references/interfaces/reference-active.interface.d.ts:3","datecreated#dateCreated":"dateCreated: Date","inherited-from-1#Inherited from":"UserInterface.dateCreated","source-1#Source":".tmp/repos/rockets/packages/ts-core/dist/audit/interfaces/audit-date-created.interface.d.ts:3","datedeleted#dateDeleted":"dateDeleted: AuditDateDeleted","inherited-from-2#Inherited from":"UserInterface.dateDeleted","source-2#Source":".tmp/repos/rockets/packages/ts-core/dist/audit/interfaces/audit-date-deleted.interface.d.ts:3","dateupdated#dateUpdated":"dateUpdated: Date","inherited-from-3#Inherited from":"UserInterface.dateUpdated","source-3#Source":".tmp/repos/rockets/packages/ts-core/dist/audit/interfaces/audit-date-updated.interface.d.ts:3","email#email":"email: string","inherited-from-4#Inherited from":"UserInterface.email","source-4#Source":".tmp/repos/rockets/packages/ts-core/dist/references/interfaces/reference-email.interface.d.ts:3","id#id":"id: string","inherited-from-5#Inherited from":"UserInterface.id","source-5#Source":".tmp/repos/rockets/packages/ts-core/dist/references/interfaces/reference-id.interface.d.ts:3","passwordhash#passwordHash":"passwordHash: null | string\nHashed password","inherited-from-6#Inherited from":"PasswordStorageInterface.passwordHash","source-6#Source":".tmp/repos/rockets/packages/nestjs-password/dist/interfaces/password-storage.interface.d.ts:2","passwordsalt#passwordSalt":"passwordSalt: null | string\nSalt used to hash password","inherited-from-7#Inherited from":"PasswordStorageInterface.passwordSalt","source-7#Source":".tmp/repos/rockets/packages/nestjs-password/dist/interfaces/password-storage.interface.d.ts:3","username#username":"username: string","inherited-from-8#Inherited from":"UserInterface.username","source-8#Source":".tmp/repos/rockets/packages/ts-core/dist/references/interfaces/reference-username.interface.d.ts:3","version#version":"version: number","inherited-from-9#Inherited from":"UserInterface.version","source-9#Source":".tmp/repos/rockets/packages/ts-core/dist/audit/interfaces/audit-version.interface.d.ts:3"}},"/reference/rockets/nestjs-user/interfaces/UserLookupServiceInterface":{"title":"Interface: UserLookupServiceInterface","data":{"":"@concepta/nestjs-user • DocsPackages Example / @concepta/nestjs-user / UserLookupServiceInterface","extends#Extends":"LookupIdInterface.LookupEmailInterface<ReferenceId, ReferenceIdInterface, QueryOptionsInterface>.LookupSubjectInterface<ReferenceSubject, ReferenceIdInterface, QueryOptionsInterface>.LookupUsernameInterface<ReferenceUsername, ReferenceIdInterface, QueryOptionsInterface>","properties#Properties":"","byemail#byEmail()":"byEmail: (email, options?) => Promise<null | ReferenceIdInterface<string>>","parameters#Parameters":"• email: string• options?: QueryOptionsInterface","returns#Returns":"Promise<null | ReferenceIdInterface<string>>","inherited-from#Inherited from":"LookupEmailInterface.byEmail","source#Source":".tmp/repos/rockets/packages/ts-core/dist/references/interfaces/lookup/lookup-email.interface.d.ts:5","byid#byId()":"byId: (id, options?) => Promise<null | ReferenceIdInterface<string>>","parameters-1#Parameters":"• id: string• options?: ReferenceQueryOptionsInterface","returns-1#Returns":"Promise<null | ReferenceIdInterface<string>>","inherited-from-1#Inherited from":"LookupIdInterface.byId","source-1#Source":".tmp/repos/rockets/packages/ts-core/dist/references/interfaces/lookup/lookup-id.interface.d.ts:5","bysubject#bySubject()":"bySubject: (subject, options?) => Promise<null | ReferenceIdInterface<string>>","parameters-2#Parameters":"• subject: string• options?: QueryOptionsInterface","returns-2#Returns":"Promise<null | ReferenceIdInterface<string>>","inherited-from-2#Inherited from":"LookupSubjectInterface.bySubject","source-2#Source":".tmp/repos/rockets/packages/ts-core/dist/references/interfaces/lookup/lookup-subject.interface.d.ts:5","byusername#byUsername()":"byUsername: (username, options?) => Promise<null | ReferenceIdInterface<string>>","parameters-3#Parameters":"• username: string• options?: QueryOptionsInterface","returns-3#Returns":"Promise<null | ReferenceIdInterface<string>>","inherited-from-3#Inherited from":"LookupUsernameInterface.byUsername","source-3#Source":".tmp/repos/rockets/packages/ts-core/dist/references/interfaces/lookup/lookup-username.interface.d.ts:5"}},"/reference/rockets/nestjs-user/interfaces/UserMutateServiceInterface":{"title":"Interface: UserMutateServiceInterface","data":{"":"@concepta/nestjs-user • DocsPackages Example / @concepta/nestjs-user / UserMutateServiceInterface","extends#Extends":"CreateOneInterface<UserCreatableInterface, UserEntityInterface>.UpdateOneInterface<UserUpdatableInterface & ReferenceIdInterface, UserEntityInterface, QueryOptionsInterface>.ReplaceOneInterface<UserCreatableInterface & ReferenceIdInterface, UserEntityInterface, QueryOptionsInterface>.RemoveOneInterface<UserEntityInterface, UserEntityInterface, QueryOptionsInterface>","properties#Properties":"","create#create()":"create: (object, options?) => Promise<UserEntityInterface>","parameters#Parameters":"• object: UserCreatableInterface• options?: ReferenceQueryOptionsInterface","returns#Returns":"Promise<UserEntityInterface>","inherited-from#Inherited from":"CreateOneInterface.create","source#Source":".tmp/repos/rockets/packages/ts-core/dist/references/interfaces/mutate/create-one.interface.d.ts:4","remove#remove()":"remove: (object, options?) => Promise<UserEntityInterface>","parameters-1#Parameters":"• object: UserEntityInterface• options?: QueryOptionsInterface","returns-1#Returns":"Promise<UserEntityInterface>","inherited-from-1#Inherited from":"RemoveOneInterface.remove","source-1#Source":".tmp/repos/rockets/packages/ts-core/dist/references/interfaces/mutate/remove-one.interface.d.ts:4","replace#replace()":"replace: (object, options?) => Promise<UserEntityInterface>","parameters-2#Parameters":"• object: UserCreatableInterface & ReferenceIdInterface<string>• options?: QueryOptionsInterface","returns-2#Returns":"Promise<UserEntityInterface>","inherited-from-2#Inherited from":"ReplaceOneInterface.replace","source-2#Source":".tmp/repos/rockets/packages/ts-core/dist/references/interfaces/mutate/replace-one.interface.d.ts:4","update#update()":"update: (object, options?) => Promise<UserEntityInterface>","parameters-3#Parameters":"• object: UserUpdatableInterface & ReferenceIdInterface<string>• options?: QueryOptionsInterface","returns-3#Returns":"Promise<UserEntityInterface>","inherited-from-3#Inherited from":"UpdateOneInterface.update","source-3#Source":".tmp/repos/rockets/packages/ts-core/dist/references/interfaces/mutate/update-one.interface.d.ts:4"}},"/reference/rockets/nestjs-user/interfaces/UserPasswordServiceInterface":{"title":"Interface: UserPasswordServiceInterface","data":{"":"@concepta/nestjs-user • DocsPackages Example / @concepta/nestjs-user / UserPasswordServiceInterface","properties#Properties":"","getuserbyid#getUserById()":"getUserById: (userId) => Promise<ReferenceIdInterface<string> & PasswordStorageInterface>\nGet the user being updated by id.Object must have reference id and password storage interface.","parameters#Parameters":"• userId: stringThe id of the user that is being updated","returns#Returns":"Promise<ReferenceIdInterface<string> & PasswordStorageInterface>","source#Source":".tmp/repos/rockets/packages/nestjs-user/src/interfaces/user-password-service.interface.ts:21","setpassword#setPassword()":"setPassword: (passwordDto, userToUpdateId?, authorizedUser?) => Promise<Omit<Partial<PasswordPlainInterface>, \"password\"> | Omit<Partial<PasswordPlainInterface>, \"password\"> & Partial<PasswordStorageInterface>>\nSet the password (hash) on the user object.","parameters-1#Parameters":"• passwordDto: Partial<PasswordPlainInterface & PasswordPlainCurrentInterface>The object containing the password, and optionally the current password.• userToUpdateId?: stringThe id of the user being updated.• authorizedUser?: AuthenticatedUserInterfaceThe authorized user","returns-1#Returns":"Promise<Omit<Partial<PasswordPlainInterface>, \"password\"> | Omit<Partial<PasswordPlainInterface>, \"password\"> & Partial<PasswordStorageInterface>>","source-1#Source":".tmp/repos/rockets/packages/nestjs-user/src/interfaces/user-password-service.interface.ts:33"}},"/reference/rockets/packages":{"title":"Packages Example","data":{"":"Packages Example • Docs","packages#Packages":"@concepta/nestjs-access-control\n@concepta/nestjs-auth-github\n@concepta/nestjs-auth-jwt\n@concepta/nestjs-auth-local\n@concepta/nestjs-auth-recovery\n@concepta/nestjs-auth-refresh\n@concepta/nestjs-authentication\n@concepta/nestjs-cache\n@concepta/nestjs-common\n@concepta/nestjs-core\n@concepta/nestjs-crud\n@concepta/nestjs-email\n@concepta/nestjs-event\n@concepta/nestjs-exception\n@concepta/nestjs-federated\n@concepta/nestjs-invitation\n@concepta/nestjs-jwt\n@concepta/nestjs-logger\n@concepta/nestjs-org\n@concepta/nestjs-otp\n@concepta/nestjs-password\n@concepta/nestjs-role\n@concepta/nestjs-swagger-ui\n@concepta/nestjs-typeorm-ext\n@concepta/nestjs-user\n@concepta/ts-common\n@concepta/ts-core\n@concepta/typeorm-common"}},"/reference/rockets/ts-common/README":{"title":"Rockets Typescript Core","data":{"":"@concepta/ts-common • DocsPackages Example / @concepta/ts-commonCore Typescript interfaces, classes and utilities.","project#Project":"","installation#Installation":"yarn add @concepta/ts-common"}},"/reference/rockets/ts-common/globals":{"title":"@concepta/ts-common","data":{"":"@concepta/ts-common • DocsPackages Example / @concepta/ts-common","interfaces#Interfaces":"AuthenticatedUserInterface\nAuthenticationAccessInterface\nAuthenticationCodeInterface\nAuthenticationLoginInterface\nAuthenticationRefreshInterface\nAuthenticationResponseInterface\nAuthorizationPayloadInterface\nCacheClearInterface\nCacheCreatableInterface\nCacheCreateInterface\nCacheDeleteInterface\nCacheGetOneInterface\nCacheInterface\nCacheUpdatableInterface\nCacheUpdateInterface\nEmailSendInterface\nEmailSendOptionsInterface\nFederatedCreatableInterface\nFederatedInterface\nFederatedUpdatableInterface\nInvitationAcceptedEventPayloadInterface\nInvitationGetUserEventPayloadInterface\nInvitationGetUserEventResponseInterface\nInvitationInterface\nOrgCreatableInterface\nOrgInterface\nOrgMemberInterface\nOrgOwnerInterface\nOrgUpdatableInterface\nOtpClearInterface\nOtpCreatableInterface\nOtpCreateInterface\nOtpDeleteInterface\nOtpInterface\nOtpValidateInterface\nPasswordPlainCurrentInterface\nPasswordPlainInterface\nRoleAssigneesInterface\nRoleAssignmentCreatableInterface\nRoleAssignmentInterface\nRoleCreatableInterface\nRoleInterface\nRoleUpdatableInterface\nUserCreatableInterface\nUserInterface\nUserUpdatableInterface","variables#Variables":"INVITATION_MODULE_CATEGORY_ORG_KEY\nINVITATION_MODULE_CATEGORY_USER_KEY"}},"/reference/rockets/ts-common/interfaces/AuthenticatedUserInterface":{"title":"Interface: AuthenticatedUserInterface","data":{"":"@concepta/ts-common • DocsPackages Example / @concepta/ts-common / AuthenticatedUserInterfaceIdentifiable by id.","see#See":"https://en.wikipedia.org/wiki/Reference_(computer_science)","extends#Extends":"ReferenceIdInterface","properties#Properties":"","id#id":"id: string","inherited-from#Inherited from":"ReferenceIdInterface.id","source#Source":"ts-core/dist/references/interfaces/reference-id.interface.d.ts:3"}},"/reference/rockets/ts-common/interfaces/AuthenticationAccessInterface":{"title":"Interface: AuthenticationAccessInterface","data":{"":"@concepta/ts-common • DocsPackages Example / @concepta/ts-common / AuthenticationAccessInterfaceAuthentication access token interface","extended-by#Extended by":"AuthenticationResponseInterface","properties#Properties":"","accesstoken#accessToken":"accessToken: string\nThe access token.","source#Source":"ts-common/src/authentication/interfaces/authentication-access.interface.ts:8"}},"/reference/rockets/ts-common/interfaces/AuthenticationCodeInterface":{"title":"Interface: AuthenticationCodeInterface","data":{"":"@concepta/ts-common • DocsPackages Example / @concepta/ts-common / AuthenticationCodeInterface","properties#Properties":"","code#code":"code: string","source#Source":"ts-common/src/authentication/interfaces/authentication-code.interface.ts:2"}},"/reference/rockets/ts-common/interfaces/AuthenticationLoginInterface":{"title":"Interface: AuthenticationLoginInterface","data":{"":"@concepta/ts-common • DocsPackages Example / @concepta/ts-common / AuthenticationLoginInterfacePassword plain text interface","extends#Extends":"ReferenceUsernameInterface.PasswordPlainInterface","properties#Properties":"","password#password":"password: string\nPassword","inherited-from#Inherited from":"PasswordPlainInterface.password","source#Source":"ts-common/src/password/interfaces/password-plain.interface.ts:8","username#username":"username: string","inherited-from-1#Inherited from":"ReferenceUsernameInterface.username","source-1#Source":"ts-core/dist/references/interfaces/reference-username.interface.d.ts:3"}},"/reference/rockets/ts-common/interfaces/AuthenticationRefreshInterface":{"title":"Interface: AuthenticationRefreshInterface","data":{"":"@concepta/ts-common • DocsPackages Example / @concepta/ts-common / AuthenticationRefreshInterface","extended-by#Extended by":"AuthenticationResponseInterface","properties#Properties":"","refreshtoken#refreshToken":"refreshToken: string","source#Source":"ts-common/src/authentication/interfaces/authentication-refresh.interface.ts:2"}},"/reference/rockets/ts-common/interfaces/AuthenticationResponseInterface":{"title":"Interface: AuthenticationResponseInterface","data":{"":"@concepta/ts-common • DocsPackages Example / @concepta/ts-common / AuthenticationResponseInterfaceAuthentication response interface","extends#Extends":"AuthenticationAccessInterface.AuthenticationRefreshInterface","properties#Properties":"","accesstoken#accessToken":"accessToken: string\nThe access token.","inherited-from#Inherited from":"AuthenticationAccessInterface.accessToken","source#Source":"ts-common/src/authentication/interfaces/authentication-access.interface.ts:8","refreshtoken#refreshToken":"refreshToken: string","inherited-from-1#Inherited from":"AuthenticationRefreshInterface.refreshToken","source-1#Source":"ts-common/src/authentication/interfaces/authentication-refresh.interface.ts:2"}},"/reference/rockets/ts-common/interfaces/AuthorizationPayloadInterface":{"title":"Interface: AuthorizationPayloadInterface","data":{"":"@concepta/ts-common • DocsPackages Example / @concepta/ts-common / AuthorizationPayloadInterfaceIdentifiable by subject (JWT).","extends#Extends":"ReferenceSubjectInterface","properties#Properties":"","sub#sub":"sub: string","inherited-from#Inherited from":"ReferenceSubjectInterface.sub","source#Source":"ts-core/dist/references/interfaces/reference-subject.interface.d.ts:3"}},"/reference/rockets/ts-common/interfaces/CacheClearInterface":{"title":"Interface: CacheClearInterface<O>","data":{"":"@concepta/ts-common • DocsPackages Example / @concepta/ts-common / CacheClearInterface","type-parameters#Type parameters":"• O extends ReferenceQueryOptionsInterface = ReferenceQueryOptionsInterface","methods#Methods":"","clear#clear()":"clear(assignment, cache, options?): Promise<void>\nClear all caches for assign in given category.","parameters#Parameters":"• assignment: stringThe assignment of the repository• cache: Pick<CacheInterface, \"assignee\">The cache to clear• options?: O","returns#Returns":"Promise<void>","source#Source":"ts-common/src/cache/interfaces/cache-clear.interface.ts:16"}},"/reference/rockets/ts-common/interfaces/CacheCreatableInterface":{"title":"Interface: CacheCreatableInterface","data":{"":"@concepta/ts-common • DocsPackages Example / @concepta/ts-common / CacheCreatableInterface","extends#Extends":"Pick<CacheInterface, \"key\" | \"type\" | \"data\" | \"assignee\">","properties#Properties":"","assignee#assignee":"assignee: ReferenceIdInterface<string>","inherited-from#Inherited from":"Pick.assignee","source#Source":"ts-core/dist/references/interfaces/reference-assignee.interface.d.ts:3","data#data":"data: null | string\ndata of the cache","inherited-from-1#Inherited from":"Pick.data","source-1#Source":"ts-common/src/cache/interfaces/cache.interface.ts:24","expiresin#expiresIn":"expiresIn: null | string","source-2#Source":"ts-common/src/cache/interfaces/cache-creatable.interface.ts:5","key#key":"key: string\nkey to be used as reference for the cache data","inherited-from-2#Inherited from":"Pick.key","source-3#Source":"ts-common/src/cache/interfaces/cache.interface.ts:14","type#type":"type: string\nType of the passcode","inherited-from-3#Inherited from":"Pick.type","source-4#Source":"ts-common/src/cache/interfaces/cache.interface.ts:19"}},"/reference/rockets/ts-common/interfaces/CacheCreateInterface":{"title":"Interface: CacheCreateInterface<O>","data":{"":"@concepta/ts-common • DocsPackages Example / @concepta/ts-common / CacheCreateInterface","type-parameters#Type parameters":"• O extends ReferenceQueryOptionsInterface = ReferenceQueryOptionsInterface","methods#Methods":"","create#create()":"create(assignment, cache, options?): Promise<CacheInterface>\nCreate a cache with a for the given assignee.","parameters#Parameters":"• assignment: stringThe cache assignment• cache: CacheCreatableInterfaceThe CACHE to create• options?: O","returns#Returns":"Promise<CacheInterface>","source#Source":"ts-common/src/cache/interfaces/cache-create.interface.ts:18"}},"/reference/rockets/ts-common/interfaces/CacheDeleteInterface":{"title":"Interface: CacheDeleteInterface<O>","data":{"":"@concepta/ts-common • DocsPackages Example / @concepta/ts-common / CacheDeleteInterface","type-parameters#Type parameters":"• O extends ReferenceQueryOptionsInterface = ReferenceQueryOptionsInterface","methods#Methods":"","delete#delete()":"delete(assignment, cache, options?): Promise<void>\nDelete a cache based on params","parameters#Parameters":"• assignment: stringThe cache assignment• cache: Pick<CacheInterface, \"assignee\" | \"type\" | \"key\">The dto with unique keys to delete• options?: O","returns#Returns":"Promise<void>","source#Source":"ts-common/src/cache/interfaces/cache-delete.interface.ts:15"}},"/reference/rockets/ts-common/interfaces/CacheGetOneInterface":{"title":"Interface: CacheGetOneInterface<O>","data":{"":"@concepta/ts-common • DocsPackages Example / @concepta/ts-common / CacheGetOneInterface","type-parameters#Type parameters":"• O extends ReferenceQueryOptionsInterface = ReferenceQueryOptionsInterface","methods#Methods":"","get#get()":"get(assignment, cache, queryOptions?): Promise<null | CacheInterface>\nGet One cache based on params","parameters#Parameters":"• assignment: stringThe cache assignment• cache: Pick<CacheInterface, \"assignee\" | \"type\" | \"key\">The dto with unique keys to delete• queryOptions?: O","returns#Returns":"Promise<null | CacheInterface>","source#Source":"ts-common/src/cache/interfaces/cache-get-one.interface.ts:15"}},"/reference/rockets/ts-common/interfaces/CacheInterface":{"title":"Interface: CacheInterface","data":{"":"@concepta/ts-common • DocsPackages Example / @concepta/ts-common / CacheInterfaceIdentifiable by id.","see#See":"https://en.wikipedia.org/wiki/Reference_(computer_science)","extends#Extends":"ReferenceIdInterface.ReferenceAssigneeInterface.AuditInterface","properties#Properties":"","assignee#assignee":"assignee: ReferenceIdInterface<string>","inherited-from#Inherited from":"ReferenceAssigneeInterface.assignee","source#Source":"ts-core/dist/references/interfaces/reference-assignee.interface.d.ts:3","data#data":"data: null | string\ndata of the cache","source-1#Source":"ts-common/src/cache/interfaces/cache.interface.ts:24","datecreated#dateCreated":"dateCreated: Date","inherited-from-1#Inherited from":"AuditInterface.dateCreated","source-2#Source":"ts-core/dist/audit/interfaces/audit-date-created.interface.d.ts:3","datedeleted#dateDeleted":"dateDeleted: AuditDateDeleted","inherited-from-2#Inherited from":"AuditInterface.dateDeleted","source-3#Source":"ts-core/dist/audit/interfaces/audit-date-deleted.interface.d.ts:3","dateupdated#dateUpdated":"dateUpdated: Date","inherited-from-3#Inherited from":"AuditInterface.dateUpdated","source-4#Source":"ts-core/dist/audit/interfaces/audit-date-updated.interface.d.ts:3","expirationdate#expirationDate":"expirationDate: null | Date\nDate it will expire","source-5#Source":"ts-common/src/cache/interfaces/cache.interface.ts:29","id#id":"id: string","inherited-from-4#Inherited from":"ReferenceIdInterface.id","source-6#Source":"ts-core/dist/references/interfaces/reference-id.interface.d.ts:3","key#key":"key: string\nkey to be used as reference for the cache data","source-7#Source":"ts-common/src/cache/interfaces/cache.interface.ts:14","type#type":"type: string\nType of the passcode","source-8#Source":"ts-common/src/cache/interfaces/cache.interface.ts:19","version#version":"version: number","inherited-from-5#Inherited from":"AuditInterface.version","source-9#Source":"ts-core/dist/audit/interfaces/audit-version.interface.d.ts:3"}},"/reference/rockets/ts-common/interfaces/CacheUpdatableInterface":{"title":"Interface: CacheUpdatableInterface","data":{"":"@concepta/ts-common • DocsPackages Example / @concepta/ts-common / CacheUpdatableInterface","extends#Extends":"Pick<CacheInterface, \"key\" | \"type\" | \"data\" | \"assignee\">","properties#Properties":"","assignee#assignee":"assignee: ReferenceIdInterface<string>","inherited-from#Inherited from":"Pick.assignee","source#Source":"ts-core/dist/references/interfaces/reference-assignee.interface.d.ts:3","data#data":"data: null | string\ndata of the cache","inherited-from-1#Inherited from":"Pick.data","source-1#Source":"ts-common/src/cache/interfaces/cache.interface.ts:24","expiresin#expiresIn":"expiresIn: null | string","source-2#Source":"ts-common/src/cache/interfaces/cache-updatable.interface.ts:5","key#key":"key: string\nkey to be used as reference for the cache data","inherited-from-2#Inherited from":"Pick.key","source-3#Source":"ts-common/src/cache/interfaces/cache.interface.ts:14","type#type":"type: string\nType of the passcode","inherited-from-3#Inherited from":"Pick.type","source-4#Source":"ts-common/src/cache/interfaces/cache.interface.ts:19"}},"/reference/rockets/ts-common/interfaces/CacheUpdateInterface":{"title":"Interface: CacheUpdateInterface<O>","data":{"":"@concepta/ts-common • DocsPackages Example / @concepta/ts-common / CacheUpdateInterface","type-parameters#Type parameters":"• O extends ReferenceQueryOptionsInterface = ReferenceQueryOptionsInterface","methods#Methods":"","update#update()":"update(assignment, cache, options?): Promise<CacheInterface>\nUpdate a cache based on params","parameters#Parameters":"• assignment: stringThe cache assignment• cache: CacheUpdatableInterfaceThe dto with unique keys to delete• options?: O","returns#Returns":"Promise<CacheInterface>","source#Source":"ts-common/src/cache/interfaces/cache-update.interface.ts:16"}},"/reference/rockets/ts-common/interfaces/EmailSendInterface":{"title":"Interface: EmailSendInterface","data":{"":"@concepta/ts-common • DocsPackages Example / @concepta/ts-common / EmailSendInterface","extended-by#Extended by":"","methods#Methods":"","sendmail#sendMail()":"sendMail(sendMailOptions): Promise<void>","parameters#Parameters":"• sendMailOptions: EmailSendOptionsInterface","returns#Returns":"Promise<void>","source#Source":"ts-common/src/email/interfaces/email-send.interface.ts:4"}},"/reference/rockets/ts-common/interfaces/EmailSendOptionsInterface":{"title":"Interface: EmailSendOptionsInterface","data":{"":"@concepta/ts-common • DocsPackages Example / @concepta/ts-common / EmailSendOptionsInterface","properties#Properties":"","bcc#bcc?":"optional bcc: string | Address | (string | Address)[]","source#Source":"ts-common/src/email/interfaces/email-send-options.interface.ts:22","cc#cc?":"optional cc: string | Address | (string | Address)[]","source-1#Source":"ts-common/src/email/interfaces/email-send-options.interface.ts:21","context#context?":"optional context: LiteralObject<unknown>","source-2#Source":"ts-common/src/email/interfaces/email-send-options.interface.ts:25","from#from?":"optional from: string | Address","source-3#Source":"ts-common/src/email/interfaces/email-send-options.interface.ts:23","icalevent#icalEvent?":"optional icalEvent: string | IcalAttachment | Buffer | Readable","source-4#Source":"ts-common/src/email/interfaces/email-send-options.interface.ts:28","replyto#replyTo?":"optional replyTo: string | Address","source-5#Source":"ts-common/src/email/interfaces/email-send-options.interface.ts:24","subject#subject?":"optional subject: string","source-6#Source":"ts-common/src/email/interfaces/email-send-options.interface.ts:26","template#template?":"optional template: string","source-7#Source":"ts-common/src/email/interfaces/email-send-options.interface.ts:27","to#to?":"optional to: string | Address | (string | Address)[]","source-8#Source":"ts-common/src/email/interfaces/email-send-options.interface.ts:20"}},"/reference/rockets/ts-common/interfaces/FederatedCreatableInterface":{"title":"Interface: FederatedCreatableInterface","data":{"":"@concepta/ts-common • DocsPackages Example / @concepta/ts-common / FederatedCreatableInterface","extends#Extends":"Pick<FederatedInterface, \"provider\" | \"subject\" | \"user\">","properties#Properties":"","provider#provider":"provider: string\nProvider name (github, facebook, etc)","inherited-from#Inherited from":"Pick.provider","source#Source":"ts-common/src/federated/interfaces/federated.interface.ts:9","subject#subject":"subject: string\nThe reference identification for provider","todo#Todo":"rename to sub via ReferenceSubjectInterface","inherited-from-1#Inherited from":"Pick.subject","source-1#Source":"ts-common/src/federated/interfaces/federated.interface.ts:15","user#user":"user: ReferenceIdInterface<string>\nThe user federated will be associated to","inherited-from-2#Inherited from":"Pick.user","source-2#Source":"ts-common/src/federated/interfaces/federated.interface.ts:20"}},"/reference/rockets/ts-common/interfaces/FederatedInterface":{"title":"Interface: FederatedInterface","data":{"":"@concepta/ts-common • DocsPackages Example / @concepta/ts-common / FederatedInterfaceIdentifiable by id.","see#See":"https://en.wikipedia.org/wiki/Reference_(computer_science)","extends#Extends":"ReferenceIdInterface.AuditInterface","extended-by#Extended by":"","properties#Properties":"","datecreated#dateCreated":"dateCreated: Date","inherited-from#Inherited from":"AuditInterface.dateCreated","source#Source":"ts-core/dist/audit/interfaces/audit-date-created.interface.d.ts:3","datedeleted#dateDeleted":"dateDeleted: AuditDateDeleted","inherited-from-1#Inherited from":"AuditInterface.dateDeleted","source-1#Source":"ts-core/dist/audit/interfaces/audit-date-deleted.interface.d.ts:3","dateupdated#dateUpdated":"dateUpdated: Date","inherited-from-2#Inherited from":"AuditInterface.dateUpdated","source-2#Source":"ts-core/dist/audit/interfaces/audit-date-updated.interface.d.ts:3","id#id":"id: string","inherited-from-3#Inherited from":"ReferenceIdInterface.id","source-3#Source":"ts-core/dist/references/interfaces/reference-id.interface.d.ts:3","provider#provider":"provider: string\nProvider name (github, facebook, etc)","source-4#Source":"ts-common/src/federated/interfaces/federated.interface.ts:9","subject#subject":"subject: string\nThe reference identification for provider","todo#Todo":"rename to sub via ReferenceSubjectInterface","source-5#Source":"ts-common/src/federated/interfaces/federated.interface.ts:15","user#user":"user: ReferenceIdInterface<string>\nThe user federated will be associated to","source-6#Source":"ts-common/src/federated/interfaces/federated.interface.ts:20","version#version":"version: number","inherited-from-4#Inherited from":"AuditInterface.version","source-7#Source":"ts-core/dist/audit/interfaces/audit-version.interface.d.ts:3"}},"/reference/rockets/ts-common/interfaces/FederatedUpdatableInterface":{"title":"Interface: FederatedUpdatableInterface","data":{"":"@concepta/ts-common • DocsPackages Example / @concepta/ts-common / FederatedUpdatableInterface","extends#Extends":"Pick<FederatedInterface, \"provider\" | \"subject\">","properties#Properties":"","provider#provider":"provider: string\nProvider name (github, facebook, etc)","inherited-from#Inherited from":"Pick.provider","source#Source":"ts-common/src/federated/interfaces/federated.interface.ts:9","subject#subject":"subject: string\nThe reference identification for provider","todo#Todo":"rename to sub via ReferenceSubjectInterface","inherited-from-1#Inherited from":"Pick.subject","source-1#Source":"ts-common/src/federated/interfaces/federated.interface.ts:15"}},"/reference/rockets/ts-common/interfaces/InvitationAcceptedEventPayloadInterface":{"title":"Interface: InvitationAcceptedEventPayloadInterface","data":{"":"@concepta/ts-common • DocsPackages Example / @concepta/ts-common / InvitationAcceptedEventPayloadInterface","properties#Properties":"","data#data?":"optional data: LiteralObject<unknown>","source#Source":"ts-common/src/invitation/interfaces/invitation-accepted-event-payload.interface.ts:10","invitation#invitation":"invitation: InvitationInterface","source-1#Source":"ts-common/src/invitation/interfaces/invitation-accepted-event-payload.interface.ts:9","queryoptions#queryOptions?":"optional queryOptions: ReferenceQueryOptionsInterface","source-2#Source":"ts-common/src/invitation/interfaces/invitation-accepted-event-payload.interface.ts:11"}},"/reference/rockets/ts-common/interfaces/InvitationGetUserEventPayloadInterface":{"title":"Interface: InvitationGetUserEventPayloadInterface","data":{"":"@concepta/ts-common • DocsPackages Example / @concepta/ts-common / InvitationGetUserEventPayloadInterface","properties#Properties":"","data#data?":"optional data: LiteralObject<unknown>","source#Source":"ts-common/src/invitation/interfaces/invitation-get-user-event-payload.interface.ts:8","email#email":"email: string","source-1#Source":"ts-common/src/invitation/interfaces/invitation-get-user-event-payload.interface.ts:7","queryoptions#queryOptions?":"optional queryOptions: ReferenceQueryOptionsInterface","source-2#Source":"ts-common/src/invitation/interfaces/invitation-get-user-event-payload.interface.ts:9"}},"/reference/rockets/ts-common/interfaces/InvitationGetUserEventResponseInterface":{"title":"Interface: InvitationGetUserEventResponseInterface","data":{"":"@concepta/ts-common • DocsPackages Example / @concepta/ts-common /  by id.","see#See":"https://en.wikipedia.org/wiki/Reference_(computer_science)","extends#Extends":"ReferenceIdInterface.ReferenceEmailInterface","properties#Properties":"","email#email":"email: string","inherited-from#Inherited from":"ReferenceEmailInterface.email","source#Source":"ts-core/dist/references/interfaces/reference-email.interface.d.ts:3","id#id":"id: string","inherited-from-1#Inherited from":"ReferenceIdInterface.id","source-1#Source":"ts-core/dist/references/interfaces/reference-id.interface.d.ts:3"}},"/reference/rockets/ts-common/interfaces/InvitationInterface":{"title":"Interface: InvitationInterface","data":{"":"@concepta/ts-common • DocsPackages Example / @concepta/ts-common / InvitationInterfaceIdentifiable by id.","see#See":"https://en.wikipedia.org/wiki/Reference_(computer_science)","extends#Extends":"ReferenceIdInterface.ReferenceActiveInterface.AuditInterface","properties#Properties":"","active#active":"active: boolean","inherited-from#Inherited from":"ReferenceActiveInterface.active","source#Source":"ts-core/dist/references/interfaces/reference-active.interface.d.ts:3","category#category":"category: string","source-1#Source":"ts-common/src/invitation/interfaces/invitation.interface.ts:14","code#code":"code: string","source-2#Source":"ts-common/src/invitation/interfaces/invitation.interface.ts:13","constraints#constraints?":"optional constraints: LiteralObject<unknown>","source-3#Source":"ts-common/src/invitation/interfaces/invitation.interface.ts:16","datecreated#dateCreated":"dateCreated: Date","inherited-from-1#Inherited from":"AuditInterface.dateCreated","source-4#Source":"ts-core/dist/audit/interfaces/audit-date-created.interface.d.ts:3","datedeleted#dateDeleted":"dateDeleted: AuditDateDeleted","inherited-from-2#Inherited from":"AuditInterface.dateDeleted","source-5#Source":"ts-core/dist/audit/interfaces/audit-date-deleted.interface.d.ts:3","dateupdated#dateUpdated":"dateUpdated: Date","inherited-from-3#Inherited from":"AuditInterface.dateUpdated","source-6#Source":"ts-core/dist/audit/interfaces/audit-date-updated.interface.d.ts:3","email#email":"email: string","source-7#Source":"ts-common/src/invitation/interfaces/invitation.interface.ts:12","id#id":"id: string","inherited-from-4#Inherited from":"ReferenceIdInterface.id","source-8#Source":"ts-core/dist/references/interfaces/reference-id.interface.d.ts:3","user#user":"user: ReferenceIdInterface<string>","source-9#Source":"ts-common/src/invitation/interfaces/invitation.interface.ts:15","version#version":"version: number","inherited-from-5#Inherited from":"AuditInterface.version","source-10#Source":"ts-core/dist/audit/interfaces/audit-version.interface.d.ts:3"}},"/reference/rockets/ts-common/interfaces/OrgCreatableInterface":{"title":"Interface: OrgCreatableInterface","data":{"":"@concepta/ts-common • DocsPackages Example / @concepta/ts-common / OrgCreatableInterface","extends#Extends":"Pick<OrgInterface, \"name\" | \"owner\">.Partial<Pick<OrgInterface, \"active\">>","properties#Properties":"","active#active?":"optional active: boolean","inherited-from#Inherited from":"Partial.active","source#Source":"ts-core/dist/references/interfaces/reference-active.interface.d.ts:3","name#name":"name: string\nName","inherited-from-1#Inherited from":"Pick.name","source-1#Source":"ts-common/src/org/interfaces/org.interface.ts:17","owner#owner":"owner: ReferenceIdInterface<string>\nOrg Owner","inherited-from-2#Inherited from":"Pick.owner","source-2#Source":"ts-common/src/org/interfaces/org-owner.interface.ts:7"}},"/reference/rockets/ts-common/interfaces/OrgInterface":{"title":"Interface: OrgInterface","data":{"":"@concepta/ts-common • DocsPackages Example / @concepta/ts-common / OrgInterfaceIdentifiable by id.","see#See":"https://en.wikipedia.org/wiki/Reference_(computer_science)","extends#Extends":"ReferenceIdInterface.ReferenceActiveInterface.AuditInterface.OrgOwnerInterface","extended-by#Extended by":"","properties#Properties":"","active#active":"active: boolean","inherited-from#Inherited from":"ReferenceActiveInterface.active","source#Source":"ts-core/dist/references/interfaces/reference-active.interface.d.ts:3","datecreated#dateCreated":"dateCreated: Date","inherited-from-1#Inherited from":"AuditInterface.dateCreated","source-1#Source":"ts-core/dist/audit/interfaces/audit-date-created.interface.d.ts:3","datedeleted#dateDeleted":"dateDeleted: AuditDateDeleted","inherited-from-2#Inherited from":"AuditInterface.dateDeleted","source-2#Source":"ts-core/dist/audit/interfaces/audit-date-deleted.interface.d.ts:3","dateupdated#dateUpdated":"dateUpdated: Date","inherited-from-3#Inherited from":"AuditInterface.dateUpdated","source-3#Source":"ts-core/dist/audit/interfaces/audit-date-updated.interface.d.ts:3","id#id":"id: string","inherited-from-4#Inherited from":"ReferenceIdInterface.id","source-4#Source":"ts-core/dist/references/interfaces/reference-id.interface.d.ts:3","members#members?":"optional members: OrgMemberInterface","source-5#Source":"ts-common/src/org/interfaces/org.interface.ts:18","name#name":"name: string\nName","source-6#Source":"ts-common/src/org/interfaces/org.interface.ts:17","owner#owner":"owner: ReferenceIdInterface<string>\nOrg Owner","inherited-from-5#Inherited from":"OrgOwnerInterface.owner","source-7#Source":"ts-common/src/org/interfaces/org-owner.interface.ts:7","version#version":"version: number","inherited-from-6#Inherited from":"AuditInterface.version","source-8#Source":"ts-core/dist/audit/interfaces/audit-version.interface.d.ts:3"}},"/reference/rockets/ts-common/interfaces/OrgMemberInterface":{"title":"Interface: OrgMemberInterface","data":{"":"@concepta/ts-common • DocsPackages Example / @concepta/ts-common / OrgMemberInterfaceIdentifiable by id.","see#See":"https://en.wikipedia.org/wiki/Reference_(computer_science)","extends#Extends":"ReferenceIdInterface.ReferenceActiveInterface.AuditInterface","properties#Properties":"","active#active":"active: boolean","inherited-from#Inherited from":"ReferenceActiveInterface.active","source#Source":"ts-core/dist/references/interfaces/reference-active.interface.d.ts:3","datecreated#dateCreated":"dateCreated: Date","inherited-from-1#Inherited from":"AuditInterface.dateCreated","source-1#Source":"ts-core/dist/audit/interfaces/audit-date-created.interface.d.ts:3","datedeleted#dateDeleted":"dateDeleted: AuditDateDeleted","inherited-from-2#Inherited from":"AuditInterface.dateDeleted","source-2#Source":"ts-core/dist/audit/interfaces/audit-date-deleted.interface.d.ts:3","dateupdated#dateUpdated":"dateUpdated: Date","inherited-from-3#Inherited from":"AuditInterface.dateUpdated","source-3#Source":"ts-core/dist/audit/interfaces/audit-date-updated.interface.d.ts:3","id#id":"id: string","inherited-from-4#Inherited from":"ReferenceIdInterface.id","source-4#Source":"ts-core/dist/references/interfaces/reference-id.interface.d.ts:3","orgid#orgId":"orgId: string","source-5#Source":"ts-common/src/org/interfaces/org-member.interface.ts:11","userid#userId":"userId: string","source-6#Source":"ts-common/src/org/interfaces/org-member.interface.ts:12","version#version":"version: number","inherited-from-5#Inherited from":"AuditInterface.version","source-7#Source":"ts-core/dist/audit/interfaces/audit-version.interface.d.ts:3"}},"/reference/rockets/ts-common/interfaces/OrgOwnerInterface":{"title":"Interface: OrgOwnerInterface","data":{"":"@concepta/ts-common • DocsPackages Example / @concepta/ts-common / OrgOwnerInterface","extended-by#Extended by":"OrgInterface","properties#Properties":"","owner#owner":"owner: ReferenceIdInterface<string>\nOrg Owner","source#Source":"ts-common/src/org/interfaces/org-owner.interface.ts:7"}},"/reference/rockets/ts-common/interfaces/OrgUpdatableInterface":{"title":"Interface: OrgUpdatableInterface","data":{"":"@concepta/ts-common • DocsPackages Example / @concepta/ts-common / OrgUpdatableInterface","extends#Extends":"Pick<OrgInterface, \"name\" | \"active\" | \"owner\">","properties#Properties":"","active#active":"active: boolean","inherited-from#Inherited from":"Pick.active","source#Source":"ts-core/dist/references/interfaces/reference-active.interface.d.ts:3","name#name":"name: string\nName","inherited-from-1#Inherited from":"Pick.name","source-1#Source":"ts-common/src/org/interfaces/org.interface.ts:17","owner#owner":"owner: ReferenceIdInterface<string>\nOrg Owner","inherited-from-2#Inherited from":"Pick.owner","source-2#Source":"ts-common/src/org/interfaces/org-owner.interface.ts:7"}},"/reference/rockets/ts-common/interfaces/OtpClearInterface":{"title":"Interface: OtpClearInterface<O>","data":{"":"@concepta/ts-common • DocsPackages Example / @concepta/ts-common / OtpClearInterface","type-parameters#Type parameters":"• O extends ReferenceQueryOptionsInterface = ReferenceQueryOptionsInterface","methods#Methods":"","clear#clear()":"clear(assignment, otp, options?): Promise<void>\nClear all otps for assign in given category.","parameters#Parameters":"• assignment: stringThe assignment of the repository• otp: Pick<OtpInterface, \"assignee\" | \"category\">The otp to clear• options?: O","returns#Returns":"Promise<void>","source#Source":"ts-common/src/otp/interfaces/otp-clear.interface.ts:16"}},"/reference/rockets/ts-common/interfaces/OtpCreatableInterface":{"title":"Interface: OtpCreatableInterface","data":{"":"@concepta/ts-common • DocsPackages Example / @concepta/ts-common / OtpCreatableInterface","extends#Extends":"Pick<OtpInterface, \"category\" | \"type\" | \"assignee\">","properties#Properties":"","assignee#assignee":"assignee: ReferenceIdInterface<string>","inherited-from#Inherited from":"Pick.assignee","source#Source":"ts-core/dist/references/interfaces/reference-assignee.interface.d.ts:3","category#category":"category: string\nName","inherited-from-1#Inherited from":"Pick.category","source-1#Source":"ts-common/src/otp/interfaces/otp.interface.ts:14","expiresin#expiresIn":"expiresIn: string","source-2#Source":"ts-common/src/otp/interfaces/otp-creatable.interface.ts:5","type#type":"type: string\nType of the passcode","inherited-from-2#Inherited from":"Pick.type","source-3#Source":"ts-common/src/otp/interfaces/otp.interface.ts:19"}},"/reference/rockets/ts-common/interfaces/OtpCreateInterface":{"title":"Interface: OtpCreateInterface<O>","data":{"":"@concepta/ts-common • DocsPackages Example / @concepta/ts-common / OtpCreateInterface","type-parameters#Type parameters":"• O extends ReferenceQueryOptionsInterface = ReferenceQueryOptionsInterface","methods#Methods":"","create#create()":"create(assignment, otp, options?): Promise<OtpInterface>\nCreate a otp with a for the given assignee.","parameters#Parameters":"• assignment: stringThe otp assignment• otp: OtpCreatableInterfaceThe OTP to create• options?: O","returns#Returns":"Promise<OtpInterface>","source#Source":"ts-common/src/otp/interfaces/otp-create.interface.ts:18"}},"/reference/rockets/ts-common/interfaces/OtpDeleteInterface":{"title":"Interface: OtpDeleteInterface<O>","data":{"":"@concepta/ts-common • DocsPackages Example / @concepta/ts-common / OtpDeleteInterface","type-parameters#Type parameters":"• O extends ReferenceQueryOptionsInterface = ReferenceQueryOptionsInterface","methods#Methods":"","delete#delete()":"delete(assignment, otp, options?): Promise<void>\nDelete a otp based on params","parameters#Parameters":"• assignment: stringThe otp assignment• otp: Pick<OtpInterface, \"assignee\" | \"category\" | \"passcode\">The otp to delete• options?: O","returns#Returns":"Promise<void>","source#Source":"ts-common/src/otp/interfaces/otp-delete.interface.ts:15"}},"/reference/rockets/ts-common/interfaces/OtpInterface":{"title":"Interface: OtpInterface","data":{"":"@concepta/ts-common • DocsPackages Example / @concepta/ts-common / OtpInterfaceIdentifiable by id.","see#See":"https://en.wikipedia.org/wiki/Reference_(computer_science)","extends#Extends":"ReferenceIdInterface.ReferenceAssigneeInterface.AuditInterface","properties#Properties":"","assignee#assignee":"assignee: ReferenceIdInterface<string>","inherited-from#Inherited from":"ReferenceAssigneeInterface.assignee","source#Source":"ts-core/dist/references/interfaces/reference-assignee.interface.d.ts:3","category#category":"category: string\nName","source-1#Source":"ts-common/src/otp/interfaces/otp.interface.ts:14","datecreated#dateCreated":"dateCreated: Date","inherited-from-1#Inherited from":"AuditInterface.dateCreated","source-2#Source":"ts-core/dist/audit/interfaces/audit-date-created.interface.d.ts:3","datedeleted#dateDeleted":"dateDeleted: AuditDateDeleted","inherited-from-2#Inherited from":"AuditInterface.dateDeleted","source-3#Source":"ts-core/dist/audit/interfaces/audit-date-deleted.interface.d.ts:3","dateupdated#dateUpdated":"dateUpdated: Date","inherited-from-3#Inherited from":"AuditInterface.dateUpdated","source-4#Source":"ts-core/dist/audit/interfaces/audit-date-updated.interface.d.ts:3","expirationdate#expirationDate":"expirationDate: Date\nDate it will expire","source-5#Source":"ts-common/src/otp/interfaces/otp.interface.ts:29","id#id":"id: string","inherited-from-4#Inherited from":"ReferenceIdInterface.id","source-6#Source":"ts-core/dist/references/interfaces/reference-id.interface.d.ts:3","passcode#passcode":"passcode: string\nPasscode","source-7#Source":"ts-common/src/otp/interfaces/otp.interface.ts:24","type#type":"type: string\nType of the passcode","source-8#Source":"ts-common/src/otp/interfaces/otp.interface.ts:19","version#version":"version: number","inherited-from-5#Inherited from":"AuditInterface.version","source-9#Source":"ts-core/dist/audit/interfaces/audit-version.interface.d.ts:3"}},"/reference/rockets/ts-common/interfaces/OtpValidateInterface":{"title":"Interface: OtpValidateInterface<O>","data":{"":"@concepta/ts-common • DocsPackages Example / @concepta/ts-common / OtpValidateInterface","type-parameters#Type parameters":"• O extends ReferenceQueryOptionsInterface = ReferenceQueryOptionsInterface","methods#Methods":"","validate#validate()":"validate(assignment, otp, deleteIfValid, options?): Promise<null | ReferenceAssigneeInterface<ReferenceIdInterface<string>>>\nCheck if otp is valid","parameters#Parameters":"• assignment: stringThe otp assignment• otp: Pick<OtpInterface, \"category\" | \"passcode\">The otp to validate• deleteIfValid: booleanIf true, delete the otp if it is valid• options?: O","returns#Returns":"Promise<null | ReferenceAssigneeInterface<ReferenceIdInterface<string>>>","source#Source":"ts-common/src/otp/interfaces/otp-validate.interface.ts:18"}},"/reference/rockets/ts-common/interfaces/PasswordPlainCurrentInterface":{"title":"Interface: PasswordPlainCurrentInterface","data":{"":"@concepta/ts-common • DocsPackages Example / @concepta/ts-common / PasswordPlainCurrentInterfacePassword current text interface","properties#Properties":"","passwordcurrent#passwordCurrent":"passwordCurrent: string\nCurrent Password","source#Source":"ts-common/src/password/interfaces/password-plain-current.interface.ts:8"}},"/reference/rockets/ts-common/interfaces/PasswordPlainInterface":{"title":"Interface: PasswordPlainInterface","data":{"":"@concepta/ts-common • DocsPackages Example / @concepta/ts-common / PasswordPlainInterfacePassword plain text interface","extended-by#Extended by":"AuthenticationLoginInterface","properties#Properties":"","password#password":"password: string\nPassword","source#Source":"ts-common/src/password/interfaces/password-plain.interface.ts:8"}},"/reference/rockets/ts-common/interfaces/RoleAssigneesInterface":{"title":"Interface: RoleAssigneesInterface","data":{"":"@concepta/ts-common • DocsPackages Example / @concepta/ts-common / RoleAssigneesInterface","extended-by#Extended by":"RoleInterface","properties#Properties":"","assignees#assignees":"assignees: ReferenceAssigneeInterface<ReferenceIdInterface<string>>[]","source#Source":"ts-common/src/role/interfaces/role-assignees.interface.ts:4"}},"/reference/rockets/ts-common/interfaces/RoleAssignmentCreatableInterface":{"title":"Interface: RoleAssignmentCreatableInterface","data":{"":"@concepta/ts-common • DocsPackages Example / @concepta/ts-common / RoleAssignmentCreatableInterface","extends#Extends":"Pick<RoleAssignmentInterface, \"role\" | \"assignee\">","properties#Properties":"","assignee#assignee":"assignee: ReferenceIdInterface<string>","inherited-from#Inherited from":"Pick.assignee","source#Source":"ts-core/dist/references/interfaces/reference-assignee.interface.d.ts:3","role#role":"role: ReferenceIdInterface<string>\nRole","inherited-from-1#Inherited from":"Pick.role","source-1#Source":"ts-common/src/role/interfaces/role-assignment.interface.ts:14"}},"/reference/rockets/ts-common/interfaces/RoleAssignmentInterface":{"title":"Interface: RoleAssignmentInterface","data":{"":"@concepta/ts-common • DocsPackages Example / @concepta/ts-common / RoleAssignmentInterfaceIdentifiable by id.","see#See":"https://en.wikipedia.org/wiki/Reference_(computer_science)","extends#Extends":"ReferenceIdInterface.AuditInterface.ReferenceAssigneeInterface","properties#Properties":"","assignee#assignee":"assignee: ReferenceIdInterface<string>","inherited-from#Inherited from":"ReferenceAssigneeInterface.assignee","source#Source":"ts-core/dist/references/interfaces/reference-assignee.interface.d.ts:3","datecreated#dateCreated":"dateCreated: Date","inherited-from-1#Inherited from":"AuditInterface.dateCreated","source-1#Source":"ts-core/dist/audit/interfaces/audit-date-created.interface.d.ts:3","datedeleted#dateDeleted":"dateDeleted: AuditDateDeleted","inherited-from-2#Inherited from":"AuditInterface.dateDeleted","source-2#Source":"ts-core/dist/audit/interfaces/audit-date-deleted.interface.d.ts:3","dateupdated#dateUpdated":"dateUpdated: Date","inherited-from-3#Inherited from":"AuditInterface.dateUpdated","source-3#Source":"ts-core/dist/audit/interfaces/audit-date-updated.interface.d.ts:3","id#id":"id: string","inherited-from-4#Inherited from":"ReferenceIdInterface.id","source-4#Source":"ts-core/dist/references/interfaces/reference-id.interface.d.ts:3","role#role":"role: ReferenceIdInterface<string>\nRole","source-5#Source":"ts-common/src/role/interfaces/role-assignment.interface.ts:14","version#version":"version: number","inherited-from-5#Inherited from":"AuditInterface.version","source-6#Source":"ts-core/dist/audit/interfaces/audit-version.interface.d.ts:3"}},"/reference/rockets/ts-common/interfaces/RoleCreatableInterface":{"title":"Interface: RoleCreatableInterface","data":{"":"@concepta/ts-common • DocsPackages Example / @concepta/ts-common / RoleCreatableInterface","extends#Extends":"Pick<RoleInterface, \"name\" | \"description\">","properties#Properties":"","description#description":"description: string\nName","inherited-from#Inherited from":"Pick.description","source#Source":"ts-common/src/role/interfaces/role.interface.ts:16","name#name":"name: string\nName","inherited-from-1#Inherited from":"Pick.name","source-1#Source":"ts-common/src/role/interfaces/role.interface.ts:11"}},"/reference/rockets/ts-common/interfaces/RoleInterface":{"title":"Interface: RoleInterface","data":{"":"@concepta/ts-common • DocsPackages Example / @concepta/ts-common / RoleInterfaceIdentifiable by id.","see#See":"https://en.wikipedia.org/wiki/Reference_(computer_science)","extends#Extends":"ReferenceIdInterface.RoleAssigneesInterface.AuditInterface","extended-by#Extended by":"","properties#Properties":"","assignees#assignees":"assignees: ReferenceAssigneeInterface<ReferenceIdInterface<string>>[]","inherited-from#Inherited from":"RoleAssigneesInterface.assignees","source#Source":"ts-common/src/role/interfaces/role-assignees.interface.ts:4","datecreated#dateCreated":"dateCreated: Date","inherited-from-1#Inherited from":"AuditInterface.dateCreated","source-1#Source":"ts-core/dist/audit/interfaces/audit-date-created.interface.d.ts:3","datedeleted#dateDeleted":"dateDeleted: AuditDateDeleted","inherited-from-2#Inherited from":"AuditInterface.dateDeleted","source-2#Source":"ts-core/dist/audit/interfaces/audit-date-deleted.interface.d.ts:3","dateupdated#dateUpdated":"dateUpdated: Date","inherited-from-3#Inherited from":"AuditInterface.dateUpdated","source-3#Source":"ts-core/dist/audit/interfaces/audit-date-updated.interface.d.ts:3","description#description":"description: string\nName","source-4#Source":"ts-common/src/role/interfaces/role.interface.ts:16","id#id":"id: string","inherited-from-4#Inherited from":"ReferenceIdInterface.id","source-5#Source":"ts-core/dist/references/interfaces/reference-id.interface.d.ts:3","name#name":"name: string\nName","source-6#Source":"ts-common/src/role/interfaces/role.interface.ts:11","version#version":"version: number","inherited-from-5#Inherited from":"AuditInterface.version","source-7#Source":"ts-core/dist/audit/interfaces/audit-version.interface.d.ts:3"}},"/reference/rockets/ts-common/interfaces/RoleUpdatableInterface":{"title":"Interface: RoleUpdatableInterface","data":{"":"@concepta/ts-common • DocsPackages Example / @concepta/ts-common / RoleUpdatableInterface","extends#Extends":"Pick<RoleInterface, \"name\" | \"description\">","properties#Properties":"","description#description":"description: string\nName","inherited-from#Inherited from":"Pick.description","source#Source":"ts-common/src/role/interfaces/role.interface.ts:16","name#name":"name: string\nName","inherited-from-1#Inherited from":"Pick.name","source-1#Source":"ts-common/src/role/interfaces/role.interface.ts:11"}},"/reference/rockets/ts-common/interfaces/UserCreatableInterface":{"title":"Interface: UserCreatableInterface","data":{"":"@concepta/ts-common • DocsPackages Example / @concepta/ts-common / UserCreatableInterface","extends#Extends":"Pick<UserInterface, \"username\" | \"email\">.Partial<Pick<UserInterface, \"active\">>.Partial<PasswordPlainInterface>","properties#Properties":"","active#active?":"optional active: boolean","inherited-from#Inherited from":"Partial.active","source#Source":"ts-core/dist/references/interfaces/reference-active.interface.d.ts:3","email#email":"email: string","inherited-from-1#Inherited from":"Pick.email","source-1#Source":"ts-core/dist/references/interfaces/reference-email.interface.d.ts:3","password#password?":"optional password: string\nPassword","inherited-from-2#Inherited from":"Partial.password","source-2#Source":"ts-common/src/password/interfaces/password-plain.interface.ts:8","username#username":"username: string","inherited-from-3#Inherited from":"Pick.username","source-3#Source":"ts-core/dist/references/interfaces/reference-username.interface.d.ts:3"}},"/reference/rockets/ts-common/interfaces/UserInterface":{"title":"Interface: UserInterface","data":{"":"@concepta/ts-common • DocsPackages Example / @concepta/ts-common / UserInterfaceIdentifiable by id.","see#See":"https://en.wikipedia.org/wiki/Reference_(computer_science)","extends#Extends":"ReferenceIdInterface.ReferenceEmailInterface.ReferenceUsernameInterface.ReferenceActiveInterface.AuditInterface","extended-by#Extended by":"","properties#Properties":"","active#active":"active: boolean","inherited-from#Inherited from":"ReferenceActiveInterface.active","source#Source":"ts-core/dist/references/interfaces/reference-active.interface.d.ts:3","datecreated#dateCreated":"dateCreated: Date","inherited-from-1#Inherited from":"AuditInterface.dateCreated","source-1#Source":"ts-core/dist/audit/interfaces/audit-date-created.interface.d.ts:3","datedeleted#dateDeleted":"dateDeleted: AuditDateDeleted","inherited-from-2#Inherited from":"AuditInterface.dateDeleted","source-2#Source":"ts-core/dist/audit/interfaces/audit-date-deleted.interface.d.ts:3","dateupdated#dateUpdated":"dateUpdated: Date","inherited-from-3#Inherited from":"AuditInterface.dateUpdated","source-3#Source":"ts-core/dist/audit/interfaces/audit-date-updated.interface.d.ts:3","email#email":"email: string","inherited-from-4#Inherited from":"ReferenceEmailInterface.email","source-4#Source":"ts-core/dist/references/interfaces/reference-email.interface.d.ts:3","id#id":"id: string","inherited-from-5#Inherited from":"ReferenceIdInterface.id","source-5#Source":"ts-core/dist/references/interfaces/reference-id.interface.d.ts:3","username#username":"username: string","inherited-from-6#Inherited from":"ReferenceUsernameInterface.username","source-6#Source":"ts-core/dist/references/interfaces/reference-username.interface.d.ts:3","version#version":"version: number","inherited-from-7#Inherited from":"AuditInterface.version","source-7#Source":"ts-core/dist/audit/interfaces/audit-version.interface.d.ts:3"}},"/reference/rockets/ts-common/interfaces/UserUpdatableInterface":{"title":"Interface: UserUpdatableInterface","data":{"":"@concepta/ts-common • DocsPackages Example / @concepta/ts-common / UserUpdatableInterface","extends#Extends":"Partial<Pick<UserCreatableInterface, \"email\" | \"password\" | \"active\">>.Partial<PasswordPlainCurrentInterface>","properties#Properties":"","active#active?":"optional active: boolean","inherited-from#Inherited from":"Partial.active","source#Source":"ts-core/dist/references/interfaces/reference-active.interface.d.ts:3","email#email?":"optional email: string","inherited-from-1#Inherited from":"Partial.email","source-1#Source":"ts-core/dist/references/interfaces/reference-email.interface.d.ts:3","password#password?":"optional password: string\nPassword","inherited-from-2#Inherited from":"Partial.password","source-2#Source":"ts-common/src/password/interfaces/password-plain.interface.ts:8","passwordcurrent#passwordCurrent?":"optional passwordCurrent: string\nCurrent Password","inherited-from-3#Inherited from":"Partial.passwordCurrent","source-3#Source":"ts-common/src/password/interfaces/password-plain-current.interface.ts:8"}},"/reference/rockets/ts-common/variables/INVITATION_MODULE_CATEGORY_ORG_KEY":{"title":"Variable: INVITATION_MODULE_CATEGORY_ORG_KEY","data":{"":"@concepta/ts-common • DocsPackages Example / @concepta/ts-common / INVITATION_MODULE_CATEGORY_ORG_KEY\nconst INVITATION_MODULE_CATEGORY_ORG_KEY: \"org\" = 'org'","source#Source":"ts-common/src/invitation/invitation.contants.ts:2"}},"/reference/rockets/ts-common/variables/INVITATION_MODULE_CATEGORY_USER_KEY":{"title":"Variable: INVITATION_MODULE_CATEGORY_USER_KEY","data":{"":"@concepta/ts-common • DocsPackages Example / @concepta/ts-common / INVITATION_MODULE_CATEGORY_USER_KEY\nconst INVITATION_MODULE_CATEGORY_USER_KEY: \"user\" = 'user'","source#Source":"ts-common/src/invitation/invitation.contants.ts:1"}},"/reference/rockets/ts-core/README":{"title":"Rockets Typescript Core","data":{"":"@concepta/ts-core • DocsPackages Example / @concepta/ts-coreCore Typescript interfaces, classes and utilities.","project#Project":"","installation#Installation":"yarn add @concepta/ts-core"}},"/reference/rockets/ts-core/classes/NotAnErrorException":{"title":"Class: NotAnErrorException","data":{"":"@concepta/ts-core • DocsPackages Example / @concepta/ts-core / NotAnErrorException","extends#Extends":"Error","implements#Implements":"ExceptionInterface","constructors#Constructors":"","new-notanerrorexception#new NotAnErrorException()":"new NotAnErrorException(originalError, message): NotAnErrorException","parameters#Parameters":"• originalError: unknown• message: string= 'An error was caught that is not an Error object'","returns#Returns":"NotAnErrorException","overrides#Overrides":"Error.constructor","source#Source":".tmp/repos/rockets/packages/ts-core/src/exceptions/not-an-error.exception.ts:10","properties#Properties":"","context#context":"context: object\nAdditional context","originalerror#originalError":"originalError: unknown","implementation-of#Implementation of":"ExceptionInterface.context","source-1#Source":".tmp/repos/rockets/packages/ts-core/src/exceptions/not-an-error.exception.ts:6","errorcode#errorCode":"errorCode: string = 'NOT_AN_ERROR'\nThe error code.","implementation-of-1#Implementation of":"ExceptionInterface.errorCode","source-2#Source":".tmp/repos/rockets/packages/ts-core/src/exceptions/not-an-error.exception.ts:4","message#message":"message: string","implementation-of-2#Implementation of":"ExceptionInterface.message","inherited-from#Inherited from":"Error.message","source-3#Source":"node_modules/typescript/lib/lib.es5.d.ts:1054","name#name":"name: string","implementation-of-3#Implementation of":"ExceptionInterface.name","inherited-from-1#Inherited from":"Error.name","source-4#Source":"node_modules/typescript/lib/lib.es5.d.ts:1053","stack#stack?":"optional stack: string","implementation-of-4#Implementation of":"ExceptionInterface.stack","inherited-from-2#Inherited from":"Error.stack","source-5#Source":"node_modules/typescript/lib/lib.es5.d.ts:1055","preparestacktrace#prepareStackTrace()?":"static optional prepareStackTrace: (err, stackTraces) => any\nOptional override for formatting stack traces","see#See":"https://v8.dev/docs/stack-trace-api#customizing-stack-traces","parameters-1#Parameters":"• err: Error• stackTraces: CallSite[]","returns-1#Returns":"any","inherited-from-3#Inherited from":"Error.prepareStackTrace","source-6#Source":".tmp/repos/rockets/node_modules/@types/node/globals.d.ts:11","stacktracelimit#stackTraceLimit":"static stackTraceLimit: number","inherited-from-4#Inherited from":"Error.stackTraceLimit","source-7#Source":".tmp/repos/rockets/node_modules/@types/node/globals.d.ts:13","methods#Methods":"","capturestacktrace#captureStackTrace()":"static captureStackTrace(targetObject, constructorOpt?): void\nCreate .stack property on a target object","parameters-2#Parameters":"• targetObject: object• constructorOpt?: Function","returns-2#Returns":"void","inherited-from-5#Inherited from":"Error.captureStackTrace","source-8#Source":".tmp/repos/rockets/node_modules/@types/node/globals.d.ts:4"}},"/reference/rockets/ts-core/functions/mapNonErrorToException":{"title":"Function: mapNonErrorToException()","data":{"":"@concepta/ts-core • DocsPackages Example / @concepta/ts-core / mapNonErrorToException\nmapNonErrorToException(originalError): Error","parameters#Parameters":"• originalError: unknown","returns#Returns":"Error","source#Source":".tmp/repos/rockets/packages/ts-core/src/utils/map-non-error-to-exception.util.ts:3"}},"/reference/rockets/ts-core/interfaces/AuditDateCreatedInterface":{"title":"Interface: AuditDateCreatedInterface<T>","data":{"":"@concepta/ts-core • DocsPackages Example / @concepta/ts-core / AuditDateCreatedInterfaceDate data was created.","extended-by#Extended by":"AuditInterface","type-parameters#Type parameters":"• T = AuditDateCreated","properties#Properties":"","datecreated#dateCreated":"dateCreated: T","source#Source":".tmp/repos/rockets/packages/ts-core/src/audit/interfaces/audit-date-created.interface.ts:7"}},"/reference/rockets/ts-core/globals":{"title":"@concepta/ts-core","data":{"":"@concepta/ts-core • DocsPackages Example / @concepta/ts-core","classes#Classes":"NotAnErrorException","interfaces#Interfaces":"AuditDateCreatedInterface\nAuditDateDeletedInterface\nAuditDateUpdatedInterface\nAuditInterface\nAuditVersionInterface\nCreateOneInterface\nExceptionInterface\nLiteralObject\nLookupEmailInterface\nLookupIdInterface\nLookupSubjectInterface\nLookupUsernameInterface\nReferenceActiveInterface\nReferenceAssigneeInterface\nReferenceEmailInterface\nReferenceIdInterface\nReferenceQueryOptionsInterface\nReferenceSubjectInterface\nReferenceUsernameInterface\nRemoveOneInterface\nReplaceOneInterface\nType\nUpdateOneInterface","type-aliases#Type Aliases":"AuditDateCreated\nAuditDateDeleted\nAuditDateUpdated\nAuditVersion\nExceptionContext\nReferenceActive\nReferenceAssignment\nReferenceEmail\nReferenceId\nReferenceSubject\nReferenceUsername","functions#Functions":"mapNonErrorToException"}},"/reference/rockets/ts-core/interfaces/AuditDateDeletedInterface":{"title":"Interface: AuditDateDeletedInterface<T>","data":{"":"@concepta/ts-core • DocsPackages Example / @concepta/ts-core / AuditDateDeletedInterfaceDate data was deleted.","extended-by#Extended by":"AuditInterface","type-parameters#Type parameters":"• T = AuditDateDeleted","properties#Properties":"","datedeleted#dateDeleted":"dateDeleted: T","source#Source":".tmp/repos/rockets/packages/ts-core/src/audit/interfaces/audit-date-deleted.interface.ts:7"}},"/reference/rockets/ts-core/interfaces/AuditDateUpdatedInterface":{"title":"Interface: AuditDateUpdatedInterface<T>","data":{"":"@concepta/ts-core • DocsPackages Example / @concepta/ts-core / AuditDateUpdatedInterfaceDate data was last updated.","extended-by#Extended by":"AuditInterface","type-parameters#Type parameters":"• T = AuditDateUpdated","properties#Properties":"","dateupdated#dateUpdated":"dateUpdated: T","source#Source":".tmp/repos/rockets/packages/ts-core/src/audit/interfaces/audit-date-updated.interface.ts:7"}},"/reference/rockets/ts-core/interfaces/AuditInterface":{"title":"Interface: AuditInterface","data":{"":"@concepta/ts-core • DocsPackages Example / @concepta/ts-core / AuditInterfaceDate data was created.","extends#Extends":"AuditDateCreatedInterface.AuditDateUpdatedInterface.AuditDateDeletedInterface.AuditVersionInterface","extended-by#Extended by":"","properties#Properties":"","datecreated#dateCreated":"dateCreated: Date","inherited-from#Inherited from":"AuditDateCreatedInterface.dateCreated","source#Source":".tmp/repos/rockets/packages/ts-core/src/audit/interfaces/audit-date-created.interface.ts:7","datedeleted#dateDeleted":"dateDeleted: AuditDateDeleted","inherited-from-1#Inherited from":"AuditDateDeletedInterface.dateDeleted","source-1#Source":".tmp/repos/rockets/packages/ts-core/src/audit/interfaces/audit-date-deleted.interface.ts:7","dateupdated#dateUpdated":"dateUpdated: Date","inherited-from-2#Inherited from":"AuditDateUpdatedInterface.dateUpdated","source-2#Source":".tmp/repos/rockets/packages/ts-core/src/audit/interfaces/audit-date-updated.interface.ts:7","version#version":"version: number","inherited-from-3#Inherited from":"AuditVersionInterface.version","source-3#Source":".tmp/repos/rockets/packages/ts-core/src/audit/interfaces/audit-version.interface.ts:7"}},"/reference/rockets/ts-core/interfaces/AuditVersionInterface":{"title":"Interface: AuditVersionInterface<T>","data":{"":"@concepta/ts-core • DocsPackages Example / @concepta/ts-core / AuditVersionInterfaceThe latest version of the data.","extended-by#Extended by":"AuditInterface","type-parameters#Type parameters":"• T = AuditVersion","properties#Properties":"","version#version":"version: T","source#Source":".tmp/repos/rockets/packages/ts-core/src/audit/interfaces/audit-version.interface.ts:7"}},"/reference/rockets/ts-core/interfaces/CreateOneInterface":{"title":"Interface: CreateOneInterface<T, U, O>","data":{"":"@concepta/ts-core • DocsPackages Example / @concepta/ts-core / CreateOneInterface","extended-by#Extended by":"","type-parameters#Type parameters":"• T• U extends ReferenceIdInterface• O extends ReferenceQueryOptionsInterface = ReferenceQueryOptionsInterface","properties#Properties":"","create#create()":"create: (object, options?) => Promise<U>","parameters#Parameters":"• object: T• options?: O","returns#Returns":"Promise<U>","source#Source":".tmp/repos/rockets/packages/ts-core/src/references/interfaces/mutate/create-one.interface.ts:9"}},"/reference/rockets/ts-core/interfaces/ExceptionInterface":{"title":"Interface: ExceptionInterface","data":{"":"@concepta/ts-core • DocsPackages Example / @concepta/ts-core / ExceptionInterface","extends#Extends":"Error","extended-by#Extended by":"","properties#Properties":"","context#context?":"optional context: ExceptionContext\nAdditional context","source#Source":".tmp/repos/rockets/packages/ts-core/src/exceptions/interfaces/exception.interface.ts:12","errorcode#errorCode":"errorCode: string\nThe error code.","source-1#Source":".tmp/repos/rockets/packages/ts-core/src/exceptions/interfaces/exception.interface.ts:7","message#message":"message: string","inherited-from#Inherited from":"Error.message","source-2#Source":"node_modules/typescript/lib/lib.es5.d.ts:1054","name#name":"name: string","inherited-from-1#Inherited from":"Error.name","source-3#Source":"node_modules/typescript/lib/lib.es5.d.ts:1053","stack#stack?":"optional stack: string","inherited-from-2#Inherited from":"Error.stack","source-4#Source":"node_modules/typescript/lib/lib.es5.d.ts:1055"}},"/reference/rockets/ts-core/interfaces/LiteralObject":{"title":"Interface: LiteralObject<T>","data":{"":"@concepta/ts-core • DocsPackages Example / @concepta/ts-core / LiteralObject","extends#Extends":"Record<string, T>","type-parameters#Type parameters":"• T = unknown"}},"/reference/rockets/ts-core/interfaces/LookupEmailInterface":{"title":"Interface: LookupEmailInterface<T, U, O>","data":{"":"@concepta/ts-core • DocsPackages Example / @concepta/ts-core / LookupEmailInterface","extended-by#Extended by":"","type-parameters#Type parameters":"• T = ReferenceEmail• U = ReferenceIdInterface• O extends ReferenceQueryOptionsInterface = ReferenceQueryOptionsInterface","properties#Properties":"","byemail#byEmail()":"byEmail: (email, options?) => Promise<null | U>","parameters#Parameters":"• email: T• options?: O","returns#Returns":"Promise<null | U>","source#Source":".tmp/repos/rockets/packages/ts-core/src/references/interfaces/lookup/lookup-email.interface.ts:10"}},"/reference/rockets/ts-core/interfaces/LookupIdInterface":{"title":"Interface: LookupIdInterface<T, U, O>","data":{"":"@concepta/ts-core • DocsPackages Example / @concepta/ts-core / LookupIdInterface","extended-by#Extended by":"","type-parameters#Type parameters":"• T = ReferenceId• U = ReferenceIdInterface• O extends ReferenceQueryOptionsInterface = ReferenceQueryOptionsInterface","properties#Properties":"","byid#byId()":"byId: (id, options?) => Promise<null | U>","parameters#Parameters":"• id: T• options?: O","returns#Returns":"Promise<null | U>","source#Source":".tmp/repos/rockets/packages/ts-core/src/references/interfaces/lookup/lookup-id.interface.ts:10"}},"/reference/rockets/ts-core/interfaces/LookupSubjectInterface":{"title":"Interface: LookupSubjectInterface<T, U, O>","data":{"":"@concepta/ts-core • DocsPackages Example / @concepta/ts-core / LookupSubjectInterface","extended-by#Extended by":"","type-parameters#Type parameters":"• T = ReferenceSubject• U = ReferenceIdInterface• O extends ReferenceQueryOptionsInterface = ReferenceQueryOptionsInterface","properties#Properties":"","bysubject#bySubject()":"bySubject: (subject, options?) => Promise<null | U>","parameters#Parameters":"• subject: T• options?: O","returns#Returns":"Promise<null | U>","source#Source":".tmp/repos/rockets/packages/ts-core/src/references/interfaces/lookup/lookup-subject.interface.ts:10"}},"/reference/rockets/ts-core/interfaces/LookupUsernameInterface":{"title":"Interface: LookupUsernameInterface<T, U, O>","data":{"":"@concepta/ts-core • DocsPackages Example / @concepta/ts-core / LookupUsernameInterface","extended-by#Extended by":"","type-parameters#Type parameters":"• T = ReferenceUsername• U = ReferenceIdInterface• O extends ReferenceQueryOptionsInterface = ReferenceQueryOptionsInterface","properties#Properties":"","byusername#byUsername()":"byUsername: (username, options?) => Promise<null | U>","parameters#Parameters":"• username: T• options?: O","returns#Returns":"Promise<null | U>","source#Source":".tmp/repos/rockets/packages/ts-core/src/references/interfaces/lookup/lookup-username.interface.ts:10"}},"/reference/rockets/ts-core/interfaces/ReferenceActiveInterface":{"title":"Interface: ReferenceActiveInterface<T>","data":{"":"@concepta/ts-core • DocsPackages Example / @concepta/ts-core / ReferenceActiveInterfaceIdentifiable by active.","extended-by#Extended by":"","type-parameters#Type parameters":"• T = ReferenceActive","properties#Properties":"","active#active":"active: T","source#Source":".tmp/repos/rockets/packages/ts-core/src/references/interfaces/reference-active.interface.ts:7"}},"/reference/rockets/ts-core/interfaces/ReferenceAssigneeInterface":{"title":"Interface: ReferenceAssigneeInterface<T>","data":{"":"@concepta/ts-core • DocsPackages Example / @concepta/ts-core / ReferenceAssigneeInterfaceIdentifiable by assignee.","extended-by#Extended by":"","type-parameters#Type parameters":"• T extends ReferenceIdInterface = ReferenceIdInterface","properties#Properties":"","assignee#assignee":"assignee: T","source#Source":".tmp/repos/rockets/packages/ts-core/src/references/interfaces/reference-assignee.interface.ts:9"}},"/reference/rockets/ts-core/interfaces/ReferenceEmailInterface":{"title":"Interface: ReferenceEmailInterface<T>","data":{"":"@concepta/ts-core • DocsPackages Example / @concepta/ts-core / ReferenceEmailInterfaceIdentifiable by email.","extended-by#Extended by":"","type-parameters#Type parameters":"• T = ReferenceEmail","properties#Properties":"","email#email":"email: T","source#Source":".tmp/repos/rockets/packages/ts-core/src/references/interfaces/reference-email.interface.ts:7"}},"/reference/rockets/ts-core/interfaces/ReferenceIdInterface":{"title":"Interface: ReferenceIdInterface<T>","data":{"":"@concepta/ts-core • DocsPackages Example / @concepta/ts-core / ReferenceIdInterfaceIdentifiable by id.","see#See":"https://en.wikipedia.org/wiki/Reference_(computer_science)","extended-by#Extended by":"","type-parameters#Type parameters":"• T = ReferenceId","properties#Properties":"","id#id":"id: T","source#Source":".tmp/repos/rockets/packages/ts-core/src/references/interfaces/reference-id.interface.ts:9"}},"/reference/rockets/ts-core/interfaces/ReferenceQueryOptionsInterface":{"title":"Interface: ReferenceQueryOptionsInterface","data":{"":"@concepta/ts-core • DocsPackages Example / @concepta/ts-core / ReferenceQueryOptionsInterface"}},"/reference/rockets/ts-core/interfaces/ReferenceSubjectInterface":{"title":"Interface: ReferenceSubjectInterface<T>","data":{"":"@concepta/ts-core • DocsPackages Example / @concepta/ts-core / ReferenceSubjectInterfaceIdentifiable by subject (JWT).","extended-by#Extended by":"","type-parameters#Type parameters":"• T = ReferenceSubject","properties#Properties":"","sub#sub":"sub: T","source#Source":".tmp/repos/rockets/packages/ts-core/src/references/interfaces/reference-subject.interface.ts:7"}},"/reference/rockets/ts-core/interfaces/ReferenceUsernameInterface":{"title":"Interface: ReferenceUsernameInterface<T>","data":{"":"@concepta/ts-core • DocsPackages Example / @concepta/ts-core / ReferenceUsernameInterfaceIdentifiable by username.","extended-by#Extended by":"","type-parameters#Type parameters":"• T = ReferenceUsername","properties#Properties":"","username#username":"username: T","source#Source":".tmp/repos/rockets/packages/ts-core/src/references/interfaces/reference-username.interface.ts:7"}},"/reference/rockets/ts-core/interfaces/RemoveOneInterface":{"title":"Interface: RemoveOneInterface<T, U, O>","data":{"":"@concepta/ts-core • DocsPackages Example / @concepta/ts-core / RemoveOneInterface","extended-by#Extended by":"","type-parameters#Type parameters":"• T extends ReferenceIdInterface• U extends ReferenceIdInterface = T• O extends ReferenceQueryOptionsInterface = ReferenceQueryOptionsInterface","properties#Properties":"","remove#remove()":"remove: (object, options?) => Promise<U>","parameters#Parameters":"• object: T• options?: O","returns#Returns":"Promise<U>","source#Source":".tmp/repos/rockets/packages/ts-core/src/references/interfaces/mutate/remove-one.interface.ts:9"}},"/reference/rockets/ts-core/interfaces/ReplaceOneInterface":{"title":"Interface: ReplaceOneInterface<T, U, O>","data":{"":"@concepta/ts-core • DocsPackages Example / @concepta/ts-core / ReplaceOneInterface","extended-by#Extended by":"","type-parameters#Type parameters":"• T extends ReferenceIdInterface• U extends ReferenceIdInterface = T• O extends ReferenceQueryOptionsInterface = ReferenceQueryOptionsInterface","properties#Properties":"","replace#replace()":"replace: (object, options?) => Promise<U>","parameters#Parameters":"• object: T• options?: O","returns#Returns":"Promise<U>","source#Source":".tmp/repos/rockets/packages/ts-core/src/references/interfaces/mutate/replace-one.interface.ts:9"}},"/reference/rockets/ts-core/interfaces/Type":{"title":"Interface: Type<T>","data":{"":"@concepta/ts-core • DocsPackages Example / @concepta/ts-core / Type","extends#Extends":"Function","type-parameters#Type parameters":"• T = unknown","constructors#Constructors":"","new-type#new Type()":"new Type(...args): T","parameters#Parameters":"• ...args: unknown[]","returns#Returns":"T","inherited-from#Inherited from":"Function.constructor","source#Source":".tmp/repos/rockets/packages/ts-core/src/utils/interfaces/type.interface.ts:2","properties#Properties":"","arguments#arguments":"arguments: any","inherited-from-1#Inherited from":"Function.arguments","source-1#Source":"node_modules/typescript/lib/lib.es5.d.ts:304","caller#caller":"caller: Function","inherited-from-2#Inherited from":"Function.caller","source-2#Source":"node_modules/typescript/lib/lib.es5.d.ts:305","length#length":"readonly length: number","inherited-from-3#Inherited from":"Function.length","source-3#Source":"node_modules/typescript/lib/lib.es5.d.ts:301","name#name":"readonly name: string\nReturns the name of the function. Function names are read-only and can not be changed.","inherited-from-4#Inherited from":"Function.name","source-4#Source":"node_modules/typescript/lib/lib.es2015.core.d.ts:97","prototype#prototype":"prototype: any","inherited-from-5#Inherited from":"Function.prototype","source-5#Source":"node_modules/typescript/lib/lib.es5.d.ts:300","methods#Methods":"","hasinstance#[hasInstance]()":"[hasInstance](value): boolean\nDetermines whether the given value inherits from this function if this function was used\r\nas a constructor function.A constructor function can control which objects are recognized as its instances by\r\n'instanceof' by overriding this method.","parameters-1#Parameters":"• value: any","returns-1#Returns":"boolean","inherited-from-6#Inherited from":"Function.[hasInstance]","source-6#Source":"node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts:162","apply#apply()":"apply(this, thisArg, argArray?): any\nCalls the function, substituting the specified object for the this value of the function, and the specified array for the arguments of the function.","parameters-2#Parameters":"• this: Function• thisArg: anyThe object to be used as the this object.• argArray?: anyA set of arguments to be passed to the function.","returns-2#Returns":"any","inherited-from-7#Inherited from":"Function.apply","source-7#Source":"node_modules/typescript/lib/lib.es5.d.ts:280","bind#bind()":"bind(this, thisArg, ...argArray): any\nFor a given function, creates a bound function that has the same body as the original function.\r\nThe this object of the bound function is associated with the specified object, and has the specified initial parameters.","parameters-3#Parameters":"• this: Function• thisArg: anyAn object to which the this keyword can refer inside the new function.• ...argArray: any[]A list of arguments to be passed to the new function.","returns-3#Returns":"any","inherited-from-8#Inherited from":"Function.bind","source-8#Source":"node_modules/typescript/lib/lib.es5.d.ts:295","call#call()":"call(this, thisArg, ...argArray): any\nCalls a method of an object, substituting another object for the current object.","parameters-4#Parameters":"• this: Function• thisArg: anyThe object to be used as the current object.• ...argArray: any[]A list of arguments to be passed to the method.","returns-4#Returns":"any","inherited-from-9#Inherited from":"Function.call","source-9#Source":"node_modules/typescript/lib/lib.es5.d.ts:287","tostring#toString()":"toString(): string\nReturns a string representation of a function.","returns-5#Returns":"string","inherited-from-10#Inherited from":"Function.toString","source-10#Source":"node_modules/typescript/lib/lib.es5.d.ts:298"}},"/reference/rockets/ts-core/interfaces/UpdateOneInterface":{"title":"Interface: UpdateOneInterface<T, U, O>","data":{"":"@concepta/ts-core • DocsPackages Example / @concepta/ts-core / UpdateOneInterface","extended-by#Extended by":"","type-parameters#Type parameters":"• T extends ReferenceIdInterface• U extends ReferenceIdInterface = T• O extends ReferenceQueryOptionsInterface = ReferenceQueryOptionsInterface","properties#Properties":"","update#update()":"update: (object, options?) => Promise<U>","parameters#Parameters":"• object: T• options?: O","returns#Returns":"Promise<U>","source#Source":".tmp/repos/rockets/packages/ts-core/src/references/interfaces/mutate/update-one.interface.ts:9"}},"/reference/rockets/ts-core/type-aliases/AuditDateCreated":{"title":"Type alias: AuditDateCreated","data":{"":"@concepta/ts-core • DocsPackages Example / @concepta/ts-core / AuditDateCreated\nAuditDateCreated: Date","source#Source":".tmp/repos/rockets/packages/ts-core/src/audit/audit.types.ts:1"}},"/reference/rockets/ts-core/type-aliases/AuditDateDeleted":{"title":"Type alias: AuditDateDeleted","data":{"":"@concepta/ts-core • DocsPackages Example / @concepta/ts-core / AuditDateDeleted\nAuditDateDeleted: Date | null","source#Source":".tmp/repos/rockets/packages/ts-core/src/audit/audit.types.ts:3"}},"/reference/rockets/ts-core/type-aliases/AuditDateUpdated":{"title":"Type alias: AuditDateUpdated","data":{"":"@concepta/ts-core • DocsPackages Example / @concepta/ts-core / AuditDateUpdated\nAuditDateUpdated: Date","source#Source":".tmp/repos/rockets/packages/ts-core/src/audit/audit.types.ts:2"}},"/reference/rockets/ts-core/type-aliases/AuditVersion":{"title":"Type alias: AuditVersion","data":{"":"@concepta/ts-core • DocsPackages Example / @concepta/ts-core / AuditVersion\nAuditVersion: number","source#Source":".tmp/repos/rockets/packages/ts-core/src/audit/audit.types.ts:4"}},"/reference/rockets/ts-core/type-aliases/ExceptionContext":{"title":"Type alias: ExceptionContext","data":{"":"@concepta/ts-core • DocsPackages Example / @concepta/ts-core / ExceptionContext\nExceptionContext: Record<string, unknown> & object","type-declaration#Type declaration":"","originalerror#originalError?":"optional originalError: unknown","source#Source":".tmp/repos/rockets/packages/ts-core/src/core.types.ts:1"}},"/reference/rockets/ts-core/type-aliases/ReferenceActive":{"title":"Type alias: ReferenceActive","data":{"":"@concepta/ts-core • DocsPackages Example / @concepta/ts-core / ReferenceActive\nReferenceActive: boolean","source#Source":".tmp/repos/rockets/packages/ts-core/src/references/reference.types.ts:2"}},"/reference/rockets/ts-core/type-aliases/ReferenceAssignment":{"title":"Type alias: ReferenceAssignment","data":{"":"@concepta/ts-core • DocsPackages Example / @concepta/ts-core / ReferenceAssignment\nReferenceAssignment: string","source#Source":".tmp/repos/rockets/packages/ts-core/src/references/reference.types.ts:7"}},"/reference/rockets/ts-core/type-aliases/ReferenceEmail":{"title":"Type alias: ReferenceEmail","data":{"":"@concepta/ts-core • DocsPackages Example / @concepta/ts-core / ReferenceEmail\nReferenceEmail: string","source#Source":".tmp/repos/rockets/packages/ts-core/src/references/reference.types.ts:3"}},"/reference/rockets/ts-core/type-aliases/ReferenceId":{"title":"Type alias: ReferenceId","data":{"":"@concepta/ts-core • DocsPackages Example / @concepta/ts-core / ReferenceId\nReferenceId: string","source#Source":".tmp/repos/rockets/packages/ts-core/src/references/reference.types.ts:1"}},"/reference/rockets/ts-core/type-aliases/ReferenceSubject":{"title":"Type alias: ReferenceSubject","data":{"":"@concepta/ts-core • DocsPackages Example / @concepta/ts-core / ReferenceSubject\nReferenceSubject: string","source#Source":".tmp/repos/rockets/packages/ts-core/src/references/reference.types.ts:5"}},"/reference/rockets/ts-core/type-aliases/ReferenceUsername":{"title":"Type alias: ReferenceUsername","data":{"":"@concepta/ts-core • DocsPackages Example / @concepta/ts-core / ReferenceUsername\nReferenceUsername: string","source#Source":".tmp/repos/rockets/packages/ts-core/src/references/reference.types.ts:4"}},"/reference/rockets/typeorm-common/README":{"title":"Rockets TypeORM Common","data":{"":"@concepta/typeorm-common • DocsPackages Example / @concepta/typeorm-commonThe common module contains commonly used TypeORM embeds, utilities.","project#Project":"","installation#Installation":"yarn add @concepta/typeorm-common"}},"/reference/rockets/typeorm-common/classes/AuditPostgresEntity":{"title":"Class: abstract AuditPostgresEntity","data":{"":"@concepta/typeorm-common • DocsPackages Example / @concepta/typeorm-common / AuditPostgresEntityAudit Postgres Embed","extended-by#Extended by":"CommonPostgresEntity","implements#Implements":"AuditInterface","constructors#Constructors":"","new-auditpostgresentity#new AuditPostgresEntity()":"new AuditPostgresEntity(): AuditPostgresEntity","returns#Returns":"AuditPostgresEntity","properties#Properties":"","datecreated#dateCreated":"dateCreated: Date\nDate created.","implementation-of#Implementation of":"AuditInterface.dateCreated","source#Source":".tmp/repos/rockets/packages/typeorm-common/src/entities/audit/audit-postgres.entity.ts:23","datedeleted#dateDeleted":"dateDeleted: AuditDateDeleted\nDate deleted.","implementation-of-1#Implementation of":"AuditInterface.dateDeleted","source-1#Source":".tmp/repos/rockets/packages/typeorm-common/src/entities/audit/audit-postgres.entity.ts:35","dateupdated#dateUpdated":"dateUpdated: Date\nDate updated.","implementation-of-2#Implementation of":"AuditInterface.dateUpdated","source-2#Source":".tmp/repos/rockets/packages/typeorm-common/src/entities/audit/audit-postgres.entity.ts:29","version#version":"version: number\nVersion","implementation-of-3#Implementation of":"AuditInterface.version","source-3#Source":".tmp/repos/rockets/packages/typeorm-common/src/entities/audit/audit-postgres.entity.ts:41"}},"/reference/rockets/typeorm-common/classes/AuditSqlLiteEntity":{"title":"Class: abstract AuditSqlLiteEntity","data":{"":"@concepta/typeorm-common • DocsPackages Example / @concepta/typeorm-common / AuditSqlLiteEntityAudit SqlLite Embed","extended-by#Extended by":"CommonSqliteEntity","implements#Implements":"AuditInterface","constructors#Constructors":"","new-auditsqlliteentity#new AuditSqlLiteEntity()":"new AuditSqlLiteEntity(): AuditSqlLiteEntity","returns#Returns":"AuditSqlLiteEntity","properties#Properties":"","datecreated#dateCreated":"dateCreated: Date\nDate created.","implementation-of#Implementation of":"AuditInterface.dateCreated","source#Source":".tmp/repos/rockets/packages/typeorm-common/src/entities/audit/audit-sqlite.entity.ts:23","datedeleted#dateDeleted":"dateDeleted: AuditDateDeleted\nDate deleted.","implementation-of-1#Implementation of":"AuditInterface.dateDeleted","source-1#Source":".tmp/repos/rockets/packages/typeorm-common/src/entities/audit/audit-sqlite.entity.ts:35","dateupdated#dateUpdated":"dateUpdated: Date\nDate updated.","implementation-of-2#Implementation of":"AuditInterface.dateUpdated","source-2#Source":".tmp/repos/rockets/packages/typeorm-common/src/entities/audit/audit-sqlite.entity.ts:29","version#version":"version: number\nVersion","implementation-of-3#Implementation of":"AuditInterface.version","source-3#Source":".tmp/repos/rockets/packages/typeorm-common/src/entities/audit/audit-sqlite.entity.ts:41"}},"/reference/rockets/typeorm-common/classes/BaseService":{"title":"Class: abstract BaseService<Entity>","data":{"":"@concepta/typeorm-common • DocsPackages Example / @concepta/typeorm-common / BaseServiceAbstract service","extended-by#Extended by":"LookupService\nMutateService","type-parameters#Type parameters":"• Entity extends ReferenceIdInterface","constructors#Constructors":"","new-baseservice#new BaseService()":"new BaseService<Entity>(repo): BaseService<Entity>\nConstructor","parameters#Parameters":"• repo: Repository<Entity>instance of the repo","returns#Returns":"BaseService<Entity>","source#Source":".tmp/repos/rockets/packages/typeorm-common/src/services/base.service.ts:22","properties#Properties":"","repo#repo":"private repo: Repository<Entity>\ninstance of the repo","source-1#Source":".tmp/repos/rockets/packages/typeorm-common/src/services/base.service.ts:22","repositoryproxy#repositoryProxy":"private readonly repositoryProxy: RepositoryProxy<Entity>","source-2#Source":".tmp/repos/rockets/packages/typeorm-common/src/services/base.service.ts:15","accessors#Accessors":"","metadata#metadata":"get protected metadata(): EntityMetadata","returns-1#Returns":"EntityMetadata","source-3#Source":".tmp/repos/rockets/packages/typeorm-common/src/services/base.service.ts:68","methods#Methods":"","findone#findOne()":"findOne(findOneOptions, queryOptions?): Promise<null | Entity>\nFind One wrapper.","parameters-1#Parameters":"• findOneOptions: FindOneOptions<Entity>Find options• queryOptions?: QueryOptionsInterface","returns-2#Returns":"Promise<null | Entity>","source-4#Source":".tmp/repos/rockets/packages/typeorm-common/src/services/base.service.ts:32","repository#repository()":"repository(queryOptions?): Repository<Entity>\nReturn the correct repository instance.","parameters-2#Parameters":"• queryOptions?: QueryOptionsInterfaceOptions","returns-3#Returns":"Repository<Entity>","source-5#Source":".tmp/repos/rockets/packages/typeorm-common/src/services/base.service.ts:50","transaction#transaction()":"transaction(options?): TransactionProxy\nReturn a transaction instance.","parameters-3#Parameters":"• options?: SafeTransactionOptionsInterfaceOptions","returns-4#Returns":"TransactionProxy","source-6#Source":".tmp/repos/rockets/packages/typeorm-common/src/services/base.service.ts:59"}},"/reference/rockets/typeorm-common/classes/CommonPostgresEntity":{"title":"Class: abstract CommonPostgresEntity","data":{"":"@concepta/typeorm-common • DocsPackages Example / @concepta/typeorm-common / CommonPostgresEntityAudit Postgres Embed","extends#Extends":"AuditPostgresEntity","extended-by#Extended by":"","implements#Implements":"ReferenceIdInterface\nAuditInterface","constructors#Constructors":"","new-commonpostgresentity#new CommonPostgresEntity()":"new CommonPostgresEntity(): CommonPostgresEntity","returns#Returns":"CommonPostgresEntity","inherited-from#Inherited from":"AuditPostgresEntity.constructor","properties#Properties":"","datecreated#dateCreated":"dateCreated: Date\nDate created.","implementation-of#Implementation of":"AuditInterface.dateCreated","inherited-from-1#Inherited from":"AuditPostgresEntity.dateCreated","source#Source":".tmp/repos/rockets/packages/typeorm-common/src/entities/audit/audit-postgres.entity.ts:23","datedeleted#dateDeleted":"dateDeleted: AuditDateDeleted\nDate deleted.","implementation-of-1#Implementation of":"AuditInterface.dateDeleted","inherited-from-2#Inherited from":"AuditPostgresEntity.dateDeleted","source-1#Source":".tmp/repos/rockets/packages/typeorm-common/src/entities/audit/audit-postgres.entity.ts:35","dateupdated#dateUpdated":"dateUpdated: Date\nDate updated.","implementation-of-2#Implementation of":"AuditInterface.dateUpdated","inherited-from-3#Inherited from":"AuditPostgresEntity.dateUpdated","source-2#Source":".tmp/repos/rockets/packages/typeorm-common/src/entities/audit/audit-postgres.entity.ts:29","id#id":"id: string","implementation-of-3#Implementation of":"ReferenceIdInterface.id","source-3#Source":".tmp/repos/rockets/packages/typeorm-common/src/entities/common/common-postgres.entity.ts:10","version#version":"version: number\nVersion","implementation-of-4#Implementation of":"AuditInterface.version","inherited-from-4#Inherited from":"AuditPostgresEntity.version","source-4#Source":".tmp/repos/rockets/packages/typeorm-common/src/entities/audit/audit-postgres.entity.ts:41"}},"/reference/rockets/typeorm-common/classes/CommonSqliteEntity":{"title":"Class: abstract CommonSqliteEntity","data":{"":"@concepta/typeorm-common • DocsPackages Example / @concepta/typeorm-common / CommonSqliteEntityAudit SqlLite Embed","extends#Extends":"AuditSqlLiteEntity","extended-by#Extended by":"","implements#Implements":"ReferenceIdInterface\nAuditInterface","constructors#Constructors":"","new-commonsqliteentity#new CommonSqliteEntity()":"new CommonSqliteEntity(): CommonSqliteEntity","returns#Returns":"CommonSqliteEntity","inherited-from#Inherited from":"AuditSqlLiteEntity.constructor","properties#Properties":"","datecreated#dateCreated":"dateCreated: Date\nDate created.","implementation-of#Implementation of":"AuditInterface.dateCreated","inherited-from-1#Inherited from":"AuditSqlLiteEntity.dateCreated","source#Source":".tmp/repos/rockets/packages/typeorm-common/src/entities/audit/audit-sqlite.entity.ts:23","datedeleted#dateDeleted":"dateDeleted: AuditDateDeleted\nDate deleted.","implementation-of-1#Implementation of":"AuditInterface.dateDeleted","inherited-from-2#Inherited from":"AuditSqlLiteEntity.dateDeleted","source-1#Source":".tmp/repos/rockets/packages/typeorm-common/src/entities/audit/audit-sqlite.entity.ts:35","dateupdated#dateUpdated":"dateUpdated: Date\nDate updated.","implementation-of-2#Implementation of":"AuditInterface.dateUpdated","inherited-from-3#Inherited from":"AuditSqlLiteEntity.dateUpdated","source-2#Source":".tmp/repos/rockets/packages/typeorm-common/src/entities/audit/audit-sqlite.entity.ts:29","id#id":"id: string","implementation-of-3#Implementation of":"ReferenceIdInterface.id","source-3#Source":".tmp/repos/rockets/packages/typeorm-common/src/entities/common/common-sqlite.entity.ts:10","version#version":"version: number\nVersion","implementation-of-4#Implementation of":"AuditInterface.version","inherited-from-4#Inherited from":"AuditSqlLiteEntity.version","source-4#Source":".tmp/repos/rockets/packages/typeorm-common/src/entities/audit/audit-sqlite.entity.ts:41"}},"/reference/rockets/typeorm-common/classes/EntityManagerProxy":{"title":"Class: EntityManagerProxy","data":{"":"@concepta/typeorm-common • DocsPackages Example / @concepta/typeorm-common / EntityManagerProxy","constructors#Constructors":"","new-entitymanagerproxy#new EntityManagerProxy()":"new EntityManagerProxy(_entityManager): EntityManagerProxy","parameters#Parameters":"• _entityManager: EntityManager","returns#Returns":"EntityManagerProxy","source#Source":".tmp/repos/rockets/packages/typeorm-common/src/proxies/entity-manager.proxy.ts:8","properties#Properties":"","_entitymanager#_entityManager":"private _entityManager: EntityManager","source-1#Source":".tmp/repos/rockets/packages/typeorm-common/src/proxies/entity-manager.proxy.ts:8","methods#Methods":"","entitymanager#entityManager()":"entityManager(): EntityManager","returns-1#Returns":"EntityManager","source-2#Source":".tmp/repos/rockets/packages/typeorm-common/src/proxies/entity-manager.proxy.ts:10","repository#repository()":"repository<T>(repository, options?): Repository<T>","type-parameters#Type parameters":"• T extends ObjectLiteral","parameters-1#Parameters":"• repository: Repository<T>• options?: QueryOptionsInterface & EntityManagerOptionInterface","returns-2#Returns":"Repository<T>","source-3#Source":".tmp/repos/rockets/packages/typeorm-common/src/proxies/entity-manager.proxy.ts:14","transaction#transaction()":"transaction(options?): TransactionProxy","parameters-2#Parameters":"• options?: SafeTransactionOptionsInterface","returns-3#Returns":"TransactionProxy","source-4#Source":".tmp/repos/rockets/packages/typeorm-common/src/proxies/entity-manager.proxy.ts:30"}},"/reference/rockets/typeorm-common/classes/LookupService":{"title":"Class: abstract LookupService<Entity>","data":{"":"@concepta/typeorm-common • DocsPackages Example / @concepta/typeorm-common / LookupServiceAbstract lookup service","extends#Extends":"BaseService<Entity>","extended-by#Extended by":"","type-parameters#Type parameters":"• Entity extends ReferenceIdInterface","implements#Implements":"LookupIdInterface<ReferenceId, Entity, QueryOptionsInterface>","constructors#Constructors":"","new-lookupservice#new LookupService()":"new LookupService<Entity>(repo): LookupService<Entity>\nConstructor","parameters#Parameters":"• repo: Repository<Entity>instance of the repo","returns#Returns":"LookupService<Entity>","overrides#Overrides":"BaseService.constructor","source#Source":".tmp/repos/rockets/packages/typeorm-common/src/services/lookup.service.ts:22","accessors#Accessors":"","metadata#metadata":"get protected metadata(): EntityMetadata","returns-1#Returns":"EntityMetadata","source-1#Source":".tmp/repos/rockets/packages/typeorm-common/src/services/base.service.ts:68","methods#Methods":"","byid#byId()":"byId(id, queryOptions?): Promise<null | Entity>\nGet entity for the given id.","parameters-1#Parameters":"• id: stringthe id• queryOptions?: QueryOptionsInterface","returns-2#Returns":"Promise<null | Entity>","implementation-of#Implementation of":"LookupIdInterface.byId","source-2#Source":".tmp/repos/rockets/packages/typeorm-common/src/services/lookup.service.ts:32","findone#findOne()":"findOne(findOneOptions, queryOptions?): Promise<null | Entity>\nFind One wrapper.","parameters-2#Parameters":"• findOneOptions: FindOneOptions<Entity>Find options• queryOptions?: QueryOptionsInterface","returns-3#Returns":"Promise<null | Entity>","inherited-from#Inherited from":"BaseService.findOne","source-3#Source":".tmp/repos/rockets/packages/typeorm-common/src/services/base.service.ts:32","repository#repository()":"repository(queryOptions?): Repository<Entity>\nReturn the correct repository instance.","parameters-3#Parameters":"• queryOptions?: QueryOptionsInterfaceOptions","returns-4#Returns":"Repository<Entity>","inherited-from-1#Inherited from":"BaseService.repository","source-4#Source":".tmp/repos/rockets/packages/typeorm-common/src/services/base.service.ts:50","transaction#transaction()":"transaction(options?): TransactionProxy\nReturn a transaction instance.","parameters-4#Parameters":"• options?: SafeTransactionOptionsInterfaceOptions","returns-5#Returns":"TransactionProxy","inherited-from-2#Inherited from":"BaseService.transaction","source-5#Source":".tmp/repos/rockets/packages/typeorm-common/src/services/base.service.ts:59"}},"/reference/rockets/typeorm-common/classes/MutateService":{"title":"Class: abstract MutateService<Entity, Creatable, Updatable, Replaceable, Removable>","data":{"":"@concepta/typeorm-common • DocsPackages Example / @concepta/typeorm-common / MutateServiceAbstract mutate service","extends#Extends":"BaseService<Entity>","extended-by#Extended by":"","type-parameters#Type parameters":"• Entity extends ReferenceIdInterface• Creatable extends DeepPartial<Entity>• Updatable extends DeepPartial<Entity>• Replaceable extends Creatable = Creatable• Removable extends DeepPartial<Entity> = DeepPartial<Entity>","implements#Implements":"CreateOneInterface<Creatable, Entity>\nUpdateOneInterface<Updatable & ReferenceIdInterface, Entity>\nReplaceOneInterface<Replaceable & ReferenceIdInterface, Entity>\nRemoveOneInterface<Removable & ReferenceIdInterface, Entity>","constructors#Constructors":"","new-mutateservice#new MutateService()":"new MutateService<Entity, Creatable, Updatable, Replaceable, Removable>(repo): MutateService<Entity, Creatable, Updatable, Replaceable, Removable>\nConstructor","parameters#Parameters":"• repo: Repository<Entity>instance of the repo","returns#Returns":"MutateService<Entity, Creatable, Updatable, Replaceable, Removable>","overrides#Overrides":"BaseService.constructor","source#Source":".tmp/repos/rockets/packages/typeorm-common/src/services/mutate.service.ts:44","properties#Properties":"","createdto#createDto":"protected abstract createDto: Type<Creatable>","source-1#Source":".tmp/repos/rockets/packages/typeorm-common/src/services/mutate.service.ts:36","updatedto#updateDto":"protected abstract updateDto: Type<Updatable>","source-2#Source":".tmp/repos/rockets/packages/typeorm-common/src/services/mutate.service.ts:37","accessors#Accessors":"","metadata#metadata":"get protected metadata(): EntityMetadata","returns-1#Returns":"EntityMetadata","source-3#Source":".tmp/repos/rockets/packages/typeorm-common/src/services/base.service.ts:68","methods#Methods":"","create#create()":"create(data, queryOptions?): Promise<Entity>\nCreate one","parameters-1#Parameters":"• data: Creatablethe reference to create• queryOptions?: QueryOptionsInterface","returns-2#Returns":"Promise<Entity>the created reference","implementation-of#Implementation of":"CreateOneInterface.create","source-4#Source":".tmp/repos/rockets/packages/typeorm-common/src/services/mutate.service.ts:54","delete#delete()":"private delete(entity, queryOptions?): Promise<Entity>","parameters-2#Parameters":"• entity: Entity• queryOptions?: QueryOptionsInterface","returns-3#Returns":"Promise<Entity>","source-5#Source":".tmp/repos/rockets/packages/typeorm-common/src/services/mutate.service.ts:153","findbyid#findById()":"private findById(id, queryOptions?): Promise<Entity>","parameters-3#Parameters":"• id: string• queryOptions?: QueryOptionsInterface","returns-4#Returns":"Promise<Entity>","source-6#Source":".tmp/repos/rockets/packages/typeorm-common/src/services/mutate.service.ts:200","findone#findOne()":"findOne(findOneOptions, queryOptions?): Promise<null | Entity>\nFind One wrapper.","parameters-4#Parameters":"• findOneOptions: FindOneOptions<Entity>Find options• queryOptions?: QueryOptionsInterface","returns-5#Returns":"Promise<null | Entity>","inherited-from#Inherited from":"BaseService.findOne","source-7#Source":".tmp/repos/rockets/packages/typeorm-common/src/services/base.service.ts:32","remove#remove()":"remove(data, queryOptions?): Promise<Entity>\nRemove one","parameters-5#Parameters":"• data: Removable & ReferenceIdInterface<string>the reference data to remove• queryOptions?: QueryOptionsInterfacequery options","returns-6#Returns":"Promise<Entity>the removed reference","implementation-of-1#Implementation of":"RemoveOneInterface.remove","source-8#Source":".tmp/repos/rockets/packages/typeorm-common/src/services/mutate.service.ts:125","replace#replace()":"replace(data, queryOptions?): Promise<Entity>\nReplace one","parameters-6#Parameters":"• data: Replaceable & ReferenceIdInterface<string>the reference data to replace• queryOptions?: QueryOptionsInterface","returns-7#Returns":"Promise<Entity>the replaced reference","implementation-of-2#Implementation of":"ReplaceOneInterface.replace","source-9#Source":".tmp/repos/rockets/packages/typeorm-common/src/services/mutate.service.ts:99","repository#repository()":"repository(queryOptions?): Repository<Entity>\nReturn the correct repository instance.","parameters-7#Parameters":"• queryOptions?: QueryOptionsInterfaceOptions","returns-8#Returns":"Repository<Entity>","inherited-from-1#Inherited from":"BaseService.repository","source-10#Source":".tmp/repos/rockets/packages/typeorm-common/src/services/base.service.ts:50","save#save()":"private save(entity, queryOptions?): Promise<Entity>","parameters-8#Parameters":"• entity: Entity• queryOptions?: QueryOptionsInterface","returns-9#Returns":"Promise<Entity>","source-11#Source":".tmp/repos/rockets/packages/typeorm-common/src/services/mutate.service.ts:138","transaction#transaction()":"transaction(options?): TransactionProxy\nReturn a transaction instance.","parameters-9#Parameters":"• options?: SafeTransactionOptionsInterfaceOptions","returns-10#Returns":"TransactionProxy","inherited-from-2#Inherited from":"BaseService.transaction","source-12#Source":".tmp/repos/rockets/packages/typeorm-common/src/services/base.service.ts:59","transform#transform()":"protected transform(data, _queryOptions?): Promise<DeepPartial<Entity>>","parameters-10#Parameters":"• data: DeepPartial<Entity>• _queryOptions?: QueryOptionsInterface","returns-11#Returns":"Promise<DeepPartial<Entity>>","source-13#Source":".tmp/repos/rockets/packages/typeorm-common/src/services/mutate.service.ts:190","update#update()":"update(data, queryOptions?): Promise<Entity>\nUpdate one","parameters-11#Parameters":"• data: Updatable & ReferenceIdInterface<string>the reference data to update• queryOptions?: QueryOptionsInterface","returns-12#Returns":"Promise<Entity>the updated reference","implementation-of-3#Implementation of":"UpdateOneInterface.update","source-14#Source":".tmp/repos/rockets/packages/typeorm-common/src/services/mutate.service.ts:74","validate#validate()":"private validate<T>(type, data): Promise<T>","type-parameters-1#Type parameters":"• T extends ReferenceIdInterface<string> | object","parameters-12#Parameters":"• type: Type<T>• data: T","returns-13#Returns":"Promise<T>","source-15#Source":".tmp/repos/rockets/packages/typeorm-common/src/services/mutate.service.ts:168"}},"/reference/rockets/typeorm-common/classes/ReferenceIdNoMatchException":{"title":"Class: ReferenceIdNoMatchException","data":{"":"@concepta/typeorm-common • DocsPackages Example / @concepta/typeorm-common / ReferenceIdNoMatchException","extends#Extends":"Error","implements#Implements":"ExceptionInterface","constructors#Constructors":"","new-referenceidnomatchexception#new ReferenceIdNoMatchException()":"new ReferenceIdNoMatchException(entityName, id, message): ReferenceIdNoMatchException","parameters#Parameters":"• entityName: string• id: string• message: string= 'No match for %s reference id %s.'","returns#Returns":"ReferenceIdNoMatchException","overrides#Overrides":"Error.constructor","source#Source":".tmp/repos/rockets/packages/typeorm-common/src/exceptions/reference-id-no-match.exception.ts:15","properties#Properties":"","context#context":"context: object\nAdditional context","entityname#entityName":"entityName: string","id#id":"id: string","implementation-of#Implementation of":"ExceptionInterface.context","source-1#Source":".tmp/repos/rockets/packages/typeorm-common/src/exceptions/reference-id-no-match.exception.ts:10","errorcode#errorCode":"errorCode: string = 'REFERENCE_ID_NO_MATCH'\nThe error code.","implementation-of-1#Implementation of":"ExceptionInterface.errorCode","source-2#Source":".tmp/repos/rockets/packages/typeorm-common/src/exceptions/reference-id-no-match.exception.ts:8","message#message":"message: string","implementation-of-2#Implementation of":"ExceptionInterface.message","inherited-from#Inherited from":"Error.message","source-3#Source":"node_modules/typescript/lib/lib.es5.d.ts:1054","name#name":"name: string","implementation-of-3#Implementation of":"ExceptionInterface.name","inherited-from-1#Inherited from":"Error.name","source-4#Source":"node_modules/typescript/lib/lib.es5.d.ts:1053","stack#stack?":"optional stack: string","implementation-of-4#Implementation of":"ExceptionInterface.stack","inherited-from-2#Inherited from":"Error.stack","source-5#Source":"node_modules/typescript/lib/lib.es5.d.ts:1055","preparestacktrace#prepareStackTrace()?":"static optional prepareStackTrace: (err, stackTraces) => any\nOptional override for formatting stack traces","see#See":"https://v8.dev/docs/stack-trace-api#customizing-stack-traces","parameters-1#Parameters":"• err: Error• stackTraces: CallSite[]","returns-1#Returns":"any","inherited-from-3#Inherited from":"Error.prepareStackTrace","source-6#Source":".tmp/repos/rockets/node_modules/@types/node/globals.d.ts:11","stacktracelimit#stackTraceLimit":"static stackTraceLimit: number","inherited-from-4#Inherited from":"Error.stackTraceLimit","source-7#Source":".tmp/repos/rockets/node_modules/@types/node/globals.d.ts:13","methods#Methods":"","capturestacktrace#captureStackTrace()":"static captureStackTrace(targetObject, constructorOpt?): void\nCreate .stack property on a target object","parameters-2#Parameters":"• targetObject: object• constructorOpt?: Function","returns-2#Returns":"void","inherited-from-5#Inherited from":"Error.captureStackTrace","source-8#Source":".tmp/repos/rockets/node_modules/@types/node/globals.d.ts:4"}},"/reference/rockets/typeorm-common/classes/ReferenceLookupException":{"title":"Class: ReferenceLookupException","data":{"":"@concepta/typeorm-common • DocsPackages Example / @concepta/typeorm-common / ReferenceLookupException","extends#Extends":"Error","implements#Implements":"ExceptionInterface","constructors#Constructors":"","new-referencelookupexception#new ReferenceLookupException()":"new ReferenceLookupException(entityName, originalError, message): ReferenceLookupException","parameters#Parameters":"• entityName: string• originalError: unknown• message: string= 'Error while trying to lookup a %s reference'","returns#Returns":"ReferenceLookupException","overrides#Overrides":"Error.constructor","source#Source":".tmp/repos/rockets/packages/typeorm-common/src/exceptions/reference-lookup.exception.ts:15","properties#Properties":"","context#context":"context: object\nAdditional context","entityname#entityName":"entityName: string","originalerror#originalError":"originalError: Error","implementation-of#Implementation of":"ExceptionInterface.context","source-1#Source":".tmp/repos/rockets/packages/typeorm-common/src/exceptions/reference-lookup.exception.ts:10","errorcode#errorCode":"errorCode: string = 'REFERENCE_LOOKUP_ERROR'\nThe error code.","implementation-of-1#Implementation of":"ExceptionInterface.errorCode","source-2#Source":".tmp/repos/rockets/packages/typeorm-common/src/exceptions/reference-lookup.exception.ts:8","message#message":"message: string","implementation-of-2#Implementation of":"ExceptionInterface.message","inherited-from#Inherited from":"Error.message","source-3#Source":"node_modules/typescript/lib/lib.es5.d.ts:1054","name#name":"name: string","implementation-of-3#Implementation of":"ExceptionInterface.name","inherited-from-1#Inherited from":"Error.name","source-4#Source":"node_modules/typescript/lib/lib.es5.d.ts:1053","stack#stack?":"optional stack: string","implementation-of-4#Implementation of":"ExceptionInterface.stack","inherited-from-2#Inherited from":"Error.stack","source-5#Source":"node_modules/typescript/lib/lib.es5.d.ts:1055","preparestacktrace#prepareStackTrace()?":"static optional prepareStackTrace: (err, stackTraces) => any\nOptional override for formatting stack traces","see#See":"https://v8.dev/docs/stack-trace-api#customizing-stack-traces","parameters-1#Parameters":"• err: Error• stackTraces: CallSite[]","returns-1#Returns":"any","inherited-from-3#Inherited from":"Error.prepareStackTrace","source-6#Source":".tmp/repos/rockets/node_modules/@types/node/globals.d.ts:11","stacktracelimit#stackTraceLimit":"static stackTraceLimit: number","inherited-from-4#Inherited from":"Error.stackTraceLimit","source-7#Source":".tmp/repos/rockets/node_modules/@types/node/globals.d.ts:13","methods#Methods":"","capturestacktrace#captureStackTrace()":"static captureStackTrace(targetObject, constructorOpt?): void\nCreate .stack property on a target object","parameters-2#Parameters":"• targetObject: object• constructorOpt?: Function","returns-2#Returns":"void","inherited-from-5#Inherited from":"Error.captureStackTrace","source-8#Source":".tmp/repos/rockets/node_modules/@types/node/globals.d.ts:4"}},"/reference/rockets/typeorm-common/classes/ReferenceMutateException":{"title":"Class: ReferenceMutateException","data":{"":"@concepta/typeorm-common • DocsPackages Example / @concepta/typeorm-common / ReferenceMutateException","extends#Extends":"Error","implements#Implements":"ExceptionInterface","constructors#Constructors":"","new-referencemutateexception#new ReferenceMutateException()":"new ReferenceMutateException(entityName, originalError, message): ReferenceMutateException","parameters#Parameters":"• entityName: string• originalError: unknown• message: string= 'Error while trying to mutate a %s reference'","returns#Returns":"ReferenceMutateException","overrides#Overrides":"Error.constructor","source#Source":".tmp/repos/rockets/packages/typeorm-common/src/exceptions/reference-mutate.exception.ts:15","properties#Properties":"","context#context":"context: object\nAdditional context","entityname#entityName":"entityName: string","originalerror#originalError":"originalError: Error","implementation-of#Implementation of":"ExceptionInterface.context","source-1#Source":".tmp/repos/rockets/packages/typeorm-common/src/exceptions/reference-mutate.exception.ts:10","errorcode#errorCode":"errorCode: string = 'REFERENCE_MUTATE_ERROR'\nThe error code.","implementation-of-1#Implementation of":"ExceptionInterface.errorCode","source-2#Source":".tmp/repos/rockets/packages/typeorm-common/src/exceptions/reference-mutate.exception.ts:8","message#message":"message: string","implementation-of-2#Implementation of":"ExceptionInterface.message","inherited-from#Inherited from":"Error.message","source-3#Source":"node_modules/typescript/lib/lib.es5.d.ts:1054","name#name":"name: string","implementation-of-3#Implementation of":"ExceptionInterface.name","inherited-from-1#Inherited from":"Error.name","source-4#Source":"node_modules/typescript/lib/lib.es5.d.ts:1053","stack#stack?":"optional stack: string","implementation-of-4#Implementation of":"ExceptionInterface.stack","inherited-from-2#Inherited from":"Error.stack","source-5#Source":"node_modules/typescript/lib/lib.es5.d.ts:1055","preparestacktrace#prepareStackTrace()?":"static optional prepareStackTrace: (err, stackTraces) => any\nOptional override for formatting stack traces","see#See":"https://v8.dev/docs/stack-trace-api#customizing-stack-traces","parameters-1#Parameters":"• err: Error• stackTraces: CallSite[]","returns-1#Returns":"any","inherited-from-3#Inherited from":"Error.prepareStackTrace","source-6#Source":".tmp/repos/rockets/node_modules/@types/node/globals.d.ts:11","stacktracelimit#stackTraceLimit":"static stackTraceLimit: number","inherited-from-4#Inherited from":"Error.stackTraceLimit","source-7#Source":".tmp/repos/rockets/node_modules/@types/node/globals.d.ts:13","methods#Methods":"","capturestacktrace#captureStackTrace()":"static captureStackTrace(targetObject, constructorOpt?): void\nCreate .stack property on a target object","parameters-2#Parameters":"• targetObject: object• constructorOpt?: Function","returns-2#Returns":"void","inherited-from-5#Inherited from":"Error.captureStackTrace","source-8#Source":".tmp/repos/rockets/node_modules/@types/node/globals.d.ts:4"}},"/reference/rockets/typeorm-common/classes/ReferenceValidationException":{"title":"Class: ReferenceValidationException","data":{"":"@concepta/typeorm-common • DocsPackages Example / @concepta/typeorm-common / ReferenceValidationException","extends#Extends":"Error","implements#Implements":"ExceptionInterface","constructors#Constructors":"","new-referencevalidationexception#new ReferenceValidationException()":"new ReferenceValidationException(entityName, validationErrors, message): ReferenceValidationException","parameters#Parameters":"• entityName: string• validationErrors: ValidationError[]• message: string= 'Data for the %s reference is not valid'","returns#Returns":"ReferenceValidationException","overrides#Overrides":"Error.constructor","source#Source":".tmp/repos/rockets/packages/typeorm-common/src/exceptions/reference-validation.exception.ts:16","properties#Properties":"","context#context":"context: object\nAdditional context","entityname#entityName":"entityName: string","validationerrors#validationErrors":"validationErrors: ValidationError[]","implementation-of#Implementation of":"ExceptionInterface.context","source-1#Source":".tmp/repos/rockets/packages/typeorm-common/src/exceptions/reference-validation.exception.ts:11","errorcode#errorCode":"errorCode: string = 'REFERENCE_VALIDATION_ERROR'\nThe error code.","implementation-of-1#Implementation of":"ExceptionInterface.errorCode","source-2#Source":".tmp/repos/rockets/packages/typeorm-common/src/exceptions/reference-validation.exception.ts:9","message#message":"message: string","implementation-of-2#Implementation of":"ExceptionInterface.message","inherited-from#Inherited from":"Error.message","source-3#Source":"node_modules/typescript/lib/lib.es5.d.ts:1054","name#name":"name: string","implementation-of-3#Implementation of":"ExceptionInterface.name","inherited-from-1#Inherited from":"Error.name","source-4#Source":"node_modules/typescript/lib/lib.es5.d.ts:1053","stack#stack?":"optional stack: string","implementation-of-4#Implementation of":"ExceptionInterface.stack","inherited-from-2#Inherited from":"Error.stack","source-5#Source":"node_modules/typescript/lib/lib.es5.d.ts:1055","preparestacktrace#prepareStackTrace()?":"static optional prepareStackTrace: (err, stackTraces) => any\nOptional override for formatting stack traces","see#See":"https://v8.dev/docs/stack-trace-api#customizing-stack-traces","parameters-1#Parameters":"• err: Error• stackTraces: CallSite[]","returns-1#Returns":"any","inherited-from-3#Inherited from":"Error.prepareStackTrace","source-6#Source":".tmp/repos/rockets/node_modules/@types/node/globals.d.ts:11","stacktracelimit#stackTraceLimit":"static stackTraceLimit: number","inherited-from-4#Inherited from":"Error.stackTraceLimit","source-7#Source":".tmp/repos/rockets/node_modules/@types/node/globals.d.ts:13","methods#Methods":"","capturestacktrace#captureStackTrace()":"static captureStackTrace(targetObject, constructorOpt?): void\nCreate .stack property on a target object","parameters-2#Parameters":"• targetObject: object• constructorOpt?: Function","returns-2#Returns":"void","inherited-from-5#Inherited from":"Error.captureStackTrace","source-8#Source":".tmp/repos/rockets/node_modules/@types/node/globals.d.ts:4"}},"/reference/rockets/typeorm-common/classes/RepositoryProxy":{"title":"Class: RepositoryProxy<T>","data":{"":"@concepta/typeorm-common • DocsPackages Example / @concepta/typeorm-common / RepositoryProxy","type-parameters#Type parameters":"• T extends ObjectLiteral","constructors#Constructors":"","new-repositoryproxy#new RepositoryProxy()":"new RepositoryProxy<T>(targetRepository): RepositoryProxy<T>","parameters#Parameters":"• targetRepository: Repository<T>","returns#Returns":"RepositoryProxy<T>","source#Source":".tmp/repos/rockets/packages/typeorm-common/src/proxies/repository.proxy.ts:10","properties#Properties":"","entitymanagerproxy#entityManagerProxy":"private entityManagerProxy: EntityManagerProxy","source-1#Source":".tmp/repos/rockets/packages/typeorm-common/src/proxies/repository.proxy.ts:8","targetrepository#targetRepository":"private targetRepository: Repository<T>","source-2#Source":".tmp/repos/rockets/packages/typeorm-common/src/proxies/repository.proxy.ts:10","methods#Methods":"","entitymanager#entityManager()":"entityManager(): EntityManager","returns-1#Returns":"EntityManager","source-3#Source":".tmp/repos/rockets/packages/typeorm-common/src/proxies/repository.proxy.ts:14","repository#repository()":"repository(queryOptions?): Repository<T>","parameters-1#Parameters":"• queryOptions?: QueryOptionsInterface","returns-2#Returns":"Repository<T>","source-4#Source":".tmp/repos/rockets/packages/typeorm-common/src/proxies/repository.proxy.ts:18","transaction#transaction()":"transaction(options?): TransactionProxy","parameters-2#Parameters":"• options?: SafeTransactionOptionsInterface","returns-3#Returns":"TransactionProxy","source-5#Source":".tmp/repos/rockets/packages/typeorm-common/src/proxies/repository.proxy.ts:25"}},"/reference/rockets/typeorm-common/classes/TransactionProxy":{"title":"Class: TransactionProxy","data":{"":"@concepta/typeorm-common • DocsPackages Example / @concepta/typeorm-common / TransactionProxy","constructors#Constructors":"","new-transactionproxy#new TransactionProxy()":"new TransactionProxy(entityManager, options?): TransactionProxy","parameters#Parameters":"• entityManager: EntityManager• options?: SafeTransactionOptionsInterface","returns#Returns":"TransactionProxy","source#Source":".tmp/repos/rockets/packages/typeorm-common/src/proxies/transaction.proxy.ts:16","properties#Properties":"","entitymanagerproxy#entityManagerProxy":"private entityManagerProxy: EntityManagerProxy","source-1#Source":".tmp/repos/rockets/packages/typeorm-common/src/proxies/transaction.proxy.ts:12","options#options?":"private optional options: SafeTransactionOptionsInterface","source-2#Source":".tmp/repos/rockets/packages/typeorm-common/src/proxies/transaction.proxy.ts:18","parenttransaction#parentTransaction?":"private optional parentTransaction: TransactionProxy","source-3#Source":".tmp/repos/rockets/packages/typeorm-common/src/proxies/transaction.proxy.ts:13","transactionalentitymanager#transactionalEntityManager?":"private optional transactionalEntityManager: EntityManager","source-4#Source":".tmp/repos/rockets/packages/typeorm-common/src/proxies/transaction.proxy.ts:14","methods#Methods":"","callback#callback()":"private callback<T>(runInTransaction): RunInTransactionCallback<T>","type-parameters#Type parameters":"• T","parameters-1#Parameters":"• runInTransaction: TransactionCallback<T>","returns-1#Returns":"RunInTransactionCallback<T>","source-5#Source":".tmp/repos/rockets/packages/typeorm-common/src/proxies/transaction.proxy.ts:48","commit#commit()":"commit<T>(runInTransaction): Promise<T>","type-parameters-1#Type parameters":"• T","parameters-2#Parameters":"• runInTransaction: TransactionCallback<T>","returns-2#Returns":"Promise<T>","source-6#Source":".tmp/repos/rockets/packages/typeorm-common/src/proxies/transaction.proxy.ts:36","repository#repository()":"repository<E>(targetRepository): Repository<E>","type-parameters-2#Type parameters":"• E extends ObjectLiteral","parameters-3#Parameters":"• targetRepository: Repository<E>","returns-3#Returns":"Repository<E>","source-7#Source":".tmp/repos/rockets/packages/typeorm-common/src/proxies/transaction.proxy.ts:24"}},"/reference/rockets/typeorm-common/functions/createEntityManagerMock":{"title":"Function: createEntityManagerMock()","data":{"":"@concepta/typeorm-common • DocsPackages Example / @concepta/typeorm-common / createEntityManagerMock\ncreateEntityManagerMock(): __class","returns#Returns":"__class","source#Source":".tmp/repos/rockets/packages/typeorm-common/src/testing/utils/create-entity-manager.mock.ts:1"}},"/reference/rockets/typeorm-common/globals":{"title":"@concepta/typeorm-common","data":{"":"@concepta/typeorm-common • DocsPackages Example / @concepta/typeorm-common","classes#Classes":"AuditPostgresEntity\nAuditSqlLiteEntity\nBaseService\nCommonPostgresEntity\nCommonSqliteEntity\nEntityManagerProxy\nLookupService\nMutateService\nReferenceIdNoMatchException\nReferenceLookupException\nReferenceMutateException\nReferenceValidationException\nRepositoryProxy\nTransactionProxy","interfaces#Interfaces":"QueryOptionsInterface\nSafeTransactionOptionsInterface","type-aliases#Type Aliases":"RunInTransactionCallback","functions#Functions":"createEntityManagerMock"}},"/reference/rockets/typeorm-common/interfaces/QueryOptionsInterface":{"title":"Interface: QueryOptionsInterface","data":{"":"@concepta/typeorm-common • DocsPackages Example / @concepta/typeorm-common / QueryOptionsInterface","properties#Properties":"","transaction#transaction?":"optional transaction: TransactionProxy","source#Source":".tmp/repos/rockets/packages/typeorm-common/src/interfaces/query-options.interface.ts:4"}},"/reference/rockets/typeorm-common/interfaces/SafeTransactionOptionsInterface":{"title":"Interface: SafeTransactionOptionsInterface","data":{"":"@concepta/typeorm-common • DocsPackages Example / @concepta/typeorm-common / SafeTransactionOptionsInterface","properties#Properties":"","isolationlevel#isolationLevel?":"optional isolationLevel: IsolationLevel","source#Source":".tmp/repos/rockets/packages/typeorm-common/src/interfaces/safe-transaction-options.interface.ts:6","strict#strict?":"optional strict: boolean","source-1#Source":".tmp/repos/rockets/packages/typeorm-common/src/interfaces/safe-transaction-options.interface.ts:5","transaction#transaction?":"optional transaction: TransactionProxy","source-2#Source":".tmp/repos/rockets/packages/typeorm-common/src/interfaces/safe-transaction-options.interface.ts:7"}},"/reference/rockets/typeorm-common/type-aliases/RunInTransactionCallback":{"title":"Type alias: RunInTransactionCallback()<T>","data":{"":"@concepta/typeorm-common • DocsPackages Example / @concepta/typeorm-common / RunInTransactionCallback\nRunInTransactionCallback<T>: (entityManager) => Promise<T>","type-parameters#Type parameters":"• T","parameters#Parameters":"• entityManager: EntityManager | undefined","returns#Returns":"Promise<T>","source#Source":".tmp/repos/rockets/packages/typeorm-common/src/typeorm-common.types.ts:3"}},"/reference/rockets/nestjs-access-control/README":{"title":"Rockets NestJS Access Control","data":{"":"@concepta/nestjs-access-control • DocsPackages Example / @concepta/nestjs-access-controlAdvanced access control guard for NestJS with optional per-request filtering.","project#Project":"","installation#Installation":"yarn add @concepta/nestjs-access-control","important#IMPORTANT":"When building your ACL, you need to remember these!\nThis module only helps you apply a pattern. There is no magic, you are ultimately responsible for\nchecking that your ACL works in all contexts.\nHere is the pattern:\nGiving any access implies that the role IS NOT restricted by ownership, or other rules, to that action/resource combination.\nGiving own access implies that the role IS restricted by ownership to that action/resource combination\n(it is often required to enforce this rule with a filter to check the data layer when not all information required to\ncheck ownership exists in the parameters or query string.)\n!!! Important !!!\nAll roles that are given any access to a resource will NOT be passed through access filters since any implies they should have all access.","example#Example":"These are very rough examples. We intend to improve them ASAP.","simple-user-entity#Simple User Entity":"import { Entity, Column, ManyToMany, Unique } from 'typeorm';\nimport { Exclude } from 'class-transformer';\nimport { Role } from '../auth/role.entity';\n@Entity()\n@Unique(['username'])\nexport class User {\n  @Column()\n  username!: string;\n  @Column()\n  @Exclude()\n  password!: string;\n  @Column()\n  @Exclude()\n  salt!: string;\n  @ManyToMany(() => Role, (role) => role.users, {\n    eager: true,\n    onDelete: 'CASCADE',\n  })\n  roles!: Role[];\n}","your-custom-accesscontrolservice#Your custom AccessControlService":"import { AccessControlService } from 'nestjs-access-control';\nimport { ExecutionContext, UnauthorizedException } from '@nestjs/common';\nimport { User } from '../user/user.entity';\nexport class ACService implements AccessControlService {\n  async getUser<T>(context: ExecutionContext): Promise<T> {\n    const request = context.switchToHttp().getRequest();\n    return request.user as T;\n  }\n  async getUserRoles(context: ExecutionContext): Promise<string | string[]> {\n    const user = await this.getUser<User>(context);\n    if (!user || !user.roles) throw new UnauthorizedException();\n    return user.roles.map((role) => role.name);\n  }\n}","your-custom-acl-rules#Your custom ACL rules":"import { AccessControl } from 'accesscontrol';\nexport enum AppRole {\n  SuperAdmin = 'SuperAdmin',\n  User = 'User',\n}\nexport enum AppResource {\n  User = 'user',\n  UserList = 'user-list',\n}\nconst allResources = Object.values(AppResource);\nconst allRoles = Object.values(AppRole);\nexport const acRules: AccessControl = new AccessControl();\n// admins can do whatever they want\nacRules\n  .grant([AppRole.SuperAdmin])\n  .resource(allResources)\n  .createOwn()\n  .createAny()\n  .readOwn()\n  .readAny()\n  .updateOwn()\n  .updateAny()\n  .deleteOwn()\n  .deleteAny();\n// regular users can read self\nacRules.grant(AppRole.User).resource([AppResource.User]).readOwn();\n// make sure nobody can delete themselves\nacRules.deny(allRoles).resource(AppResource.User).deleteOwn();","import-the-module-into-your-app#Import the module into your app":"import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { AccessControlModule } from 'nestjs-access-control';\nimport { ACService } from './modules/auth/access-control.service';\nimport { acRules } from './app.acl';\n@Module({\n  imports: [\n    // ...\n    AccessControlModule.register({ service: ACService, rules: acRules }),\n    // ...\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}","implement-on-your-controller-passport-guard-example#Implement on your controller (Passport guard example)":"import { ApiTags } from '@nestjs/swagger';\nimport { Controller, Body, Query, Param } from '@nestjs/common';\nimport {\n  AccessControlCreateMany,\n  AccessControlCreateOne,\n  AccessControlDeleteOne,\n  AccessControlReadMany,\n  AccessControlReadOne,\n  AccessControlRecoverOne,\n  AccessControlUpdateOne,\n} from '@concepta/nestjs-access-control';\nimport { UserResource } from './user.types';\nimport { UserCreateDto } from './dto/user-create.dto';\nimport { UserCreateManyDto } from './dto/user-create-many.dto';\nimport { UserUpdateDto } from './dto/user-update.dto';\n/**\n * User controller.\n */\n@Controller('user')\n@ApiTags('user')\nexport class UserController {\n  /**\n   * Get many\n   */\n  @AccessControlReadMany(UserResource.Many)\n  async getMany(@Query() query: unknown) {\n    // ...\n  }\n  /**\n   * Get one\n   */\n  @AccessControlReadOne(UserResource.One)\n  async getOne(@Param('id') id: string) {\n    // ...\n  }\n  /**\n   * Create many\n   */\n  @AccessControlCreateMany(UserResource.Many)\n  async createMany(@Body() userCreateManyDto: UserCreateManyDto) {\n    // ...\n  }\n  /**\n   * Create one\n   */\n  @AccessControlCreateOne(UserResource.One)\n  async createOne(@Body() userCreateDto: UserCreateDto) {\n    // ...\n  }\n  /**\n   * Update one\n   */\n  @AccessControlUpdateOne(UserResource.One)\n  async updateOne(\n    @Param('id') userId: string,\n    @Body() userUpdateDto: UserUpdateDto,\n  ) {\n    // ...\n  }\n  /**\n   * Delete one\n   */\n  @AccessControlDeleteOne(UserResource.One)\n  async deleteOne(@Param('id') id: string) {\n    // ...\n  }\n  /**\n   * Recover one\n   */\n  @AccessControlRecoverOne(UserResource.One)\n  async recoverOne(@Param('id') id: string) {\n    // ...\n  }\n}"}},"/reference/rockets/nestjs-auth-jwt/README":{"title":"Rockets NestJS JWT Authentication","data":{"":"@concepta/nestjs-auth-jwt • DocsPackages Example / @concepta/nestjs-auth-jwtAuthenticate requests using JWT tokens passed via the request (headers, cookies, body, query, etc).","project#Project":"","table-of-contents#Table of Contents":"Tutorials\n1. Getting Started with AuthJwtModule\n1.1 Introduction\nOverview of the Library\nPurpose and Key Features\n1.2 Installation\nInstall the AuthJwtModule package\nAdd the AuthJwtModule to Your NestJS Application\n1.3 Basic Setup in a NestJS Project\nScenario: Users have a list of pets\nStep 1: Create Entities\nStep 2: Create Services\nStep 3: Create Controller\nStep 4: Configure the Module\n1.4 First Authentication with JWT\nValidating the Setup\nStep 1: Obtain a JWT Token\nStep 2: Make an Authenticated Request\nExample CURL Calls\nObtain a JWT token\nExample JWT response\nMake an authenticated request using the token\nExample authenticated response\nHow-To Guides\nSetting Up a custom Module for Providers\n1. Registering AuthJwtModule Synchronously\n2. Registering AuthJwtModule Asynchronously\n3. Global Registering AuthJwtModule Asynchronously\n4. Using Custom User Lookup Service\n5. Implementing and Using Custom Token Verification Service\n6. Setting Up a Custom Guard\nStep 1: Implement the Custom Guard\nStep 2: Provide the Custom Guard in Module Configuration\n7. Disabling the Guard\nDisable the Guard in Module Configuration\n8. Overwriting the Settings\n9. Integration with Other NestJS Modules\nReference\n1. AuthJwtModule API Reference\n2. AuthJwtOptionsInterface\n3. AuthJwtModule Classes and Interfaces\nEngineering Concepts\nConceptual Overview of JWT Authentication\nWhat is JWT?\nBenefits of Using JWT\nDesign Choices in AuthJwtModule\nWhy Use NestJS Guards?\nSynchronous vs Asynchronous Registration\nGlobal vs Feature-Specific Registration\nIntegrating AuthJwtModule with Other Modules\nHow AuthJwtModule Works with AuthLocalModule\nIntegrating with AuthRefreshModule","1-getting-started-with-authjwtmodule#1. Getting Started with AuthJwtModule":"","11-introduction#1.1 Introduction":"","overview-of-the-library#Overview of the Library":"The AuthJwtModule is a powerful yet easy-to-use NestJS module designed for\nimplementing JWT-based authentication. With a few simple steps, you can integrate\nsecure authentication into your application without hassle.","purpose-and-key-features#Purpose and Key Features":"Ease of Use: The primary goal of AuthJwtModule is to simplify the process\nof adding JWT authentication to your NestJS application. All you need to do is provide\nconfiguration data, and the module handles the rest.\nProtect By Default: Be default the AuthJwtModule provides a global APP_GUARD\nto protect all routes by default. This can easily be overridden using the\n@AuthPublic decorator.\nSynchronous and Asynchronous Registration: Flexibly register the module either\nsynchronously or asynchronously, depending on your application's needs.\nGlobal and Feature-Specific Registration: Use the module globally across your\napplication or tailor it for specific features.\nSeamless Integration: Easily integrates with other NestJS modules like\n@concepta/nestjs-auth-local, @concepta/nestjs-auth-refresh, and more.","12-installation#1.2 Installation":"","install-the-authjwtmodule-package#Install the AuthJwtModule package:":"To get started, install the @concepta/nestjs-auth-jwt packages and some other dependencies from npm or yarn:\nnpm install class-transformer\nnpm install class-validator\nnpm install @nestjs/jwt\nnpm install @concepta/ts-core\nnpm install @concepta/nestjs-authentication\nnpm install @concepta/nestjs-jwt\nnpm install @concepta/nestjs-auth-jwt\nor\nyarn add class-transformer\nyarn add class-validator\nyarn add @nestjs/jwt\nyarn add @concepta/ts-core\nyarn add @concepta/nestjs-authentication\nyarn add @concepta/nestjs-jwt\nyarn add @concepta/nestjs-auth-jwt","add-the-authjwtmodule-to-your-nestjs-application#Add the AuthJwtModule to Your NestJS Application:":"Import the AuthJwtModule and required services in your application module.\nEnsure to import JwtModule and provide the necessary configuration options,\nincluding the required userLookupService.","13-basic-setup-in-a-nestjs-project#1.3 Basic Setup in a NestJS Project":"","scenario-users-have-a-list-of-pets#Scenario: Users have a list of pets":"To demonstrate this scenario, we will set up an application where users can have a list of pets.\nWe will create the necessary entities, services, module configurations to simulate the environment.\nNote: The @concepta/nestjs-user module can be used in place of our example User related prerequisites.","step-1-create-entities#Step 1: Create Entities":"First, create the User and Pet entities.\n// user.entity.ts\nimport { Entity, PrimaryGeneratedColumn, Column, OneToMany } from 'typeorm';\nimport { Pet } from './pet.entity';\n@Entity()\nexport class User {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n  @Column()\n  name: string;\n  @OneToMany(() => Pet, pet => pet.user)\n  pets: Pet[];\n}\n// pet.entity.ts\nimport { Entity, PrimaryGeneratedColumn, Column, ManyToOne } from 'typeorm';\nimport { User } from './user.entity';\n@Entity()\nexport class Pet {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n  @Column()\n  name: string;\n  @ManyToOne(() => User, user => user.pets)\n  user: User;\n}","step-2-create-services#Step 2: Create Services":"Next, create services for User and Pet to handle the business logic.\n// user.service.ts\nimport { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { User } from './user.entity';\n@Injectable()\nexport class UserService {\n  constructor(\n    @InjectRepository(User)\n    private userRepository: Repository<User>,\n  ) {}\n  findAll(): Promise<User[]> {\n    return this.userRepository.find({ relations: ['pets'] });\n  }\n  findOne(id: string): Promise<User> {\n    return this.userRepository.findOne({\n      where: { id },\n      relations: ['pets'],\n    });\n  }\n}\n// user-lookup.service.ts\nimport { AuthJwtUserLookupServiceInterface } from '@concepta/nestjs-auth-jwt';\nimport { ReferenceIdInterface, ReferenceSubject } from '@concepta/ts-core';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nexport class UserLookupService implements AuthJwtUserLookupServiceInterface {\n   constructor(\n    private userService: UserService,\n  ) {}\n  async bySubject(subject: ReferenceSubject): Promise<ReferenceIdInterface> {\n    // return authorized user\n    return this.userService.findOne(subject);\n  }\n}\n// pet.service.ts\nimport { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Pet } from './pet.entity';\n@Injectable()\nexport class PetService {\n  constructor(\n    @InjectRepository(Pet)\n    private petRepository: Repository<Pet>,\n  ) {}\n  findAll(): Promise<Pet[]> {\n    return this.petRepository.find();\n  }\n  findByUserId(userId: number): Promise<Pet[]> {\n    return this.petRepository.find({ where: { user: { id: userId } } });\n  }\n}","step-3-create-controller#Step 3: Create Controller":"Create a controller to handle the HTTP requests.\nUse @AuthPublic decorator from @concepta/nestjs-authentication on the controller or\nindividual routes if you want to override the global JWT guard to make the route public.\n// user.controller.ts\nimport { Controller, Get, Param } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { PetService } from './pet.service';\nimport { AuthJwtGuard } from '@concepta/nestjs-auth-jwt';\n@Controller('user')\nexport class UserController {\n  constructor(\n    private userService: UserService,\n    private petService: PetService,\n  ) {}\n  @Get(':id/pets')\n  async getPets(@Param('id') userId: number) {\n    return this.petService.findByUserId(userId);\n  }\n}","step-4-configure-the-module#Step 4: Configure the Module":"Configure the module to include the necessary services, controllers, and guards.\nimport { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AuthJwtModule } from '@concepta/nestjs-auth-jwt';\nimport { UserController } from './user.controller';\nimport { UserService } from './user.service';\nimport { PetService } from './pet.service';\nimport { User } from './user.entity';\nimport { Pet } from './pet.entity';\nimport { JwtModule, ExtractJwt } from '@concepta/nestjs-jwt';\nimport { ConfigService } from '@nestjs/config';\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([User, Pet]),\n    JwtModule.forRoot({}), // <- required for AuthJwtModule to work\n    AuthJwtModule.registerAsync({\n      inject: [UserService],\n      useFactory: async (userLookupService: UserService) => ({\n        userLookupService,        \n      }),\n    }),\n  ],\n  controllers: [UserController],\n  providers: [UserService, PetService],\n});\nexport class UserModule {};","14-first-authentication-with-jwt#1.4 First Authentication with JWT":"","validating-the-setup#Validating the Setup":"To validate the setup, you can use curl commands to simulate frontend requests.By following these steps, you can validate that the setup is working correctly and that\nauthenticated requests to the user/:id/pets endpoint return the expected list of pets for a given user.Here are the steps to test the user/:id/pets endpoint:","step-1-obtain-a-jwt-token#Step 1: Obtain a JWT Token":"Assuming you have an authentication endpoint to obtain a JWT token,\nuse curl to get the token. Replace [auth-url] with your actual\nauthentication URL, and [username] and [password] with valid credentials.\ncurl -X POST [auth-url] \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"username\": \"[username]\", \"password\": \"[password]\"}'\nThis should return a response with a JWT token, which you'll use for authenticated requests.","step-2-make-an-authenticated-request#Step 2: Make an Authenticated Request":"Use the JWT token obtained in the previous step to make an authenticated request to\nthe user/:id/pets endpoint. Replace [jwt-token] with the actual token and [user-id] with a valid user ID.\ncurl -X GET http://localhost:3000/user/[user-id]/pets \\\n  -H \"Authorization: Bearer [jwt-token]\"","example-curl-calls#Example Curl Calls:":"Here is an example sequence of curl commands:","obtain-a-jwt-token#Obtain a JWT token:":"curl -X POST http://localhost:3000/auth/login \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"username\": \"testuser\", \"password\": \"testpassword\"}'","example-jwt-response#Example JWT response:":"{\n  \"accessToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\"\n}","make-an-authenticated-request-using-the-token#Make an authenticated request using the token:":"curl -X GET http://localhost:3000/user/1/pets \\\n  -H \"Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\"","example-authenticated-response#Example authenticated response:":"[\n  {\n    \"id\": 1,\n    \"name\": \"Fluffy\",\n    \"user\": {\n      \"id\": 1,\n      \"name\": \"John Doe\",\n      \"pets\": []\n    }\n  }\n]","setting-up-a-custom-module-for-providers#Setting Up a Custom Module for Providers":"Before diving into the How-To Guides, we'll set up a custom module that\nincludes the necessary providers and exports for UserLookupService,\nMyVerifyTokenService, and MyAppGuard.This will ensure that our asynchronous registration examples can\ninject these services correctly.\nimport { Module } from '@nestjs/common';\nimport { UserLookupService } from './user-lookup.service';\nimport { MyVerifyTokenService } from './verify-token.service';\nimport { MyAppGuard } from './my-app-guard';\n@Module({\n  providers: [UserLookupService, MyVerifyTokenService, MyAppGuard],\n  exports: [UserLookupService, MyVerifyTokenService, MyAppGuard],\n});\nexport class MyProviderModule {};","1-registering-authjwtmodule-synchronously#1. Registering AuthJwtModule Synchronously":"import * as jwt from 'jsonwebtoken';\nimport { Module } from '@nestjs/common';\nimport { AuthJwtModule } from '@concepta/nestjs-auth-jwt';\nimport { JwtModule, ExtractJwt } from '@concepta/nestjs-jwt';\nimport { UserLookupService } from './user-lookup.service';\n// define the verifyToken function\nconst verifyToken = async (\n  token: string,\n  done: (error: any, payload?: any) => void\n) => {\n  try {\n    const payload = await jwt.verify(token, 'your-secret-key');\n    done(null, payload);\n  } catch (error) {\n    done(error);\n  }\n};\n@Module({\n  imports: [\n    JwtModule.forRoot({}), // <- required for AuthJwtModule to work\n    AuthJwtModule.register({\n      userLookupService: new UserLookupService(), // <- required\n      settings: {\n        jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n        verifyToken,\n      },\n      verifyTokenService: new MyVerifyTokenService(), // <- optional custom service\n      appGuard: new MyAppGuard(), // <- optional custom guard\n    }),\n  ],\n})\nexport class AppModule {}","2-registering-authjwtmodule-asynchronously#2. Registering AuthJwtModule Asynchronously":"import * as jwt from 'jsonwebtoken';\nimport { Module } from '@nestjs/common';\nimport { AuthJwtModule } from '@concepta/nestjs-auth-jwt';\nimport { JwtModule, ExtractJwt } from '@concepta/nestjs-jwt';\nimport { ConfigService } from '@nestjs/config';\nimport { MyProviderModule } from './my-provider.module';\n// define the verifyToken function\nconst verifyToken = (configService: ConfigService) => async (\n  token: string,\n  done: (error: any, payload?: any) => void\n) => {\n  try {\n    const payload = await jwt.verify(token, configService.get('JWT_SECRET'));\n    done(null, payload);\n  } catch (error) {\n    done(error);\n  }\n};\n@Module({\n  imports: [\n    JwtModule.forRoot({}), // <- required for AuthJwtModule to work\n    MyProviderModule, // <- import the my provider module\n    AuthJwtModule.registerAsync({\n      imports: [MyProviderModule],\n      useFactory: async (\n        configService: ConfigService,\n        userLookupService: UserLookupService,\n        verifyTokenService: MyVerifyTokenService,\n        appGuard: MyAppGuard,\n      ) => ({\n        userLookupService, // injected via useFactory\n        settings: {\n          jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n          verifyToken: verifyToken(configService),\n        },\n        verifyTokenService, // injected via useFactory\n        appGuard, // injected via useFactory\n      }),\n      inject: [ConfigService, UserLookupService, MyVerifyTokenService, MyAppGuard],\n    }),\n  ],\n});\nexport class AppModule {};","3-global-registering-authjwtmodule-asynchronously#3. Global Registering AuthJwtModule Asynchronously":"import * as jwt from 'jsonwebtoken';\nimport { Module } from '@nestjs/common';\nimport { AuthJwtModule } from '@concepta/nestjs-auth-jwt';\nimport { JwtModule, ExtractJwt } from '@concepta/nestjs-jwt';\nimport { ConfigService } from '@nestjs/config';\nimport { MyProviderModule } from './my-provider.module';\n// define the verifyToken function\nconst verifyToken = (configService: ConfigService) => async (\n  token: string,\n  done: (error: any, payload?: any) => void\n) => {\n  try {\n    const payload = await jwt.verify(token, configService.get('JWT_SECRET'));\n    done(null, payload);\n  } catch (error) {\n    done(error);\n  }\n};\n@Module({\n  imports: [\n    JwtModule.forRoot({}), // <- required for AuthJwtModule to work\n    MyProviderModule, // <- import the my provider module\n    AuthJwtModule.forRootAsync({\n      imports: [MyProviderModule],\n      useFactory: async (\n        configService: ConfigService,\n        userLookupService: UserLookupService,\n        verifyTokenService: MyVerifyTokenService,\n        appGuard: MyAppGuard,\n      ) => ({\n        userLookupService, // injected via useFactory\n        settings: {\n          jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n          verifyToken: verifyToken(configService),\n        },\n        verifyTokenService, // injected via useFactory\n        appGuard, // injected via useFactory\n      }),\n      inject: [ConfigService, UserLookupService, MyVerifyTokenService, MyAppGuard],\n    }),\n  ],\n});\nexport class AppModule {};","4-using-custom-user-lookup-service#4. Using Custom User Lookup Service":"This service is responsible for looking up user information based on the JWT payload.\nIt implements the AuthJwtUserLookupServiceInterface and must be provided to the module.\nimport { AuthJwtUserLookupServiceInterface } from '@concepta/nestjs-auth-jwt';\nimport { ReferenceIdInterface, ReferenceSubject } from '@concepta/ts-core';\nexport class UserLookupService implements AuthJwtUserLookupServiceInterface {\n  async bySubject(subject: ReferenceSubject): Promise<ReferenceIdInterface>  {\n    // implement user lookup logic here\n  }\n}","5-implementing-and-using-custom-token-verification-service#5. Implementing and Using Custom Token Verification Service":"This service verifies JWT tokens. If not provided, the default verification logic will be used. It extends the VerifyTokenServiceInterface.\nimport { JwtService } from '@nestjs/jwt';\nimport { Injectable } from '@nestjs/common';\nimport { VerifyTokenServiceInterface } from '@concepta/nestjs-authentication';\n@Injectable()\nexport class MyVerifyTokenService implements VerifyTokenServiceInterface {\n  accessToken(): ReturnType<JwtService['verifyAsync']> {\n    return new Promise((resolve, reject) => {\n      try {\n        // your custom logic to sign and validate the the token\n        resolve({ accessToken: 'access-token' });\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n  refreshToken(\n    ...args: Parameters<JwtService['verifyAsync']>\n  ): ReturnType<JwtService['verifyAsync']> {\n    return new Promise((resolve, reject) => {\n      try {\n        // your custom logic to sign and validate the the token\n        resolve({ accessToken: 'refresh-token' });\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n}","6-setting-up-a-custom-guard#6. Setting Up a Custom Guard":"To use a custom guard, you need to implement the CanActivate interface\nfrom NestJS and provide it in the module configuration.To take advantage of the ability to enable/disable guards via configuration\nsettings or with the @AuthPublic decorator, it is highly recommended that\nyou extend AuthJwtGuard class or call the AuthGuard() class factory from the\n@concepta/nestjs-authentication module.","step-1-implement-the-custom-guard#Step 1: Implement the Custom Guard":"Create a custom guard by extending the AuthJwtGuard.\nimport { Injectable, ExecutionContext } from '@nestjs/common';\nimport { AuthGuard } from '@concepta/nestjs-authentication';\n@Injectable()\nexport class MyAppGuard extends AuthJwtGuard {\n  canActivate(context: ExecutionContext) {\n    // call super class first\n    if (!super.canActivate(context)) {\n      return false;\n    }\n    // implement your custom authentication logic here\n    return true;\n  }\n}","step-2-provide-the-custom-guard-in-module-configuration#Step 2: Provide the Custom Guard in Module Configuration":"Update the module configuration to use the custom guard.\n// ...\nAuthJwtModule.registerAsync({\n  useFactory: async (userLookupService: UserService) => ({\n    userLookupService,\n    appGuard: MyAppGuard, // use the custom guard\n  }),\n  inject: [UserService],\n}),\n// ...","7-disabling-the-guard#7. Disabling the Guard":"To completely disable the global guard for all routes, you can set the appGuard option to false.","disable-the-guard-in-module-configuration#Disable the Guard in Module Configuration":"Update the module configuration to disable the global APP_GUARD.\n// ...\nAuthJwtModule.registerAsync({\n  useFactory: async (userLookupService: UserService) => ({\n    userLookupService,\n    appGuard: false, // disable the global APP_GUARD\n  }),\n  inject: [UserService],\n}),\n// ...","8-overwriting-the-settings#8. Overwriting the settings":"import { ExtractJwt, JwtStrategyOptionsInterface } from \"@concepta/nestjs-jwt\";\nconst settings: JwtStrategyOptionsInterface = {\n  jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n  verifyToken: async (\n    token: string,\n    done: (error: any, payload?: any) => void,\n  ) => {\n    try {\n      // add custom logic ot validate token\n      const payload = { id: 'user-id' };\n      done(null, payload);\n    } catch (error) {\n      done(error);\n    }\n  },\n};\n// ...\nAuthJwtModule.registerAsync({\n  useFactory: async (userLookupService: UserService) => ({\n    userLookupService,\n    settings,\n  }),\n  inject: [UserService],\n}),\n// ...","9-integration-with-other-nestjs-modules#9. Integration with Other NestJS Modules":"Integrate @concepta/nestjs-auth-jwt with other NestJS modules like\n@concepta/nestjs-user, @concepta/nestjs-auth-local, @concepta/nestjs-auth-refresh,\nand more for a comprehensive authentication system.Detailed Descriptions of All Classes, Methods, and Properties","1-authjwtmodule-api-reference#1. AuthJwtModule API Reference":"","registeroptions-authjwtoptions#register(options: AuthJwtOptions):":"Registers the module with synchronous options.","registerasyncoptions-authjwtasyncoptions#registerAsync(options: AuthJwtAsyncOptions):":"Registers the module with asynchronous options.","forrootoptions-authjwtoptions#forRoot(options: AuthJwtOptions):":"Registers the module globally with synchronous options.","forrootasyncoptions-authjwtasyncoptions#forRootAsync(options: AuthJwtAsyncOptions):":"Registers the module globally with asynchronous options.","forfeatureoptions-authjwtoptions#forFeature(options: AuthJwtOptions):":"Registers the module for specific features with custom options.","2-authjwtoptionsinterface#2. AuthJwtOptionsInterface":"The AuthJwtOptionsInterface provides various configuration options to customize the behavior of the AuthJwtModule. Below is a summary of the key options:","userlookupservice-required#userLookupService (required):":"Service for looking up user information based on JWT payload.","verifytokenservice-optional#verifyTokenService (optional):":"Service for verifying JWT tokens.","appguard-optional#appGuard (optional):":"Custom guard to protect routes; can be set to a custom guard or false.","settings-optional#settings (optional):":"JWT strategy settings, including token extraction and verification logic.","3-authjwtmodule-classes-and-interfaces#3. AuthJwtModule Classes and Interfaces":"AuthJwtUserLookupServiceInterface\nVerifyTokenServiceInterface\nJwtStrategyOptionsInterface","conceptual-overview-of-jwt-authentication#Conceptual Overview of JWT Authentication":"","what-is-jwt#What is JWT?":"JSON Web Tokens (JWT) are a compact, URL-safe means of representing claims to\nbe transferred between two parties.The token is composed of three parts: the header, payload, and signature.\nThe header typically consists of the token type (JWT) and the signing algorithm (e.g., HMAC SHA256).The payload contains the claims, which are statements about an entity\n(typically, the user) and additional data. The signature is used to verify that the\nsender of the JWT is who it says it is and to ensure that the message wasn't changed along the way.For more details on JWT, see the JWT Introduction.","benefits-of-using-jwt#Benefits of Using JWT":"JWTs offer several benefits for authentication and authorization:\nStateless: JWTs do not require storing user session information on the server,\nwhich makes them ideal for scalable applications.\nCompact: Their small size allows them to be easily passed in URLs, POST parameters,\nor inside HTTP headers.\nSelf-contained: JWTs contain all the necessary information about the user, avoiding\nthe need to query the database for each request once the user is authenticated.\nSecurity: JWTs can be signed using a secret (with HMAC algorithm) or a public/private\nkey pair (with RSA or ECDSA), ensuring the data integrity.\nFor more benefits, see the JWT Handbook.","design-choices-in-authjwtmodule#Design Choices in AuthJwtModule":"","why-use-nestjs-guards#Why Use NestJS Guards?":"Description: NestJS guards provide a way to control the access to various parts\nof the application by checking certain conditions before the route handler is executed.In AuthJwtModule, guards are used to implement authentication and authorization logic.\nBy using guards, developers can apply security policies across routes efficiently, ensuring\nthat only authenticated and authorized users can access protected resources.Read more about NestJS Guards.","synchronous-vs-asynchronous-registration#Synchronous vs Asynchronous Registration":"The AuthJwtModule supports both synchronous and asynchronous registration:\nSynchronous Registration: This method is used when the configuration options\nare static and available at application startup. It simplifies the setup process and\nis suitable for most use cases where configuration values do not depend on external services.\nAsynchronous Registration: This method is beneficial when configuration options\nneed to be retrieved from external sources, such as a database or an external API,\nat runtime. It allows for more flexible and dynamic configuration but requires an\nasynchronous factory function.\nFor more on module registration, see the NestJS Documentation.","global-vs-feature-specific-registration#Global vs Feature-Specific Registration":"The AuthJwtModule can be registered globally or for specific features:\nGlobal Registration: Makes the module available throughout the entire application.\nThis approach is useful when JWT authentication is required across all or most routes in the application.\nFeature-Specific Registration: Allows the module to be registered only for specific\nfeatures or modules within the application. This provides more granular control, enabling\ndifferent parts of the application to have distinct authentication and authorization requirements.\nTo understand more about global and feature-specific registration, refer to the\nNestJS Module Documentation.","integrating-authjwtmodule-with-other-modules#Integrating AuthJwtModule with Other Modules":"","how-authjwtmodule-works-with-authlocalmodule#How AuthJwtModule Works with AuthLocalModule":"The AuthJwtModule can be seamlessly integrated with the\nAuthLocalModule to provide a comprehensive authentication solution. AuthLocalModule\nhandles the initial authentication using local strategies such as username and password.Once the user is authenticated, AuthJwtModule can issue a JWT that the user can use for\nsubsequent requests. This integration allows for secure and efficient authentication\nprocesses combining the strengths of both modules.","integrating-with-authrefreshmodule#Integrating with AuthRefreshModule":"Integrating AuthJwtModule with AuthRefreshModule enables the\napplication to handle token refresh logic. Refresh tokens are used to obtain new access\ntokens without requiring the user to re-authenticate.This setup enhances the user experience by maintaining sessions securely and seamlessly.\nThe integration involves configuring both modules to use the same token issuance and\nverification mechanisms, ensuring smooth interoperability and security."}},"/reference/rockets/nestjs-auth-local/README":{"title":"Rockets NestJS Local Authentication","data":{"":"@concepta/nestjs-auth-local • DocsPackages Example / @concepta/nestjs-auth-localAuthenticate requests using username/email and password against a local or\nremote data source.","project#Project":"","table-of-contents#Table of Contents":"Tutorials\n1. Getting Started with AuthLocalModule\n1.1 Introduction\nOverview of the Library\nPurpose and Key Features\n1.2 Installation\nInstall the AuthLocalModule package\nAdd the AuthLocalModule to Your NestJS Application\n1.3 Basic Setup in a NestJS Project\nScenario: Users can log in using local authentication\nStep 1: Create Entities\nStep 2: Create Services\nStep 3: Configure the Module\nValidating the Setup\nHow-To Guides\n1. Registering AuthLocalModule Synchronously\n2. Registering AuthLocalModule Asynchronously\n3. Global Registering AuthLocalModule Asynchronously\n4. Implementing User Lookup Service\n5. Implementing custom token issuance service\n6. Implementing a custom user validation service\n7. Implementing a custom password validation service\n8. Overriding the Settings\n9. Integration with Other NestJS Modules\nReference\n1. Explanation of Properties in AuthLocalOptionsInterface\n2. AuthLocalModule API Reference\nExplanation\nConceptual Overview of Local Authentication\nWhat is Local Authentication?\nBenefits of Using Local Authentication\nDesign Choices in AuthLocalModule\nWhy Use Local Authentication?\nSynchronous vs Asynchronous Registration\nGlobal vs Feature-Specific Registration","tutorials#Tutorials":"","1-getting-started-with-authlocalmodule#1. Getting Started with AuthLocalModule":"","11-introduction#1.1 Introduction":"","overview-of-the-library#Overview of the Library":"The AuthLocalModule is a robust NestJS module designed for implementing\nlocal authentication using username and password. This module leverages the\npassport-local strategy\nto authenticate users locally within your application.","purpose-and-key-features#Purpose and Key Features":"Local Authentication: Provides a straightforward way to implement local\nauthentication using username and password.\nSynchronous and Asynchronous Registration: Flexibly register the module\neither synchronously or asynchronously, depending on your application's needs.\nGlobal and Feature-Specific Registration: Use the module globally across\nyour application or tailor it for specific features.\nCustomizable: Easily customize various aspects such as user validation,\ntoken issuance, and password validation.","12-installation#1.2 Installation":"","install-the-authlocalmodule-package#Install the AuthLocalModule package:":"npm install class-transformer\nnpm install class-validator\nnpm install @concepta/ts-core\nnpm install @concepta/nestjs-authentication\nnpm install @concepta/nestjs-password\nnpm install @concepta/nestjs-jwt\nnpm install @concepta/nestjs-auth-local\nor\nyarn add class-transformer\nyarn add class-validator\nyarn add @concepta/ts-core\nyarn add @concepta/nestjs-authentication\nyarn add @concepta/nestjs-password\nyarn add @concepta/nestjs-jwt\nyarn add @concepta/nestjs-auth-local","add-the-authlocalmodule-to-your-nestjs-application#Add the AuthLocalModule to Your NestJS Application:":"Import the AuthLocalModule and required services in your application module.\nEnsure to provide the necessary configuration options at\nAuthLocalOptionsInterface.The AuthLocalOptionsInterface defines the configuration options for the\nlocal authentication strategy within a NestJS application using the\n@concepta/nestjs-auth-local package. This interface allows for the customization\nof userLookupService, issueTokenService, validateUserService, and\npasswordValidationService. Please see Reference for more\ndetails.Optional fields utilize default implementations, enabling straightforward\nintegration and flexibility to override with custom implementations as needed.\nThis setup ensures that developers can tailor the authentication process to\nspecific requirements while maintaining a robust and secure authentication\nframework.","13-basic-setup-in-a-nestjs-project#1.3 Basic Setup in a NestJS Project":"","scenario-users-can-log-in-using-local-authentication#Scenario: Users can log in using local authentication":"To test this scenario, we will set up an application where users can log\nin using a username and password. We will create the necessary entities, services, module configurations.\nNote: The @concepta/nestjs-user module can be used in place of our example User related prerequisites.","step-1-create-entities#Step 1: Create Entities":"First, create the User entity.\n// user.entity.ts\nexport class User {\n  id: number;\n  username: string;\n  password: string;\n}","step-2-create-services#Step 2: Create Services":"Next, you need to create the UserLookupService. This\nservice is responsible for the business logic related to\nretrieving user data. It should implement the\nAuthLocalUserLookupServiceInterface.Within this service, implement the byUsername method to\nfetch user details by their username (or email). Ensure that\nthe method  returns a User object containing passwordHash and\npasswordSalt.These attributes are crucial as they are used by the\nvalidateUser method in the passwordValidationService\nto authenticate the user, which is a configurable option\nin the AuthLocalModule.\n// user-lookup.service.ts\nimport { Injectable } from '@nestjs/common';\nimport { ReferenceUsername } from '@concepta/ts-core';\nimport { AuthLocalUserLookupServiceInterface } from '@concepta/nestjs-auth-local';\nimport { AuthLocalCredentialsInterface } from '@concepta/nestjs-auth-local/dist/interfaces/auth-local-credentials.interface';\n@Injectable()\nexport class UserLookupService implements AuthLocalUserLookupServiceInterface {\n  async byUsername(\n    username: ReferenceUsername,\n  ): Promise<AuthLocalCredentialsInterface | null> {\n    // make sure this method will return a valid user with\n    // correct passwordHash and passwordSalt\n    // let's user this mock data for the purposes of this tutorial\n    return {\n      id: '5b3f5fd3-9426-4c4d-a06d-b4d55079034d',\n      username: username,\n      passwordHash:\n        '$2b$12$9rQ4qZx8gpTaTR4ic3LQ.OkebyVBa48DP42jErL1zfqF17WeG4hHC',\n      passwordSalt: '$2b$12$9rQ4qZx8gpTaTR4ic3LQ.O',\n      active: true,\n    };\n  }\n}","step-3-configure-the-module#Step 3: Configure the Module":"Configure the module to include the necessary services userLookupService.\n// app.module.ts\nimport { Module } from '@nestjs/common';\nimport { AuthLocalModule } from '@concepta/nestjs-auth-local';\nimport { JwtModule } from '@concepta/nestjs-jwt';\nimport { UserLookupService } from './user-lookup.service';\n@Module({\n  imports: [\n    JwtModule.forRoot({}),\n    AuthLocalModule.forRoot({\n      userLookupService: new UserLookupService(),\n    }),\n  ],\n  controllers: [],\n  providers: [],\n})\nexport class AppModule {}","validating-the-setup#Validating the Setup":"To validate the setup, you can use curl commands to simulate frontend\nrequests. Here are the  steps to test the login endpoint:","step-1-obtain-a-jwt-token#Step 1: Obtain a JWT Token":"Assuming you have an endpoint to obtain a JWT token, use curl to get\nthe token. Replace auth-url with your actual authentication URL, and\nusername and password with valid credentials.\ncurl -X POST http://localhost:3000/auth/login \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"username\": \"testuser\", \"password\": \"testpassword\"}'\nThis should return a response with a login message.","example#Example":"Here is an example sequence of curl commands to validate the login setup:\nLogin Request:\nCommand:\ncurl -X POST http://localhost:3000/auth/login \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"username\": \"username\", \"password\": \"Test1234\"}'\nResponse (example):\n{\n    \"accessToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..Zl2i59w89cgJxfI4lXn6VmOhC5GLEqMm2nWkiVKpEUs\",\n    \"refreshToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..xEF7kObwkztrMF7J83S-xvDarABmjXYkqLFINPWbx6g\"\n}\nInvalid Credentials Request:\nCommand:\ncurl -X POST http://localhost:3000/auth/login \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"username\": \"testuser\", \"password\": \"wrongpassword\"}'\nResponse (example):\n{\n    \"statusCode\": 401,\n    \"message\": \"Unauthorized\"\n}","how-to-guides#How-To Guides":"","1-registering-authlocalmodule-synchronously#1. Registering AuthLocalModule Synchronously":"// app.module.ts\n//...\n  AuthLocalModule.register({\n    userLookupService: new MyUserLookupService(), // required\n  }),\n//...","2-registering-authlocalmodule-asynchronously#2. Registering AuthLocalModule Asynchronously":"// app.module.ts\nimport { MyUserLookupService } from './services/my-user-lookup.service.ts';\n//...\nAuthLocalModule.registerAsync({\n  useFactory: async (userLookupService: MyUserLookupService) => ({\n    userLookupService, // required\n  }),\n  inject: [MyUserLookupService],\n}),\n//...","3-global-registering-authlocalmodule-asynchronously#3. Global Registering AuthLocalModule Asynchronously":"// app.module.ts\n//...\nAuthLocalModule.forRootAsync({\n  useFactory: async (userLookupService: MyUserLookupService) => ({\n    userLookupService, \n  }),\n  inject: [MyUserLookupService],\n}),\n//...","4-implementing-user-lookup-service#4. Implementing User Lookup Service":"// my-user-lookup.service.ts\nimport { Injectable } from '@nestjs/common';\nimport {\n  AuthLocalUserLookupServiceInterface,\n  AuthLocalCredentialsInterface\n} from '@concepta/nestjs-auth-local';\n@Injectable()\nexport class MyUserLookupService\n  implements AuthLocalUserLookupServiceInterface {\n  async byUsername(username: string): Promise<AuthLocalCredentialsInterface | null> {\n    // implement custom logic to return the user's credentials\n    return null;\n  }\n}","5-implementing-custom-token-issuance-service#5. Implementing custom token issuance service":"There are two ways to implementing the custom token issue service. You can\ntake advantage of the default service, as seen here:\n// my-jwt-issue.service.ts\nimport { Injectable } from '@nestjs/common';\nimport {\n  JwtIssueService,\n  JwtIssueServiceInterface,\n  JwtSignService,\n} from '@concepta/nestjs-jwt';\n@Injectable()\nexport class MyJwtIssueService extends JwtIssueService {\n  constructor(protected readonly jwtSignService: JwtSignService) {\n    super(jwtSignService);\n  }\n  async accessToken(\n    ...args: Parameters<JwtIssueServiceInterface['accessToken']>\n  ) {\n    // your custom code\n    return super.accessToken(...args);\n  }\n  async refreshToken(\n    ...args: Parameters<JwtIssueServiceInterface['refreshToken']>\n  ) {\n    // your custom code\n    return super.refreshToken(...args);\n  }\n}\nOr you can completely replace the default implementation:\n// my-jwt-issue.service.ts\nimport { Injectable } from '@nestjs/common';\nimport { JwtIssueServiceInterface } from '@concepta/nestjs-jwt';\n@Injectable()\nexport class MyJwtIssueService implements JwtIssueServiceInterface {\n  constructor() {}\n  async accessToken(\n    ...args: Parameters<JwtIssueServiceInterface['accessToken']>\n  ) {\n    // your custom code\n  }\n  async refreshToken(\n    ...args: Parameters<JwtIssueServiceInterface['refreshToken']>\n  ) {\n    // your custom code\n  }\n}","6-implementing-a-custom-user-validation-service#6. Implementing a custom user validation service":"The same approach can be done for AuthLocalValidateUserService you can\neither completely override the default implementation or you can take\nadvantage of the default implementation.\n// my-auth-local-validate-user.service.ts\nimport { Injectable } from '@nestjs/common';\nimport { ReferenceActiveInterface, ReferenceIdInterface } from '@concepta/ts-core';\nimport {\n  AuthLocalValidateUserInterface,\n  AuthLocalValidateUserService\n} from '@concepta/nestjs-auth-local';\n@Injectable()\nexport class MyAuthLocalValidateUserService\n  extends AuthLocalValidateUserService\n{\n  \n  async validateUser(\n    dto: AuthLocalValidateUserInterface,\n  ): Promise<ReferenceIdInterface> {\n    // customize as needed\n    return super.validateUser(dto);\n  }\n  async isActive(\n    user: ReferenceIdInterface<string> & ReferenceActiveInterface<boolean>,\n  ): Promise<boolean> {\n    // customize as needed\n    return super.isActive(user);\n  }\n}\n// my-auth-local-validate-user.service.ts\nimport { Injectable } from '@nestjs/common';\nimport { ReferenceActiveInterface, ReferenceIdInterface } from '@concepta/ts-core';\nimport {\n  AuthLocalValidateUserInterface,\n  AuthLocalValidateUserServiceInterface\n} from '@concepta/nestjs-auth-local';\n@Injectable()\nexport class MyAuthLocalValidateUserService\n  implements AuthLocalValidateUserServiceInterface\n{\n  async validateUser(\n    dto: AuthLocalValidateUserInterface,\n  ): Promise<ReferenceIdInterface> {\n    // your custom code\n    return {\n      id: '[userId]',\n      //...\n    }\n  }\n  async isActive(\n    user: ReferenceIdInterface<string> & ReferenceActiveInterface<boolean>,\n  ): Promise<boolean> {\n    // customize as needed\n    return true;\n  }\n}","7-implementing-a-custom-password-validation-service#7. Implementing a custom password validation service":"The PasswordValidationService in the @concepta/nestjs-password module\nprovides a default implementation using bcrypt for hashing and verifying passwords.\nHowever, depending on your application's requirements, you might need to use a\ndifferent method for password hashing or add additional validation logic.You can either extend the existing PasswordValidationService to leverage its\nbuilt-in functionalities while adding your enhancements, or completely\noverride it with your custom implementation.Overriding the Default Implementation:If your application requires a different hashing algorithm , you can replace\nthe default implementation with one that suits your needs.\n// my-password-validation.service.ts\nimport { Injectable } from '@nestjs/common';\nimport {\n  PasswordStorageInterface,\n  PasswordValidationServiceInterface,\n} from '@concepta/nestjs-password';\n@Injectable()\nexport class MyPasswordValidationService\n  implements PasswordValidationServiceInterface\n{\n  async validate(options: {\n    password: string;\n    passwordHash: string;\n    passwordSalt: string;\n  }): Promise<boolean> {\n    // customize as needed\n    return true;\n  }\n  async validateObject<T extends PasswordStorageInterface>(\n    password: string,\n    object: T,\n  ): Promise<boolean> {\n    // customize as needed\n    return true;\n  }\n}\nExtending the Default Service:If you want to add additional validation logic while keeping the current\nhashing and validation, you can extend the default service:\n// my-password-validation.service.ts\nimport {\n  PasswordStorageInterface,\n  PasswordValidationService,\n} from '@concepta/nestjs-password';\nimport { Injectable } from '@nestjs/common';\n@Injectable()\nexport class MyPasswordValidationService extends PasswordValidationService {\n  async validate(options: {\n    password: string;\n    passwordHash: string;\n    passwordSalt: string;\n  }): Promise<boolean> {\n    // customize as neeeded\n    return super.validate(options);\n  }\n  async validateObject<T extends PasswordStorageInterface>(\n    password: string,\n    object: T,\n  ): Promise<boolean> {\n    // customize as neeeded\n    return super.validateObject(password, object);\n  }\n}","8-overriding-the-settings#8. Overriding the Settings":"import { Type } from '@nestjs/common';\nexport class CustomLoginDto {\n  email: string;\n  password: string;\n}\nexport const localSettings = {\n  loginDto: CustomLoginDto,\n  usernameField: 'email',\n  passwordField: 'password'\n};\nAuthLocalModule.forRoot({\n  userLookupService: new UserLookupService(),\n  issueTokenService: new MyIssueTokenService(), // <- optional\n  passwordValidationService: new PasswordValidationService(), // <- optional\n  settings: localSettings\n}),","9-integration-with-other-nestjs-modules#9. Integration with Other NestJS Modules":"Integrate nestjs-auth-local with other NestJS modules like,\n@concepta/nestjs-authentication, @concepta/nestjs-auth-jwt,\n@concepta/nestjs-auth-refresh for a comprehensive authentication system.","reference#Reference":"For detailed information on the properties, methods, and classes used in the\n@concepta/nestjs-auth-local, please refer to the API documentation\navailable at AuthLocalModule API Documentation. This documentation provides\ncomprehensive details on the interfaces and services that you can utilize to\ncustomize and extend the authentication functionality within your NestJS\napplication.","explanation#Explanation":"","conceptual-overview-of-local-authentication#Conceptual Overview of Local Authentication":"","what-is-local-authentication#What is Local Authentication?":"Local Authentication is a method of verifying user identity based on credentials\n(username and password) stored locally within the application or in a connected\ndatabase.","benefits-of-using-local-authentication#Benefits of Using Local Authentication":"Simplicity: Easy to implement and manage.\nControl: Full control over user authentication and data.\nSecurity: When properly implemented, provides a secure way to authenticate\nusers.","design-choices-in-authlocalmodule#Design Choices in AuthLocalModule":"","why-use-local-authentication#Why Use Local Authentication?":"Local Authentication is ideal for applications that need to manage user\nauthentication directly within the application without relying on external\nidentity providers.","synchronous-vs-asynchronous-registration#Synchronous vs Asynchronous Registration":"Synchronous Registration: Used when configuration options are static and\navailable at startup.\nAsynchronous Registration: Used when configuration options need to be\nretrieved from external sources at runtime.","global-vs-feature-specific-registration#Global vs Feature-Specific Registration":"Global Registration: Makes the module available throughout the entire\napplication.\nFeature-Specific Registration: Allows the module to be registered only\nfor specific features or modules within the application."}},"/reference/rockets/nestjs-cache/README":{"title":"Rockets NestJS Cache Documentation","data":{"":"@concepta/nestjs-cache • DocsPackages Example / @concepta/nestjs-cacheThe Rockets NestJS Cache module offers a robust caching solution for NestJS\napplications, enhancing data management efficiency. It integrates seamlessly\nwith the NestJS framework, supporting both synchronous and asynchronous\nregistration of cache configurations. This module enables CRUD operations on\ncache entries directly from the database, facilitating data reuse across\ndifferent parts of an application or even different applications. It is\nespecially useful for boosting application performance, reducing database load,\nand improving user experience by minimizing data retrieval times.","project#Project":"","table-of-contents#Table of Contents":"Tutorials\nGetting Started with Rockets NestJS Cache\nIntroduction\nInstallation\nBasic Setup in a NestJS Project\nUsing the RestFull endpoints to access cache\nHow-to Guides\nRegistering CacheModule Synchronously\nRegistering CacheModule Asynchronously\nGlobal Registering CacheModule Asynchronously\nRegistering CacheModule Asynchronously for Multiple Entities\nUsing the CacheService to Access Cache\nReference\nCacheModule API Reference\nregister(options: CacheOptions)\nregisterAsync(options: CacheAsyncOptions)\nforRoot(options: CacheOptions)\nforRootAsync(options: CacheAsyncOptions)\nforFeature(options: CacheOptions)\nCacheOptionsInterface\nCacheModule Classes and Interfaces\nCacheEntityInterface\nCacheServiceInterface\nExplanation\nConceptual Overview of Caching\nWhat is Caching?\nBenefits of Using Cache\nWhy Use NestJS Cache?\nWhen to Use NestJS Cache\nHow CacheOptionsInterface is Used in the Controller and Endpoints\nDesign Choices in CacheModule\nSynchronous vs Asynchronous Registration\nGlobal vs Feature-Specific Registration","tutorials#Tutorials":"","getting-started-with-rockets-nestjs-cache#Getting Started with Rockets NestJS Cache":"","introduction#Introduction":"The Rockets NestJS Cache module is designed to provide an easy and efficient way\nto manage cached data in your application. This tutorial will guide you through\nthe initial steps to set up and use the Rockets NestJS Cache module.","installation#Installation":"To install the module, use the following command:\nnpm install typeorm\nnpm install class-transformer\nnpm install class-validator\nnpm install @nestjs/typeorm\nnpm install @concepta/nestjs-crud\nnpm install @concepta/nestjs-typeorm-ext\nnpm install @concepta/nestjs-cache\nor\nyarn add typeorm \nyarn add class-transformer\nyarn add class-validator\nyarn add @nestjs/typeorm\nyarn add @concepta/nestjs-crud\nyarn add @concepta/nestjs-typeorm-ext\nyarn add @concepta/nestjs-cache\nOn this documentation we will use sqlite3 as database, but you can use\nwhatever you want\nyarn add sqlite3","basic-setup-in-a-nestjs-project#Basic Setup in a NestJS Project":"User Module: Let's create a simple UserModule with Entity, Service,\nController, and Module, to be used in our tutorial so we can cache\nuser-related information with the cache module:\nimport { Entity, PrimaryGeneratedColumn, Column, OneToMany } from 'typeorm';\nimport { UserCache } from '../user-cache/user-cache.entity';\n@Entity()\nexport class User {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n  @Column()\n  name: string;\n  @OneToMany(() => UserCache, (userCache) => userCache.assignee)\n  userCaches!: UserCache[];\n}\nimport { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { User } from './user.entity';\n@Injectable()\nexport class UserService {\n  constructor(\n    @InjectRepository(User)\n    private userRepository: Repository<User>,\n  ) {}\n  findAll(): Promise<User[]> {\n    return this.userRepository.find();\n  }\n  findOne(id: string): Promise<User> {\n    return this.userRepository.findOne({\n      where: { id },\n    });\n  }\n  async create(userData: Partial<User>): Promise<User> {\n    const newUser = this.userRepository.create(userData);\n    await this.userRepository.save(newUser);\n    return newUser;\n  }\n}\nimport { Controller, Get, Post, Body, Param } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { User } from './user.entity';\n@Controller('user')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n  @Get()\n  async findAll(): Promise<User[]> {\n    return this.userService.findAll();\n  }\n  @Get(':id')\n  async findOne(@Param('id') id: string): Promise<User> {\n    return this.userService.findOne(id);\n  }\n  @Post()\n  async create(@Body() userData: Partial<User>): Promise<User>  {\n    return this.userService.create(userData);\n  }\n}\nimport { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserController } from './user.controller';\nimport { UserService } from './user.service';\nimport { User } from './user.entity';\n@Module({\n  imports: [TypeOrmModule.forFeature([User])],\n  controllers: [UserController],\n  providers: [UserService],\n})\nexport class UserModule {}\nUser Cache Module: Let's create the entity UserCache and the\nUserCacheModule that imports our CacheModule passing all configurations\nneeded. Please note that CacheSqliteEntity and CachePostgresEntity are\nprovided by the Rockets NestJS Cache module, so you can use them to create\nyour cache entity. They have a unique index with the following properties:\n'key', 'type', 'assignee.id' and it will throw a CacheEntityAlreadyExistsException if duplicated:\nimport { Entity, ManyToOne } from 'typeorm';\nimport { User } from '../user/user.entity';\nimport { CacheSqliteEntity } from '@concepta/nestjs-cache';\nimport { ReferenceIdInterface } from '@concepta/ts-core';\n@Entity()\nexport class UserCache extends CacheSqliteEntity {\n  @ManyToOne(() => User, (user) => user.userCaches)\n  assignee!: ReferenceIdInterface;\n}\nimport { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { CrudModule } from '@concepta/nestjs-crud';\nimport { CacheModule } from '@concepta/nestjs-cache';\nimport { User } from '../user/user.entity';\nimport { UserCache } from './user-cache.entity';\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([User]),\n    CacheModule.register({\n      entities: {\n        userCache: {\n          entity: UserCache,\n        },\n      },\n      settings: {\n        assignments: {\n          user: { entityKey: 'userCache' },\n        },\n      },\n    }),\n    CrudModule.forRoot({}),\n  ],\n})\nexport class UserCacheModule {}\nApp Module:And let's create our app module to connect everything.\nimport { Module } from '@nestjs/common';\nimport { UserCacheModule } from './user-cache/user-cache.module';\nimport { UserModule } from './user/user.module';\nimport { User } from './user/user.entity';\nimport { UserCache } from './user-cache/user-cache.entity';\nimport { TypeOrmExtModule } from '@concepta/nestjs-typeorm-ext';\n@Module({\nimports: [\n  TypeOrmExtModule.forRoot({\n    type: 'sqlite',\n    database: ':memory:',\n    synchronize: true,\n    entities: [User, UserCache],\n  }),\n  UserCacheModule,\n  UserModule,\n],\ncontrollers: [],\nproviders: [],\n})\nexport class AppModule {}","using-the-restfull-endpoints-to-access-cache#Using the RestFull endpoints to access cache":"After setting up the basic configuration, you can start using the caching\nfunctionality in your application.\nassignments: {\n  user: { entityKey: 'userCache' },\n},\nThe code above will generate a route for the client to have access, the module\nwill generate the following endpoint /cache/user. This endpoint will be\nreferencing whatever entity was associated in the entities section, as you can\nsee below.\nentities: {\n    userCache: {\n    entity: UserCacheEntityFixture,\n  },\n},\nThis will make the following endpoints available:\nCreate (POST): To create a new cache entry, the request body should\nmatch the CacheCreatableInterface; Properties key, type and assignee.id\nare unique and will throw a CacheEntityAlreadyExistsException error on\nattempt to insert duplicated data:\nexport interface CacheCreatableInterface extends Pick<CacheInterface, 'key' | 'type' | 'data' | 'assignee'> {\n  expiresIn: string | null;\n}\nExample curl command:\ncurl -X POST http://your-api-url/cache/user \\\n-H \"Content-Type: application/json\" \\\n-d '{\n  \"key\": \"exampleKey\",\n  \"type\": \"exampleType\",\n  \"data\": \"{data: 'example'}\",\n  \"assignee\": { id: 'exampleId'},\n  \"expiresIn\": \"1h\"\n}'\nRead (GET): To read a cache entry by its ID:\ncurl -X GET http://your-api-url/cache/user/{id}\nUpdate (PUT): To update an existing cache entry, the request body should\nmatch the CacheUpdatableInterface:\nexport interface CacheUpdatableInterface extends Pick<CacheInterface, 'key' | 'type' | 'data' | 'assignee'> {\n  expiresIn: string | null;\n}\nExample curl command:\ncurl -X PUT http://your-api-url/cache/user/{id} \\\n-H \"Content-Type: application/json\" \\\n-d '{\n  \"key\": \"updatedKey\",\n  \"type\": \"updatedType\",\n  \"data\": \"updatedData\",\n  \"assignee\": \"updatedAssignee\",\n  \"expiresIn\": \"2d\"\n}'\nDelete (DELETE): To delete a cache entry by its ID:\ncurl -X DELETE http://your-api-url/cache/user/{id}\nReplace http://your-api-url with the actual base URL of your API, and {id}\nwith the actual ID of the cache entry you wish to interact with.\nTesting the cache: You can test the cache by creating a new user and\nthen accessing the cache endpoint:\ncurl -X POST http://your-api-url/user \\\n-H \"Content-Type: application/json\" \\\n-d '{\n  \"name\": \"John Doe\",\n}'\nThe response will be something like this:\n{\n    \"name\": \"John Doe\",\n    \"id\": \"5f84d150-7ebd-4c59-997a-df65a5935123\"\n}\nNow, let's add something to the cache with reference of the user\ncurl -X POST http://your-api-url/cache/user \\\n-H \"Content-Type: application/json\" \\\n-d '{\n  \"key\": \"user\",\n  \"type\": \"filter\",\n  \"data\": \"{data: 'example'}\",\n  \"assignee\": { \"id\": \"5f84d150-7ebd-4c59-997a-df65a5935123\"},\n  \"expiresIn\": \"1h\"\n}'\nIt will give you a response similar to this.\n{\n    \"id\": \"a70e629b-7e6d-4dcc-9e74-a2e376f1c19a\",\n    \"dateCreated\": \"2024-06-07T15:16:56.000Z\",\n    \"dateUpdated\": \"2024-06-07T15:16:56.000Z\",\n    \"dateDeleted\": null,\n    \"version\": 1,\n    \"key\": \"user\",\n    \"data\": \"{data: 'example'}\",\n    \"type\": \"filter\",\n    \"assignee\": {\n        \"id\": \"0e5bee5d-5d53-46ef-a94a-22aceea81fc5\"\n    }\n}\nNow, if you access the cache endpoint /cache/user, you will see the new user\ncached:\n  curl -X GET http://your-api-url/cache/user\n[\n  {\n      \"id\": \"24864a7e-372e-4426-97f0-7e1c7514be16\",\n      \"dateCreated\": \"2024-06-07T15:47:38.000Z\",\n      \"dateUpdated\": \"2024-06-07T15:47:38.000Z\",\n      \"dateDeleted\": null,\n      \"version\": 1,\n      \"key\": \"user\",\n      \"data\": \"{data: 'example'}\",\n      \"type\": \"filter\",\n      \"assignee\": {\n          \"id\": \"5f84d150-7ebd-4c59-997a-df65a5935123\"\n      }\n  }\n]","registering-cachemodule-synchronously#Registering CacheModule Synchronously":"To register the CacheModule synchronously, you can use the register method.\nThis method allows you to pass configuration options directly.","example#Example:":"@Module({\n  imports: [\n    CacheModule.register({\n      settings: {\n        assignments: {\n          user: { entityKey: 'userCache' },\n        },\n      },\n      entities: {\n        userCache: {\n          entity: UserCacheEntityFixture,\n        },\n      },\n    }),\n  ],\n})\nexport class AppModule {}","registering-cachemodule-asynchronously#Registering CacheModule Asynchronously":"For more advanced use cases, you can register the CacheModule asynchronously using\nthe registerAsync method. This method is useful when you need to perform\nasynchronous operations to get the configuration options.","example-1#Example:":"@Module({\n  imports: [\n    CacheModule.registerAsync({\n      useFactory: async () => ({\n        settings: {\n          assignments: {\n            user: { entityKey: 'userCache' },\n          },\n        },\n        entities: {\n          userCache: {\n            entity: UserCacheEntityFixture,\n          },\n        },\n      }),\n    }),\n  ],\n})\nexport class AppModule {}","global-registering-cachemodule-asynchronously#Global Registering CacheModule Asynchronously":"For more advanced use cases, you can register the global CacheModule asynchronously\nusing the forRootAsync method. This method is useful when you need to perform\nasynchronous operations to get the configuration options.","example-2#Example:":"@Module({\n  imports: [\n    CacheModule.forRootAsync({\n      useFactory: async () => ({\n        settings: {\n          assignments: {\n            user: { entityKey: 'userCache' },\n          },\n        },\n        entities: {\n          userCache: {\n            entity: UserCacheEntityFixture,\n          },\n        },\n      }),\n    }),\n  ],\n})\nexport class AppModule {}","registering-cachemodule-asynchronously-for-multiple-entities#Registering CacheModule Asynchronously for multiple entities":"This section demonstrates how to register the CacheModule asynchronously when\ndealing with multiple entities.","example-3#Example:":"@Module({\n  imports: [\n    CacheModule.registerAsync({\n      useFactory: async () => ({\n        settings: {\n          assignments: {\n            user: { entityKey: 'userCache' },\n            pet: { entityKey: 'petCache' },\n          },\n        },\n        entities: {\n          userCache: {\n            entity: UserCacheEntityFixture,\n          },\n          petCache: {\n            entity: PetCacheEntity,\n          },\n        },\n      }),\n    }),\n  ],\n})\nexport class AppModule {}","using-the-cacheservice-to-access-cache#Using the CacheService to access cache":"The CacheService provided by the Rockets NestJS Cache module offers a\ncomprehensive set of methods to manage cache entries programmatically from the\nAPI side. This service allows for creating, updating, retrieving, and deleting\ncache entries, as well as managing cache entries for specific assignees. Below\nis an overview of how to use these services in your application.","creating-a-cache-entry#Creating a Cache Entry":"To create a new cache entry, you can use the create method of the CacheService.\nThis method requires specifying the cache assignment, the cache data, and\noptionally, query options.","cacheservice-methods-documentation#CacheService Methods Documentation":"CacheService is exported in the CacheModule, so\nBelow is a simple documentation for each method in the CacheService class, including\nexamples of how to use them.","1-createassignment-cache-queryoptions#1. create(assignment, cache, queryOptions)":"Creates a new cache entry.Parameters:\nassignment: The cache assignment.\ncache: The data to create, implementing CacheCreatableInterface.\nqueryOptions: Optional. Additional options for the query.\nExample:\nCreate a cache entry with a unique combination of key, type, and assignee.id:\nawait cacheService.create('userCache', {\n  key: 'userSession',\n  type: 'session',\n  data: { sessionData: 'abc123' },\n  assignee: { id: 'user1' },\n  expiresIn: '24h'\n});","2-updateassignment-cache-queryoptions#2. update(assignment, cache, queryOptions)":"Updates an existing cache entry.Parameters:\nassignment: The cache assignment.\ncache: The data to update, implementing CacheUpdatableInterface.\nqueryOptions: Optional. Additional options for the query.\nExample:\nUpdate a cache entry identified by key, type, and assignee.id:\nawait cacheService.update('userCache', {\n  key: 'userSession',\n  type: 'session',\n  data: { sessionData: 'updated123' },\n  assignee: { id: 'user1' }\n});","3-deleteassignment-cache-queryoptions#3. delete(assignment, cache, queryOptions)":"Deletes a cache entry.Parameters:\nassignment: The cache assignment.\ncache: The cache to delete, specifying key, type, and assignee.\nExample:\nDelete a cache entry using key, type, and assignee.id:\nawait cacheService.delete('userCache', {\n  key: 'userSession',\n  type: 'session',\n  assignee: { id: 'user1' }\n});","4-getassignedcachesassignment-cache-queryoptions#4. getAssignedCaches(assignment, cache, queryOptions)":"Retrieves all cache entries for a given assignee.Parameters:\nassignment: The cache assignment.\ncache: The cache to get assignments, specifying assignee.\nExample:\nRetrieve all caches for a specific assignee:\nconst caches = await cacheService.getAssignedCaches('userCache', { assignee: { id: 'userId' } });","5-getassignment-cache-queryoptions#5. get(assignment, cache, queryOptions)":"Retrieves a specific cache entry.Parameters:\nassignment: The cache assignment.\ncache: The cache to get, specifying key, type, and assignee.\nExample:\nRetrieve a specific cache entry using key, type, and assignee.id:\nconst cacheEntry = await cacheService.get('userCache', {\n  key: 'userSession',\n  type: 'session',\n  assignee: { id: 'user1' }\n});","6-clearassignment-cache-queryoptions#6. clear(assignment, cache, queryOptions)":"Clears all caches for a given assignee.Parameters:\nassignment: The cache assignment.\ncache: The cache to clear, specifying assignee.\nExample:\nClear all caches for a specific assignee:\nawait cacheService.clear('userCache', { assignee: { id: 'user1' } });\nThese methods provide a comprehensive interface for managing cache entries in a\nNestJS application using the CacheService. Each method supports optional query\noptions for more granular control over the database operations.For detailed information on the properties, methods, and classes used in the\n@concepta/nestjs-cache, please refer to the API documentation\navailable at CacheModule API Documentation. This documentation provides\ncomprehensive details on the interfaces and services that you can utilize to\nstart using cache functionality within your NestJS application.","conceptual-overview-of-caching#Conceptual Overview of Caching":"","what-is-caching#What is Caching?":"Caching is a technique used to store copies of data in a temporary storage location\n(cache) so that future requests for that data can be served faster. It helps in\nreducing the time required to access data and decreases the load on the primary\ndata source.","benefits-of-using-cache#Benefits of Using Cache":"Improved Performance: By serving data from the cache, applications can\nrespond to requests faster than retrieving the data from the primary source\neach time.\nReduced Latency: Caching reduces the latency involved in data retrieval\noperations, improving the user experience.\nLower Database Load: By reducing the number of direct database queries,\ncaching helps in decreasing the load on the database, leading to better overall\nperformance.\nScalability: Caching allows applications to handle higher loads by serving\nfrequent requests from the cache instead of the database.","why-use-nestjs-rockets-cache#Why Use NestJS Rockets Cache?":"NestJS Cache provides a powerful and flexible caching solution that integrates\nseamlessly with the NestJS framework and stores your cache on the database, so\nyou can reuse it in any other part of your application or even in other\napplications that are calling your API. It allows developers to manage cached\ndata efficiently and provides built-in support for CRUD operations on cache\nentries. Here are some key reasons to use NestJS Cache:\nIntegration with NestJS Ecosystem: The module integrates well with other\nNestJS modules and leverages the framework's features, such as decorators and\ndependency injection.\nCustomizable and Extensible: It allows for customization through various\nconfiguration options and can be extended with custom services and guards.\nEase of Use: The module provides straightforward APIs for managing cache\nentries, making it easy to implement caching in your application.\nAutomatic Expiration Handling: The module can automatically handle\nexpiration times for cache entries, ensuring that stale data is not served.","when-to-use-nestjs-cache#When to Use NestJS Cache":"NestJS Cache is useful in scenarios where data is frequently accessed but does\nnot change often. It is also beneficial when the performance of data retrieval\noperations needs to be improved. Here are some examples of when to use NestJS\nCache:\nStoring Filters for a Specific Dashboard: If you have a dashboard with\ncomplex filters that are expensive to compute, you can cache the filters for\neach user. This way, subsequent requests can be served from the cache, reducing\nthe load on the server and improving response times.\nExample:\nWhen a user applies a filter on a dashboard, the filter settings can be cached.\nThe next time the user accesses the dashboard, the cached filter can be retrieved\nquickly without recomputing it.","how-cacheoptionsinterface-is-used-in-the-controller-and-endpoints#How CacheOptionsInterface is Used in the Controller and Endpoints":"The CacheSettingsInterface and CacheOptionsInterface are used to configure\nthe caching behavior in the CacheCrudController. The CacheCrudController\nprovides endpoints for CRUD operations on cache entries and uses these\ninterfaces to manage the settings and services for each cache assignment.\nCacheSettingsInterface manages how entities are assigned for caching and\nspecifies the expiration time for cache entries. It is used to ensure the\ncorrect service and configuration are applied to each cache assignment.\nCacheOptionsInterface includes the settings for managing cache assignments\nand expiration times. It is used to register and configure the CacheModule,\ndetermining which entities should be cached and how they should be handled.\nBy using these interfaces, the CacheCrudController can dynamically handle\ndifferent cache assignments and provide a consistent caching strategy across\nthe application. The endpoints in the controller allow for creating, reading,\nupdating, and deleting cache entries, ensuring that the caching behavior is\nflexible and easily configurable.","design-choices-in-cachemodule#Design Choices in CacheModule":"","global-vs-synchronous-vs-asynchronous-registration#Global vs Synchronous vs Asynchronous Registration":"Global Registration: Registers the CacheModule at the root level, making it\navailable throughout the entire application. It is useful for shared\nconfigurations that need to be applied universally.\nSynchronous Registration: This method is used when all configuration options\nare available at the time of module registration. It is simple and\nstraightforward, making it suitable for most use cases.\nAsynchronous Registration: This method is used when configuration options\nneed to be fetched or computed asynchronously. It provides greater flexibility\nand is useful for advanced scenarios where configuration depends on runtime\nconditions."}},"/reference/rockets/nestjs-exception/classes/RuntimeException":{"title":"Class: RuntimeException","data":{"":"@concepta/nestjs-exception • DocsPackages Example / @concepta/nestjs-exception / RuntimeException","extends#Extends":"Error","implements#Implements":"RuntimeExceptionInterface","constructors#Constructors":"","new-runtimeexception#new RuntimeException()":"new RuntimeException(options): RuntimeException","parameters#Parameters":"• options: RuntimeExceptionOptions= undefined","returns#Returns":"RuntimeException","overrides#Overrides":"Error.constructor","source#Source":".tmp/repos/rockets/packages/nestjs-exception/src/exceptions/runtime.exception.ts:17","properties#Properties":"","_errorcode#_errorCode":"private _errorCode: string = 'RUNTIME_EXCEPTION'","source-1#Source":".tmp/repos/rockets/packages/nestjs-exception/src/exceptions/runtime.exception.ts:12","_httpstatus#_httpStatus":"private _httpStatus: HttpStatus = HttpStatus.INTERNAL_SERVER_ERROR","source-2#Source":".tmp/repos/rockets/packages/nestjs-exception/src/exceptions/runtime.exception.ts:13","_safemessage#_safeMessage?":"private optional _safeMessage: string","source-3#Source":".tmp/repos/rockets/packages/nestjs-exception/src/exceptions/runtime.exception.ts:14","context#context":"context: RuntimeExceptionContext = {}\nAdditional context","implementation-of#Implementation of":"RuntimeExceptionInterface.context","source-4#Source":".tmp/repos/rockets/packages/nestjs-exception/src/exceptions/runtime.exception.ts:15","message#message":"message: string","implementation-of-1#Implementation of":"RuntimeExceptionInterface.message","inherited-from#Inherited from":"Error.message","source-5#Source":"node_modules/typescript/lib/lib.es5.d.ts:1054","name#name":"name: string","implementation-of-2#Implementation of":"RuntimeExceptionInterface.name","inherited-from-1#Inherited from":"Error.name","source-6#Source":"node_modules/typescript/lib/lib.es5.d.ts:1053","stack#stack?":"optional stack: string","implementation-of-3#Implementation of":"RuntimeExceptionInterface.stack","inherited-from-2#Inherited from":"Error.stack","source-7#Source":"node_modules/typescript/lib/lib.es5.d.ts:1055","preparestacktrace#prepareStackTrace()?":"static optional prepareStackTrace: (err, stackTraces) => any\nOptional override for formatting stack traces","see#See":"https://v8.dev/docs/stack-trace-api#customizing-stack-traces","parameters-1#Parameters":"• err: Error• stackTraces: CallSite[]","returns-1#Returns":"any","inherited-from-3#Inherited from":"Error.prepareStackTrace","source-8#Source":".tmp/repos/rockets/node_modules/@types/node/globals.d.ts:11","stacktracelimit#stackTraceLimit":"static stackTraceLimit: number","inherited-from-4#Inherited from":"Error.stackTraceLimit","source-9#Source":".tmp/repos/rockets/node_modules/@types/node/globals.d.ts:13","accessors#Accessors":"","errorcode#errorCode":"get errorCode(): string\nThe error code.\nset errorCode(v): void\nThe error code.","parameters-2#Parameters":"• v: string","returns-2#Returns":"string","source-10#Source":".tmp/repos/rockets/packages/nestjs-exception/src/exceptions/runtime.exception.ts:42","httpstatus#httpStatus":"get httpStatus(): HttpStatus\nOptional HTTP status code to use only when this exception is sent over an HTTP service.Please consider this to be a hint for API error responses.","returns-3#Returns":"HttpStatus","source-11#Source":".tmp/repos/rockets/packages/nestjs-exception/src/exceptions/runtime.exception.ts:50","safemessage#safeMessage":"get safeMessage(): undefined | string\nIf set, this message will be used on responses instead of message.Use this when the main message might expose","returns-4#Returns":"undefined | string","source-12#Source":".tmp/repos/rockets/packages/nestjs-exception/src/exceptions/runtime.exception.ts:54","methods#Methods":"","capturestacktrace#captureStackTrace()":"static captureStackTrace(targetObject, constructorOpt?): void\nCreate .stack property on a target object","parameters-3#Parameters":"• targetObject: object• constructorOpt?: Function","returns-5#Returns":"void","inherited-from-5#Inherited from":"Error.captureStackTrace","source-13#Source":".tmp/repos/rockets/node_modules/@types/node/globals.d.ts:4"}},"/reference/rockets/nestjs-exception/interfaces/RuntimeExceptionInterface":{"title":"Interface: RuntimeExceptionInterface","data":{"":"@concepta/nestjs-exception • DocsPackages Example / @concepta/nestjs-exception / RuntimeExceptionInterface","extends#Extends":"ExceptionInterface","properties#Properties":"","context#context":"context: RuntimeExceptionContext\nAdditional context","overrides#Overrides":"ExceptionInterface.context","source#Source":".tmp/repos/rockets/packages/nestjs-exception/src/interfaces/runtime-exception.interface.ts:23","errorcode#errorCode":"errorCode: string\nThe error code.","inherited-from#Inherited from":"ExceptionInterface.errorCode","source-1#Source":".tmp/repos/rockets/packages/ts-core/src/exceptions/interfaces/exception.interface.ts:7","httpstatus#httpStatus?":"optional httpStatus: HttpStatus\nOptional HTTP status code to use only when this exception is sent over an HTTP service.Please consider this to be a hint for API error responses.","source-2#Source":".tmp/repos/rockets/packages/nestjs-exception/src/interfaces/runtime-exception.interface.ts:11","message#message":"message: string","inherited-from-1#Inherited from":"ExceptionInterface.message","source-3#Source":"node_modules/typescript/lib/lib.es5.d.ts:1054","name#name":"name: string","inherited-from-2#Inherited from":"ExceptionInterface.name","source-4#Source":"node_modules/typescript/lib/lib.es5.d.ts:1053","safemessage#safeMessage?":"optional safeMessage: string\nIf set, this message will be used on responses instead of message.Use this when the main message might expose","source-5#Source":".tmp/repos/rockets/packages/nestjs-exception/src/interfaces/runtime-exception.interface.ts:18","stack#stack?":"optional stack: string","inherited-from-3#Inherited from":"ExceptionInterface.stack","source-6#Source":"node_modules/typescript/lib/lib.es5.d.ts:1055"}},"/reference/rockets/nestjs-exception/interfaces/RuntimeExceptionOptions":{"title":"Interface: RuntimeExceptionOptions","data":{"":"@concepta/nestjs-exception • DocsPackages Example / @concepta/nestjs-exception / RuntimeExceptionOptions","properties#Properties":"","httpstatus#httpStatus?":"optional httpStatus: HttpStatus","source#Source":".tmp/repos/rockets/packages/nestjs-exception/src/interfaces/runtime-exception-options.interface.ts:4","message#message?":"optional message: string","source-1#Source":".tmp/repos/rockets/packages/nestjs-exception/src/interfaces/runtime-exception-options.interface.ts:5","messageparams#messageParams?":"optional messageParams: (string | number)[]","source-2#Source":".tmp/repos/rockets/packages/nestjs-exception/src/interfaces/runtime-exception-options.interface.ts:6","originalerror#originalError?":"optional originalError: unknown","source-3#Source":".tmp/repos/rockets/packages/nestjs-exception/src/interfaces/runtime-exception-options.interface.ts:9","safemessage#safeMessage?":"optional safeMessage: string","source-4#Source":".tmp/repos/rockets/packages/nestjs-exception/src/interfaces/runtime-exception-options.interface.ts:7","safemessageparams#safeMessageParams?":"optional safeMessageParams: (string | number)[]","source-5#Source":".tmp/repos/rockets/packages/nestjs-exception/src/interfaces/runtime-exception-options.interface.ts:8"}},"/reference/rockets/nestjs-logger/classes/LoggerSentryTransport":{"title":"Class: LoggerSentryTransport","data":{"":"@concepta/nestjs-logger • DocsPackages Example / @concepta/nestjs-logger / LoggerSentryTransportThe transport that implements LoggerTransportInterface\nto be used on LoggerService to log external messages","example#Example":"// Get the transport instance\nconst sentry = app.get(LoggerSentryTransport);\n// Add the transports you want to use\ncustomLogger.addTransport(sentry);","implements#Implements":"LoggerTransportInterface","constructors#Constructors":"","new-loggersentrytransport#new LoggerSentryTransport()":"new LoggerSentryTransport(config): LoggerSentryTransport\nConstructor","parameters#Parameters":"• config: LoggerSentryConfigInterfaceconfiguration file injected","returns#Returns":"LoggerSentryTransport","source#Source":"packages/nestjs-logger/src/transports/logger-sentry.transport.ts:26","properties#Properties":"","config#config":"protected readonly config: LoggerSentryConfigInterface\nconfiguration file injected","source-1#Source":"packages/nestjs-logger/src/transports/logger-sentry.transport.ts:26","methods#Methods":"","log#log()":"log(message, logLevel, error?): void\nMethod to log message to Sentry transport","parameters-1#Parameters":"• message: string• logLevel: LogLevel• error?: string | Error","returns-1#Returns":"void","implementation-of#Implementation of":"LoggerTransportInterface.log","source-2#Source":"packages/nestjs-logger/src/transports/logger-sentry.transport.ts:42"}},"/reference/rockets/nestjs-logger/classes/LoggerRequestInterceptor":{"title":"Class: LoggerRequestInterceptor","data":{"":"@concepta/nestjs-logger • DocsPackages Example / @concepta/nestjs-logger / LoggerRequestInterceptorThe Interceptor to log message for all requests and response errors.","implements#Implements":"NestInterceptor<Response>","constructors#Constructors":"","new-loggerrequestinterceptor#new LoggerRequestInterceptor()":"new LoggerRequestInterceptor(loggerService): LoggerRequestInterceptor\nConstructor","parameters#Parameters":"• loggerService: LoggerServiceThe logger service that implements ConsoleLogger","returns#Returns":"LoggerRequestInterceptor","source#Source":"packages/nestjs-logger/src/logger-request.interceptor.ts:29","properties#Properties":"","loggerservice#loggerService":"private loggerService: LoggerService\nThe logger service that implements ConsoleLogger","source-1#Source":"packages/nestjs-logger/src/logger-request.interceptor.ts:29","methods#Methods":"","intercept#intercept()":"intercept(context, next): Observable<Response>\nMethod to implement a custom intercept","parameters-1#Parameters":"• context: ExecutionContext• next: CallHandler<any>","returns-1#Returns":"Observable<Response>","implementation-of#Implementation of":"NestInterceptor.intercept","source-2#Source":"packages/nestjs-logger/src/logger-request.interceptor.ts:38","responseerror#responseError()":"responseError(req, res, startDate, error): Observable<never>\nFormat exception error","parameters-2#Parameters":"• req: FastifyRequest<RouteGenericInterface, Server, IncomingMessage, unknown, FastifyLoggerInstance>• res: Response• startDate: Date• error: Error","returns-2#Returns":"Observable<never>","source-3#Source":"packages/nestjs-logger/src/logger-request.interceptor.ts:88","responsesuccess#responseSuccess()":"responseSuccess(req, res, startDate): void\nMethod to log response success","parameters-3#Parameters":"• req: FastifyRequest<RouteGenericInterface, Server, IncomingMessage, unknown, FastifyLoggerInstance>Request• res: ResponseResponse• startDate: Datethe date for the message","returns-3#Returns":"void","source-4#Source":"packages/nestjs-logger/src/logger-request.interceptor.ts:67"}},"/reference/rockets/nestjs-core/interfaces/AsyncModuleConfig":{"title":"Interface: AsyncModuleConfig<T>","data":{"":"@concepta/nestjs-core • DocsPackages Example / @concepta/nestjs-core / AsyncModuleConfig","extends#Extends":"Pick<ModuleMetadata, \"imports\" | \"exports\">","type-parameters#Type parameters":"• T","properties#Properties":"","exports#exports?":"optional exports: (string | symbol | Function | DynamicModule | Promise<DynamicModule> | ForwardReference<any> | Provider<any> | Abstract<any>)[]\nOptional list of the subset of providers that are provided by this module\nand should be available in other modules which import this module.","inherited-from#Inherited from":"Pick.exports","source#Source":"node_modules/@nestjs/common/interfaces/modules/module-metadata.interface.d.ts:33","imports#imports?":"optional imports: (Type<any> | DynamicModule | Promise<DynamicModule> | ForwardReference<any>)[]\nOptional list of imported modules that export the providers which are\nrequired in this module.","inherited-from-1#Inherited from":"Pick.imports","source-1#Source":"node_modules/@nestjs/common/interfaces/modules/module-metadata.interface.d.ts:18","inject#inject?":"optional inject: any[]","source-2#Source":"node_modules/@golevelup/nestjs-modules/lib/dynamicModules.d.ts:15","useclass#useClass?":"optional useClass: Type<ModuleConfigFactory<T>>","source-3#Source":"node_modules/@golevelup/nestjs-modules/lib/dynamicModules.d.ts:13","useexisting#useExisting?":"optional useExisting: object","provide#provide?":"optional provide: InjectionToken","value#value":"value: ModuleConfigFactory<T>","source-4#Source":"node_modules/@golevelup/nestjs-modules/lib/dynamicModules.d.ts:9","usefactory#useFactory()?":"optional useFactory: (...args) => T | Promise<T>","parameters#Parameters":"• ...args: any[]","returns#Returns":"T | Promise<T>","source-5#Source":"node_modules/@golevelup/nestjs-modules/lib/dynamicModules.d.ts:14"}}}